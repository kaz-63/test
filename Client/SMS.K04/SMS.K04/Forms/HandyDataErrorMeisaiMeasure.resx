<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="GrapeCity.Win.WorkBook.v40" name="GrapeCity.Win.WorkBook.v40, Version=4.0.2008.1215, Culture=neutral, PublicKeyToken=a26afe6ac959b1f8" />
  <data name="shtMeisai.Data" type="GrapeCity.Win.ElTabelle.SheetData, GrapeCity.Win.WorkBook.v40" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAgAAAAAKOTk5OTk5OTk5OQAKOTk5OTk5OTk5OQAKOTk5OTk5OTk5OTYAAAAAAAAAAQAAAAEAqAgA
        AAIAAAADAAAAAQAAAAABAQAAAAAAAAAAAAEAAAAAAAAAAgAAAAACT0sAAk9LAAJPS/4AAAAAAAAAAgAA
        AAEAoAgAAAMAAAABAAAAAAEBAAAAAAAAAAAAAQAAAAAAAAACAAAAAEZNTU1NTU1NTU1XTU1NTU1NTU1N
        V01NTU1NTU1NTVdNTU1NTU1NTU1XTU1NTU1NTU1NV01NTU1NTU1NTVdNTU1NTU1NTU1XAEZNTU1NTU1N
        TU1XTU1NTU1NTU1NV01NTU1NTU1NTVdNTU1NTU1NTU1XTU1NTU1NTU1NV01NTU1NTU1NTVdNTU1NTU1N
        TU1XAEZNTU1NTU1NTU1XTU1NTU1NTU1NV01NTU1NTU1NTVdNTU1NTU1NTU1XTU1NTU1NTU1NV01NTU1N
        TU1NTVdNTU1NTU1NTU1XEQAAAAAAAAADAAAAAQEBAQAAAAAAAAAAAAAAAAARAAAAAAAAAAQAAAABAQEB
        AAAAAAAAAAAAAAAAAHgAAAAAAwAAAAEABgAAAAABBgAAAAABAAAAAQAAAFoAAAABBQAAAAEAAAAABQAA
        AAAAAAAAAAEAAAABAQAgAAAAAQBAQAAAAAAAAP8AAQAAAP8BAAAA/wEAAAD/AQAAAP8ABAAAAAAAAAAA
        BAAAAAAAAAAABAAAAAAAAAB4AAAAAAMAAAABAAYAAAAAAQYAAAAAAQAAAAEAAABaAAAAAQEAAAABAAAA
        AAUAAAAAAAAAAAABAAAAAQEAIAAAAAEAQEAAAAAAAAD/AAEAAAD/AQAAAP8BAAAA/wEAAAD/AAQAAAAA
        AAAAAAQAAAAAAAAAAAQAAAAAAAAAeAAAAAADAAAAAQAGAAAAAAEGAAAAAAEAAAABAAAAWgAAAAEBAAAA
        AQAAAAAFAAAAAAAAAAAAAQAAAAEBACAAAAABAEBAAAAAAAAA/wABAAAA/wEAAAD/AQAAAP8BAAAA/wAE
        AAAAAAAAAAAEAAAAAAAAAAAEAAAAAAAAAHgAAAAAAwAAAAEABgAAAAABBgAAAAABAAAAAQAAAFoAAAAB
        AQAAAAEAAAAABQAAAAAAAAAAAAEAAAABAQAgAAAAAQBAQAAAAAAAAP8AAQAAAP8BAAAA/wEAAAD/AQAA
        AP8ABAAAAAAAAAAABAAAAAAAAAAABAAAAAAAAAB4AAAAAAMAAAABAAYAAAAAAQYAAAAAAQAAAAEAAABa
        AAAAAQEAAAABAAAAAAUAAAAAAAAAAAABAAAAAQEAIAAAAAEAQEAAAAAAAAD/AAEAAAD/AQAAAP8BAAAA
        /wEAAAD/AAQAAAAAAAAAAAQAAAAAAAAAAAQAAAAAAAAAKgAAAAEAAQABBQAAAAMAAAABAAAAABQAAAD/
        /////////wAAAAAFAAAAAAAAACoAAAABAAEAAQUAAAADAAAAAQAAAAAUAAAA//////////8AAAAAAQAA
        AAAAAAAqAAAAAQABAAEFAAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>