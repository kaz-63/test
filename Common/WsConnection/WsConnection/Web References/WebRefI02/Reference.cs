//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.9164
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 2.0.50727.9164 によって自動生成されました。
// 
#pragma warning disable 1591

namespace WsConnection.WebRefI02 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WsI02Soap", Namespace="http://smssrv/")]
    public partial class WsI02 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTempworkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportRetryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DestroyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTempworkMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelTempWorkMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCondBaseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsI02() {
            this.Url = global::WsConnection.Properties.Settings.Default.WsConnection_smssrv_WsI02;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTempworkCompletedEventHandler GetTempworkCompleted;
        
        /// <remarks/>
        public event ImportDataCompletedEventHandler ImportDataCompleted;
        
        /// <remarks/>
        public event ImportRetryCompletedEventHandler ImportRetryCompleted;
        
        /// <remarks/>
        public event DestroyDataCompletedEventHandler DestroyDataCompleted;
        
        /// <remarks/>
        public event GetTempworkMeisaiCompletedEventHandler GetTempworkMeisaiCompleted;
        
        /// <remarks/>
        public event DelTempWorkMeisaiCompletedEventHandler DelTempWorkMeisaiCompleted;
        
        /// <remarks/>
        public event SendCondBaseCompletedEventHandler SendCondBaseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetTempwork", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTempwork(CondI02 cond) {
            object[] results = this.Invoke("GetTempwork", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTempworkAsync(CondI02 cond) {
            this.GetTempworkAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetTempworkAsync(CondI02 cond, object userState) {
            if ((this.GetTempworkOperationCompleted == null)) {
                this.GetTempworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTempworkOperationCompleted);
            }
            this.InvokeAsync("GetTempwork", new object[] {
                        cond}, this.GetTempworkOperationCompleted, userState);
        }
        
        private void OnGetTempworkOperationCompleted(object arg) {
            if ((this.GetTempworkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTempworkCompleted(this, new GetTempworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/ImportData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportData(CondI02 cond, System.Data.DataSet ds, ref System.Data.DataTable dtMessage) {
            object[] results = this.Invoke("ImportData", new object[] {
                        cond,
                        ds,
                        dtMessage});
            dtMessage = ((System.Data.DataTable)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ImportDataAsync(CondI02 cond, System.Data.DataSet ds, System.Data.DataTable dtMessage) {
            this.ImportDataAsync(cond, ds, dtMessage, null);
        }
        
        /// <remarks/>
        public void ImportDataAsync(CondI02 cond, System.Data.DataSet ds, System.Data.DataTable dtMessage, object userState) {
            if ((this.ImportDataOperationCompleted == null)) {
                this.ImportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportDataOperationCompleted);
            }
            this.InvokeAsync("ImportData", new object[] {
                        cond,
                        ds,
                        dtMessage}, this.ImportDataOperationCompleted, userState);
        }
        
        private void OnImportDataOperationCompleted(object arg) {
            if ((this.ImportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportDataCompleted(this, new ImportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/ImportRetry", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportRetry(CondI02 cond, ref System.Data.DataTable dtMessage) {
            object[] results = this.Invoke("ImportRetry", new object[] {
                        cond,
                        dtMessage});
            dtMessage = ((System.Data.DataTable)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ImportRetryAsync(CondI02 cond, System.Data.DataTable dtMessage) {
            this.ImportRetryAsync(cond, dtMessage, null);
        }
        
        /// <remarks/>
        public void ImportRetryAsync(CondI02 cond, System.Data.DataTable dtMessage, object userState) {
            if ((this.ImportRetryOperationCompleted == null)) {
                this.ImportRetryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportRetryOperationCompleted);
            }
            this.InvokeAsync("ImportRetry", new object[] {
                        cond,
                        dtMessage}, this.ImportRetryOperationCompleted, userState);
        }
        
        private void OnImportRetryOperationCompleted(object arg) {
            if ((this.ImportRetryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportRetryCompleted(this, new ImportRetryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DestroyData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DestroyData(CondI02 cond, ref System.Data.DataTable dtMessage) {
            object[] results = this.Invoke("DestroyData", new object[] {
                        cond,
                        dtMessage});
            dtMessage = ((System.Data.DataTable)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DestroyDataAsync(CondI02 cond, System.Data.DataTable dtMessage) {
            this.DestroyDataAsync(cond, dtMessage, null);
        }
        
        /// <remarks/>
        public void DestroyDataAsync(CondI02 cond, System.Data.DataTable dtMessage, object userState) {
            if ((this.DestroyDataOperationCompleted == null)) {
                this.DestroyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDestroyDataOperationCompleted);
            }
            this.InvokeAsync("DestroyData", new object[] {
                        cond,
                        dtMessage}, this.DestroyDataOperationCompleted, userState);
        }
        
        private void OnDestroyDataOperationCompleted(object arg) {
            if ((this.DestroyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DestroyDataCompleted(this, new DestroyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetTempworkMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTempworkMeisai(CondI02 cond) {
            object[] results = this.Invoke("GetTempworkMeisai", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTempworkMeisaiAsync(CondI02 cond) {
            this.GetTempworkMeisaiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetTempworkMeisaiAsync(CondI02 cond, object userState) {
            if ((this.GetTempworkMeisaiOperationCompleted == null)) {
                this.GetTempworkMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTempworkMeisaiOperationCompleted);
            }
            this.InvokeAsync("GetTempworkMeisai", new object[] {
                        cond}, this.GetTempworkMeisaiOperationCompleted, userState);
        }
        
        private void OnGetTempworkMeisaiOperationCompleted(object arg) {
            if ((this.GetTempworkMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTempworkMeisaiCompleted(this, new GetTempworkMeisaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelTempWorkMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelTempWorkMeisai(CondI02 cond, System.Data.DataTable dt, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelTempWorkMeisai", new object[] {
                        cond,
                        dt});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelTempWorkMeisaiAsync(CondI02 cond, System.Data.DataTable dt) {
            this.DelTempWorkMeisaiAsync(cond, dt, null);
        }
        
        /// <remarks/>
        public void DelTempWorkMeisaiAsync(CondI02 cond, System.Data.DataTable dt, object userState) {
            if ((this.DelTempWorkMeisaiOperationCompleted == null)) {
                this.DelTempWorkMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelTempWorkMeisaiOperationCompleted);
            }
            this.InvokeAsync("DelTempWorkMeisai", new object[] {
                        cond,
                        dt}, this.DelTempWorkMeisaiOperationCompleted, userState);
        }
        
        private void OnDelTempWorkMeisaiOperationCompleted(object arg) {
            if ((this.DelTempWorkMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelTempWorkMeisaiCompleted(this, new DelTempWorkMeisaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SendCondBase", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendCondBase(CondBase cond) {
            this.Invoke("SendCondBase", new object[] {
                        cond});
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond) {
            this.SendCondBaseAsync(cond, null);
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond, object userState) {
            if ((this.SendCondBaseOperationCompleted == null)) {
                this.SendCondBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCondBaseOperationCompleted);
            }
            this.InvokeAsync("SendCondBase", new object[] {
                        cond}, this.SendCondBaseOperationCompleted, userState);
        }
        
        private void OnSendCondBaseOperationCompleted(object arg) {
            if ((this.SendCondBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCondBaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondI02 : CondBase {
        
        private string tempIDField;
        
        private string workUserIDField;
        
        private string torikomiFlagField;
        
        private string statusFlagField;
        
        private System.DateTime torikomiDateField;
        
        private int errorNumField;
        
        private string resultField;
        
        private string inventDateField;
        
        private string messageIDField;
        
        /// <remarks/>
        public string TempID {
            get {
                return this.tempIDField;
            }
            set {
                this.tempIDField = value;
            }
        }
        
        /// <remarks/>
        public string WorkUserID {
            get {
                return this.workUserIDField;
            }
            set {
                this.workUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string TorikomiFlag {
            get {
                return this.torikomiFlagField;
            }
            set {
                this.torikomiFlagField = value;
            }
        }
        
        /// <remarks/>
        public string StatusFlag {
            get {
                return this.statusFlagField;
            }
            set {
                this.statusFlagField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TorikomiDate {
            get {
                return this.torikomiDateField;
            }
            set {
                this.torikomiDateField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNum {
            get {
                return this.errorNumField;
            }
            set {
                this.errorNumField = value;
            }
        }
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string InventDate {
            get {
                return this.inventDateField;
            }
            set {
                this.inventDateField = value;
            }
        }
        
        /// <remarks/>
        public string MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CondI02))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondBase {
        
        private LoginInfo loginInfoField;
        
        private object createDateField;
        
        private string createUserIDField;
        
        private string createUserNameField;
        
        private object updateDateField;
        
        private string updateUserIDField;
        
        private string updateUserNameField;
        
        private object mainteDateField;
        
        private string mainteUserIDField;
        
        private string mainteUserNameField;
        
        private string versionField;
        
        /// <remarks/>
        public LoginInfo LoginInfo {
            get {
                return this.loginInfoField;
            }
            set {
                this.loginInfoField = value;
            }
        }
        
        /// <remarks/>
        public object CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserID {
            get {
                return this.createUserIDField;
            }
            set {
                this.createUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserID {
            get {
                return this.updateUserIDField;
            }
            set {
                this.updateUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserName {
            get {
                return this.updateUserNameField;
            }
            set {
                this.updateUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object MainteDate {
            get {
                return this.mainteDateField;
            }
            set {
                this.mainteDateField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserID {
            get {
                return this.mainteUserIDField;
            }
            set {
                this.mainteUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserName {
            get {
                return this.mainteUserNameField;
            }
            set {
                this.mainteUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class LoginInfo {
        
        private string userIDField;
        
        private string userNameField;
        
        private string pcNameField;
        
        private string[] iPAddressField;
        
        private string roleIDField;
        
        private string roleNameField;
        
        private string languageField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string PcName {
            get {
                return this.pcNameField;
            }
            set {
                this.pcNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetTempworkCompletedEventHandler(object sender, GetTempworkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTempworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTempworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void ImportDataCompletedEventHandler(object sender, ImportDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void ImportRetryCompletedEventHandler(object sender, ImportRetryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportRetryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportRetryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DestroyDataCompletedEventHandler(object sender, DestroyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DestroyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DestroyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetTempworkMeisaiCompletedEventHandler(object sender, GetTempworkMeisaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTempworkMeisaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTempworkMeisaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelTempWorkMeisaiCompletedEventHandler(object sender, DelTempWorkMeisaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelTempWorkMeisaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelTempWorkMeisaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SendCondBaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591