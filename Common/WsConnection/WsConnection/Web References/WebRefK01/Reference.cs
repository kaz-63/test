//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.9179
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 2.0.50727.9179 によって自動生成されました。
// 
#pragma warning disable 1591

namespace WsConnection.WebRefK01 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WsK01Soap", Namespace="http://smssrv/")]
    public partial class WsK01 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetShukaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockUnLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCondBaseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsK01() {
            this.Url = global::WsConnection.Properties.Settings.Default.WsConnection_WebRefK01_WsK01;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetShukaDataCompletedEventHandler GetShukaDataCompleted;
        
        /// <remarks/>
        public event UpdMeisaiCompletedEventHandler UpdMeisaiCompleted;
        
        /// <remarks/>
        public event LockUnLockCompletedEventHandler LockUnLockCompleted;
        
        /// <remarks/>
        public event SendCondBaseCompletedEventHandler SendCondBaseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetShukaData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetShukaData(CondK01 cond, out System.Data.DataSet ds, out string errorMsgID, out string kanriNo) {
            object[] results = this.Invoke("GetShukaData", new object[] {
                        cond});
            ds = ((System.Data.DataSet)(results[1]));
            errorMsgID = ((string)(results[2]));
            kanriNo = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetShukaDataAsync(CondK01 cond) {
            this.GetShukaDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetShukaDataAsync(CondK01 cond, object userState) {
            if ((this.GetShukaDataOperationCompleted == null)) {
                this.GetShukaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShukaDataOperationCompleted);
            }
            this.InvokeAsync("GetShukaData", new object[] {
                        cond}, this.GetShukaDataOperationCompleted, userState);
        }
        
        private void OnGetShukaDataOperationCompleted(object arg) {
            if ((this.GetShukaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShukaDataCompleted(this, new GetShukaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdMeisai(CondK01 cond, System.Data.DataTable dtTagNo) {
            this.Invoke("UpdMeisai", new object[] {
                        cond,
                        dtTagNo});
        }
        
        /// <remarks/>
        public void UpdMeisaiAsync(CondK01 cond, System.Data.DataTable dtTagNo) {
            this.UpdMeisaiAsync(cond, dtTagNo, null);
        }
        
        /// <remarks/>
        public void UpdMeisaiAsync(CondK01 cond, System.Data.DataTable dtTagNo, object userState) {
            if ((this.UpdMeisaiOperationCompleted == null)) {
                this.UpdMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdMeisaiOperationCompleted);
            }
            this.InvokeAsync("UpdMeisai", new object[] {
                        cond,
                        dtTagNo}, this.UpdMeisaiOperationCompleted, userState);
        }
        
        private void OnUpdMeisaiOperationCompleted(object arg) {
            if ((this.UpdMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdMeisaiCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/LockUnLock", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LockUnLock(CondK01 cond, bool ret) {
            this.Invoke("LockUnLock", new object[] {
                        cond,
                        ret});
        }
        
        /// <remarks/>
        public void LockUnLockAsync(CondK01 cond, bool ret) {
            this.LockUnLockAsync(cond, ret, null);
        }
        
        /// <remarks/>
        public void LockUnLockAsync(CondK01 cond, bool ret, object userState) {
            if ((this.LockUnLockOperationCompleted == null)) {
                this.LockUnLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockUnLockOperationCompleted);
            }
            this.InvokeAsync("LockUnLock", new object[] {
                        cond,
                        ret}, this.LockUnLockOperationCompleted, userState);
        }
        
        private void OnLockUnLockOperationCompleted(object arg) {
            if ((this.LockUnLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockUnLockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SendCondBase", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendCondBase(CondBase cond) {
            this.Invoke("SendCondBase", new object[] {
                        cond});
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond) {
            this.SendCondBaseAsync(cond, null);
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond, object userState) {
            if ((this.SendCondBaseOperationCompleted == null)) {
                this.SendCondBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCondBaseOperationCompleted);
            }
            this.InvokeAsync("SendCondBase", new object[] {
                        cond}, this.SendCondBaseOperationCompleted, userState);
        }
        
        private void OnSendCondBaseOperationCompleted(object arg) {
            if ((this.SendCondBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCondBaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondK01 : CondBase {
        
        private string shukkaFlagField;
        
        private string nonyusakiNameField;
        
        private string shipField;
        
        private string seibanField;
        
        private string codeField;
        
        private string nounyusakiCDField;
        
        private string displaySelectField;
        
        private string aRNoField;
        
        private string operationFlagField;
        
        private string updatePCNameField;
        
        /// <remarks/>
        public string ShukkaFlag {
            get {
                return this.shukkaFlagField;
            }
            set {
                this.shukkaFlagField = value;
            }
        }
        
        /// <remarks/>
        public string NonyusakiName {
            get {
                return this.nonyusakiNameField;
            }
            set {
                this.nonyusakiNameField = value;
            }
        }
        
        /// <remarks/>
        public string Ship {
            get {
                return this.shipField;
            }
            set {
                this.shipField = value;
            }
        }
        
        /// <remarks/>
        public string Seiban {
            get {
                return this.seibanField;
            }
            set {
                this.seibanField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string NounyusakiCD {
            get {
                return this.nounyusakiCDField;
            }
            set {
                this.nounyusakiCDField = value;
            }
        }
        
        /// <remarks/>
        public string DisplaySelect {
            get {
                return this.displaySelectField;
            }
            set {
                this.displaySelectField = value;
            }
        }
        
        /// <remarks/>
        public string ARNo {
            get {
                return this.aRNoField;
            }
            set {
                this.aRNoField = value;
            }
        }
        
        /// <remarks/>
        public string OperationFlag {
            get {
                return this.operationFlagField;
            }
            set {
                this.operationFlagField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatePCName {
            get {
                return this.updatePCNameField;
            }
            set {
                this.updatePCNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CondK01))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondBase {
        
        private LoginInfo loginInfoField;
        
        private object createDateField;
        
        private string createUserIDField;
        
        private string createUserNameField;
        
        private object updateDateField;
        
        private string updateUserIDField;
        
        private string updateUserNameField;
        
        private object mainteDateField;
        
        private string mainteUserIDField;
        
        private string mainteUserNameField;
        
        private string versionField;
        
        /// <remarks/>
        public LoginInfo LoginInfo {
            get {
                return this.loginInfoField;
            }
            set {
                this.loginInfoField = value;
            }
        }
        
        /// <remarks/>
        public object CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserID {
            get {
                return this.createUserIDField;
            }
            set {
                this.createUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserID {
            get {
                return this.updateUserIDField;
            }
            set {
                this.updateUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserName {
            get {
                return this.updateUserNameField;
            }
            set {
                this.updateUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object MainteDate {
            get {
                return this.mainteDateField;
            }
            set {
                this.mainteDateField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserID {
            get {
                return this.mainteUserIDField;
            }
            set {
                this.mainteUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserName {
            get {
                return this.mainteUserNameField;
            }
            set {
                this.mainteUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class LoginInfo {
        
        private string userIDField;
        
        private string userNameField;
        
        private string pcNameField;
        
        private string[] iPAddressField;
        
        private string roleIDField;
        
        private string roleNameField;
        
        private string languageField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string PcName {
            get {
                return this.pcNameField;
            }
            set {
                this.pcNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetShukaDataCompletedEventHandler(object sender, GetShukaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShukaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShukaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string kanriNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdMeisaiCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void LockUnLockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SendCondBaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591