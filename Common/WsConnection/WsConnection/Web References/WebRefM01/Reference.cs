//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.9174
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 2.0.50727.9174 によって自動生成されました。
// 
#pragma warning disable 1591

namespace WsConnection.WebRefM01 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WsM01Soap", Namespace="http://smssrv/")]
    public partial class WsM01 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLikeSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsUserDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdUserDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelUserDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonyusakiLikeSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMikanryoAROperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdNonyusakiDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelNonyusakiDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonyusakiOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsNonyusakiDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMishukkaMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPalletDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdBoxDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdPalletDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxDataAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPalletDataAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBukkenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBukkenLikeSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsBukkenDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdBukkenDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelBukkenDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsBukkenMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsShinchokuKanriMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelectItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsSelectItemDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdSelectItemDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelSelectItemDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBasicNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsMailChangeRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommonNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCommonNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetARListNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelARListNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsMailRetryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdMailAbortOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartNameLikeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartsNameExcelDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsPartDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdPartDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelPartDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsImportedPartsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConsignLikeSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConsignOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsConsignDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdConsignDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelConsignDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliverLikeSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliverOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsDeliverDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdDeliverDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelDeliverDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnsokaisyaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnsokaisyaLikeSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsUnsoKaisyaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdUnsoKaisyaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelUnsoKaisyaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelectItemForKishuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEcsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEcsLikeSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsEcsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdEcsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelEcsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBukkenIkkatsuLikeSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBukkenIkkatsuSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsBukkenIkkatsuDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdBukkenIkkatsuDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelBukkenIkkatsuDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShinchokuKanriNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveShinchokuKanriNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInitShukkamotoHoshuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShipFromOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsShipFromOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdShipFromOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelShipFromOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsRoleAndRolemapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKeikakuTorikomiNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveKeikakuTorikomiNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCondBaseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsM01() {
            this.Url = global::WsConnection.Properties.Settings.Default.WsConnection_WebRefM01_WsM01;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetUserLikeSearchCompletedEventHandler GetUserLikeSearchCompleted;
        
        /// <remarks/>
        public event InsUserDataCompletedEventHandler InsUserDataCompleted;
        
        /// <remarks/>
        public event UpdUserDataCompletedEventHandler UpdUserDataCompleted;
        
        /// <remarks/>
        public event DelUserDataCompletedEventHandler DelUserDataCompleted;
        
        /// <remarks/>
        public event GetNonyusakiLikeSearchCompletedEventHandler GetNonyusakiLikeSearchCompleted;
        
        /// <remarks/>
        public event GetMikanryoARCompletedEventHandler GetMikanryoARCompleted;
        
        /// <remarks/>
        public event UpdNonyusakiDataCompletedEventHandler UpdNonyusakiDataCompleted;
        
        /// <remarks/>
        public event DelNonyusakiDataCompletedEventHandler DelNonyusakiDataCompleted;
        
        /// <remarks/>
        public event GetNonyusakiCompletedEventHandler GetNonyusakiCompleted;
        
        /// <remarks/>
        public event InsNonyusakiDataCompletedEventHandler InsNonyusakiDataCompleted;
        
        /// <remarks/>
        public event GetMishukkaMeisaiCompletedEventHandler GetMishukkaMeisaiCompleted;
        
        /// <remarks/>
        public event GetBoxDataCompletedEventHandler GetBoxDataCompleted;
        
        /// <remarks/>
        public event GetPalletDataCompletedEventHandler GetPalletDataCompleted;
        
        /// <remarks/>
        public event UpdBoxDataCompletedEventHandler UpdBoxDataCompleted;
        
        /// <remarks/>
        public event UpdPalletDataCompletedEventHandler UpdPalletDataCompleted;
        
        /// <remarks/>
        public event GetBoxDataAddCompletedEventHandler GetBoxDataAddCompleted;
        
        /// <remarks/>
        public event GetPalletDataAddCompletedEventHandler GetPalletDataAddCompleted;
        
        /// <remarks/>
        public event GetBukkenCompletedEventHandler GetBukkenCompleted;
        
        /// <remarks/>
        public event GetBukkenLikeSearchCompletedEventHandler GetBukkenLikeSearchCompleted;
        
        /// <remarks/>
        public event InsBukkenDataCompletedEventHandler InsBukkenDataCompleted;
        
        /// <remarks/>
        public event UpdBukkenDataCompletedEventHandler UpdBukkenDataCompleted;
        
        /// <remarks/>
        public event DelBukkenDataCompletedEventHandler DelBukkenDataCompleted;
        
        /// <remarks/>
        public event ExistsBukkenMailCompletedEventHandler ExistsBukkenMailCompleted;
        
        /// <remarks/>
        public event ExistsShinchokuKanriMailCompletedEventHandler ExistsShinchokuKanriMailCompleted;
        
        /// <remarks/>
        public event GetSelectItemCompletedEventHandler GetSelectItemCompleted;
        
        /// <remarks/>
        public event InsSelectItemDataCompletedEventHandler InsSelectItemDataCompleted;
        
        /// <remarks/>
        public event UpdSelectItemDataCompletedEventHandler UpdSelectItemDataCompleted;
        
        /// <remarks/>
        public event DelSelectItemDataCompletedEventHandler DelSelectItemDataCompleted;
        
        /// <remarks/>
        public event GetBasicNotifyCompletedEventHandler GetBasicNotifyCompleted;
        
        /// <remarks/>
        public event SaveBasicNotifyCompletedEventHandler SaveBasicNotifyCompleted;
        
        /// <remarks/>
        public event ExistsMailChangeRoleCompletedEventHandler ExistsMailChangeRoleCompleted;
        
        /// <remarks/>
        public event GetCommonNotifyCompletedEventHandler GetCommonNotifyCompleted;
        
        /// <remarks/>
        public event SaveCommonNotifyCompletedEventHandler SaveCommonNotifyCompleted;
        
        /// <remarks/>
        public event GetListFlagCompletedEventHandler GetListFlagCompleted;
        
        /// <remarks/>
        public event GetARListNotifyCompletedEventHandler GetARListNotifyCompleted;
        
        /// <remarks/>
        public event DelARListNotifyCompletedEventHandler DelARListNotifyCompleted;
        
        /// <remarks/>
        public event GetMailCompletedEventHandler GetMailCompleted;
        
        /// <remarks/>
        public event InsMailRetryCompletedEventHandler InsMailRetryCompleted;
        
        /// <remarks/>
        public event UpdMailAbortCompletedEventHandler UpdMailAbortCompleted;
        
        /// <remarks/>
        public event GetPartNameCompletedEventHandler GetPartNameCompleted;
        
        /// <remarks/>
        public event GetPartNameLikeCompletedEventHandler GetPartNameLikeCompleted;
        
        /// <remarks/>
        public event GetPartsNameExcelDataCompletedEventHandler GetPartsNameExcelDataCompleted;
        
        /// <remarks/>
        public event InsPartDataCompletedEventHandler InsPartDataCompleted;
        
        /// <remarks/>
        public event UpdPartDataCompletedEventHandler UpdPartDataCompleted;
        
        /// <remarks/>
        public event DelPartDataCompletedEventHandler DelPartDataCompleted;
        
        /// <remarks/>
        public event InsImportedPartsDataCompletedEventHandler InsImportedPartsDataCompleted;
        
        /// <remarks/>
        public event GetConsignLikeSearchCompletedEventHandler GetConsignLikeSearchCompleted;
        
        /// <remarks/>
        public event GetConsignCompletedEventHandler GetConsignCompleted;
        
        /// <remarks/>
        public event InsConsignDataCompletedEventHandler InsConsignDataCompleted;
        
        /// <remarks/>
        public event UpdConsignDataCompletedEventHandler UpdConsignDataCompleted;
        
        /// <remarks/>
        public event DelConsignDataCompletedEventHandler DelConsignDataCompleted;
        
        /// <remarks/>
        public event GetDeliverLikeSearchCompletedEventHandler GetDeliverLikeSearchCompleted;
        
        /// <remarks/>
        public event GetDeliverCompletedEventHandler GetDeliverCompleted;
        
        /// <remarks/>
        public event InsDeliverDataCompletedEventHandler InsDeliverDataCompleted;
        
        /// <remarks/>
        public event UpdDeliverDataCompletedEventHandler UpdDeliverDataCompleted;
        
        /// <remarks/>
        public event DelDeliverDataCompletedEventHandler DelDeliverDataCompleted;
        
        /// <remarks/>
        public event GetUnsokaisyaCompletedEventHandler GetUnsokaisyaCompleted;
        
        /// <remarks/>
        public event GetUnsokaisyaLikeSearchCompletedEventHandler GetUnsokaisyaLikeSearchCompleted;
        
        /// <remarks/>
        public event InsUnsoKaisyaDataCompletedEventHandler InsUnsoKaisyaDataCompleted;
        
        /// <remarks/>
        public event UpdUnsoKaisyaDataCompletedEventHandler UpdUnsoKaisyaDataCompleted;
        
        /// <remarks/>
        public event DelUnsoKaisyaDataCompletedEventHandler DelUnsoKaisyaDataCompleted;
        
        /// <remarks/>
        public event GetProjectCompletedEventHandler GetProjectCompleted;
        
        /// <remarks/>
        public event GetSelectItemForKishuCompletedEventHandler GetSelectItemForKishuCompleted;
        
        /// <remarks/>
        public event GetEcsCompletedEventHandler GetEcsCompleted;
        
        /// <remarks/>
        public event GetEcsLikeSearchCompletedEventHandler GetEcsLikeSearchCompleted;
        
        /// <remarks/>
        public event InsEcsDataCompletedEventHandler InsEcsDataCompleted;
        
        /// <remarks/>
        public event UpdEcsDataCompletedEventHandler UpdEcsDataCompleted;
        
        /// <remarks/>
        public event DelEcsDataCompletedEventHandler DelEcsDataCompleted;
        
        /// <remarks/>
        public event GetBukkenIkkatsuLikeSearchCompletedEventHandler GetBukkenIkkatsuLikeSearchCompleted;
        
        /// <remarks/>
        public event GetBukkenIkkatsuSearchCompletedEventHandler GetBukkenIkkatsuSearchCompleted;
        
        /// <remarks/>
        public event InsBukkenIkkatsuDataCompletedEventHandler InsBukkenIkkatsuDataCompleted;
        
        /// <remarks/>
        public event UpdBukkenIkkatsuDataCompletedEventHandler UpdBukkenIkkatsuDataCompleted;
        
        /// <remarks/>
        public event DelBukkenIkkatsuDataCompletedEventHandler DelBukkenIkkatsuDataCompleted;
        
        /// <remarks/>
        public event GetShinchokuKanriNotifyCompletedEventHandler GetShinchokuKanriNotifyCompleted;
        
        /// <remarks/>
        public event SaveShinchokuKanriNotifyCompletedEventHandler SaveShinchokuKanriNotifyCompleted;
        
        /// <remarks/>
        public event GetInitShukkamotoHoshuCompletedEventHandler GetInitShukkamotoHoshuCompleted;
        
        /// <remarks/>
        public event GetShipFromCompletedEventHandler GetShipFromCompleted;
        
        /// <remarks/>
        public event InsShipFromCompletedEventHandler InsShipFromCompleted;
        
        /// <remarks/>
        public event UpdShipFromCompletedEventHandler UpdShipFromCompleted;
        
        /// <remarks/>
        public event DelShipFromCompletedEventHandler DelShipFromCompleted;
        
        /// <remarks/>
        public event ExistsRoleAndRolemapCompletedEventHandler ExistsRoleAndRolemapCompleted;
        
        /// <remarks/>
        public event GetKeikakuTorikomiNotifyCompletedEventHandler GetKeikakuTorikomiNotifyCompleted;
        
        /// <remarks/>
        public event SaveKeikakuTorikomiNotifyCompletedEventHandler SaveKeikakuTorikomiNotifyCompleted;
        
        /// <remarks/>
        public event SendCondBaseCompletedEventHandler SendCondBaseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetUser", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUser(CondM01 cond) {
            object[] results = this.Invoke("GetUser", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(CondM01 cond) {
            this.GetUserAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(CondM01 cond, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        cond}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetUserLikeSearch", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserLikeSearch(CondM01 cond) {
            object[] results = this.Invoke("GetUserLikeSearch", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLikeSearchAsync(CondM01 cond) {
            this.GetUserLikeSearchAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetUserLikeSearchAsync(CondM01 cond, object userState) {
            if ((this.GetUserLikeSearchOperationCompleted == null)) {
                this.GetUserLikeSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLikeSearchOperationCompleted);
            }
            this.InvokeAsync("GetUserLikeSearch", new object[] {
                        cond}, this.GetUserLikeSearchOperationCompleted, userState);
        }
        
        private void OnGetUserLikeSearchOperationCompleted(object arg) {
            if ((this.GetUserLikeSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLikeSearchCompleted(this, new GetUserLikeSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsUserData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsUserData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsUserData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsUserDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsUserDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsUserDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsUserDataOperationCompleted == null)) {
                this.InsUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsUserDataOperationCompleted);
            }
            this.InvokeAsync("InsUserData", new object[] {
                        cond,
                        ds}, this.InsUserDataOperationCompleted, userState);
        }
        
        private void OnInsUserDataOperationCompleted(object arg) {
            if ((this.InsUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsUserDataCompleted(this, new InsUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdUserData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdUserData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdUserData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdUserDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdUserDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdUserDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdUserDataOperationCompleted == null)) {
                this.UpdUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdUserDataOperationCompleted);
            }
            this.InvokeAsync("UpdUserData", new object[] {
                        cond,
                        ds}, this.UpdUserDataOperationCompleted, userState);
        }
        
        private void OnUpdUserDataOperationCompleted(object arg) {
            if ((this.UpdUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdUserDataCompleted(this, new UpdUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelUserData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelUserData(CondM01 cond, ref System.Data.DataSet ds, out bool isMultiError) {
            object[] results = this.Invoke("DelUserData", new object[] {
                        cond,
                        ds});
            ds = ((System.Data.DataSet)(results[1]));
            isMultiError = ((bool)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelUserDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelUserDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelUserDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelUserDataOperationCompleted == null)) {
                this.DelUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelUserDataOperationCompleted);
            }
            this.InvokeAsync("DelUserData", new object[] {
                        cond,
                        ds}, this.DelUserDataOperationCompleted, userState);
        }
        
        private void OnDelUserDataOperationCompleted(object arg) {
            if ((this.DelUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelUserDataCompleted(this, new DelUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetNonyusakiLikeSearch", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNonyusakiLikeSearch(CondM01 cond) {
            object[] results = this.Invoke("GetNonyusakiLikeSearch", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonyusakiLikeSearchAsync(CondM01 cond) {
            this.GetNonyusakiLikeSearchAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetNonyusakiLikeSearchAsync(CondM01 cond, object userState) {
            if ((this.GetNonyusakiLikeSearchOperationCompleted == null)) {
                this.GetNonyusakiLikeSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonyusakiLikeSearchOperationCompleted);
            }
            this.InvokeAsync("GetNonyusakiLikeSearch", new object[] {
                        cond}, this.GetNonyusakiLikeSearchOperationCompleted, userState);
        }
        
        private void OnGetNonyusakiLikeSearchOperationCompleted(object arg) {
            if ((this.GetNonyusakiLikeSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonyusakiLikeSearchCompleted(this, new GetNonyusakiLikeSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetMikanryoAR", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMikanryoAR(CondM01 cond) {
            object[] results = this.Invoke("GetMikanryoAR", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMikanryoARAsync(CondM01 cond) {
            this.GetMikanryoARAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetMikanryoARAsync(CondM01 cond, object userState) {
            if ((this.GetMikanryoAROperationCompleted == null)) {
                this.GetMikanryoAROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMikanryoAROperationCompleted);
            }
            this.InvokeAsync("GetMikanryoAR", new object[] {
                        cond}, this.GetMikanryoAROperationCompleted, userState);
        }
        
        private void OnGetMikanryoAROperationCompleted(object arg) {
            if ((this.GetMikanryoARCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMikanryoARCompleted(this, new GetMikanryoARCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdNonyusakiData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdNonyusakiData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdNonyusakiData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdNonyusakiDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdNonyusakiDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdNonyusakiDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdNonyusakiDataOperationCompleted == null)) {
                this.UpdNonyusakiDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdNonyusakiDataOperationCompleted);
            }
            this.InvokeAsync("UpdNonyusakiData", new object[] {
                        cond,
                        ds}, this.UpdNonyusakiDataOperationCompleted, userState);
        }
        
        private void OnUpdNonyusakiDataOperationCompleted(object arg) {
            if ((this.UpdNonyusakiDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdNonyusakiDataCompleted(this, new UpdNonyusakiDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelNonyusakiData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelNonyusakiData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelNonyusakiData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelNonyusakiDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelNonyusakiDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelNonyusakiDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelNonyusakiDataOperationCompleted == null)) {
                this.DelNonyusakiDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelNonyusakiDataOperationCompleted);
            }
            this.InvokeAsync("DelNonyusakiData", new object[] {
                        cond,
                        ds}, this.DelNonyusakiDataOperationCompleted, userState);
        }
        
        private void OnDelNonyusakiDataOperationCompleted(object arg) {
            if ((this.DelNonyusakiDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelNonyusakiDataCompleted(this, new DelNonyusakiDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetNonyusaki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNonyusaki(CondM01 cond) {
            object[] results = this.Invoke("GetNonyusaki", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonyusakiAsync(CondM01 cond) {
            this.GetNonyusakiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetNonyusakiAsync(CondM01 cond, object userState) {
            if ((this.GetNonyusakiOperationCompleted == null)) {
                this.GetNonyusakiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonyusakiOperationCompleted);
            }
            this.InvokeAsync("GetNonyusaki", new object[] {
                        cond}, this.GetNonyusakiOperationCompleted, userState);
        }
        
        private void OnGetNonyusakiOperationCompleted(object arg) {
            if ((this.GetNonyusakiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonyusakiCompleted(this, new GetNonyusakiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsNonyusakiData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsNonyusakiData(CondM01 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsNonyusakiData", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsNonyusakiDataAsync(CondM01 cond) {
            this.InsNonyusakiDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void InsNonyusakiDataAsync(CondM01 cond, object userState) {
            if ((this.InsNonyusakiDataOperationCompleted == null)) {
                this.InsNonyusakiDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsNonyusakiDataOperationCompleted);
            }
            this.InvokeAsync("InsNonyusakiData", new object[] {
                        cond}, this.InsNonyusakiDataOperationCompleted, userState);
        }
        
        private void OnInsNonyusakiDataOperationCompleted(object arg) {
            if ((this.InsNonyusakiDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsNonyusakiDataCompleted(this, new InsNonyusakiDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetMishukkaMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMishukkaMeisai(CondM01 cond) {
            object[] results = this.Invoke("GetMishukkaMeisai", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMishukkaMeisaiAsync(CondM01 cond) {
            this.GetMishukkaMeisaiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetMishukkaMeisaiAsync(CondM01 cond, object userState) {
            if ((this.GetMishukkaMeisaiOperationCompleted == null)) {
                this.GetMishukkaMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMishukkaMeisaiOperationCompleted);
            }
            this.InvokeAsync("GetMishukkaMeisai", new object[] {
                        cond}, this.GetMishukkaMeisaiOperationCompleted, userState);
        }
        
        private void OnGetMishukkaMeisaiOperationCompleted(object arg) {
            if ((this.GetMishukkaMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMishukkaMeisaiCompleted(this, new GetMishukkaMeisaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetBoxData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBoxData(CondM01 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetBoxData", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxDataAsync(CondM01 cond) {
            this.GetBoxDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetBoxDataAsync(CondM01 cond, object userState) {
            if ((this.GetBoxDataOperationCompleted == null)) {
                this.GetBoxDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxDataOperationCompleted);
            }
            this.InvokeAsync("GetBoxData", new object[] {
                        cond}, this.GetBoxDataOperationCompleted, userState);
        }
        
        private void OnGetBoxDataOperationCompleted(object arg) {
            if ((this.GetBoxDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxDataCompleted(this, new GetBoxDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetPalletData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPalletData(CondM01 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetPalletData", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPalletDataAsync(CondM01 cond) {
            this.GetPalletDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetPalletDataAsync(CondM01 cond, object userState) {
            if ((this.GetPalletDataOperationCompleted == null)) {
                this.GetPalletDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPalletDataOperationCompleted);
            }
            this.InvokeAsync("GetPalletData", new object[] {
                        cond}, this.GetPalletDataOperationCompleted, userState);
        }
        
        private void OnGetPalletDataOperationCompleted(object arg) {
            if ((this.GetPalletDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPalletDataCompleted(this, new GetPalletDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdBoxData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdBoxData(CondM01 cond, System.Data.DataTable dtManage, System.Data.DataTable dt, System.Data.DataTable dtKonpo, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdBoxData", new object[] {
                        cond,
                        dtManage,
                        dt,
                        dtKonpo});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdBoxDataAsync(CondM01 cond, System.Data.DataTable dtManage, System.Data.DataTable dt, System.Data.DataTable dtKonpo) {
            this.UpdBoxDataAsync(cond, dtManage, dt, dtKonpo, null);
        }
        
        /// <remarks/>
        public void UpdBoxDataAsync(CondM01 cond, System.Data.DataTable dtManage, System.Data.DataTable dt, System.Data.DataTable dtKonpo, object userState) {
            if ((this.UpdBoxDataOperationCompleted == null)) {
                this.UpdBoxDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdBoxDataOperationCompleted);
            }
            this.InvokeAsync("UpdBoxData", new object[] {
                        cond,
                        dtManage,
                        dt,
                        dtKonpo}, this.UpdBoxDataOperationCompleted, userState);
        }
        
        private void OnUpdBoxDataOperationCompleted(object arg) {
            if ((this.UpdBoxDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdBoxDataCompleted(this, new UpdBoxDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdPalletData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdPalletData(CondM01 cond, System.Data.DataTable dtManage, System.Data.DataTable dt, System.Data.DataTable dtKonpo, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdPalletData", new object[] {
                        cond,
                        dtManage,
                        dt,
                        dtKonpo});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdPalletDataAsync(CondM01 cond, System.Data.DataTable dtManage, System.Data.DataTable dt, System.Data.DataTable dtKonpo) {
            this.UpdPalletDataAsync(cond, dtManage, dt, dtKonpo, null);
        }
        
        /// <remarks/>
        public void UpdPalletDataAsync(CondM01 cond, System.Data.DataTable dtManage, System.Data.DataTable dt, System.Data.DataTable dtKonpo, object userState) {
            if ((this.UpdPalletDataOperationCompleted == null)) {
                this.UpdPalletDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdPalletDataOperationCompleted);
            }
            this.InvokeAsync("UpdPalletData", new object[] {
                        cond,
                        dtManage,
                        dt,
                        dtKonpo}, this.UpdPalletDataOperationCompleted, userState);
        }
        
        private void OnUpdPalletDataOperationCompleted(object arg) {
            if ((this.UpdPalletDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdPalletDataCompleted(this, new UpdPalletDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetBoxDataAdd", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBoxDataAdd(CondM01 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetBoxDataAdd", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxDataAddAsync(CondM01 cond) {
            this.GetBoxDataAddAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetBoxDataAddAsync(CondM01 cond, object userState) {
            if ((this.GetBoxDataAddOperationCompleted == null)) {
                this.GetBoxDataAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxDataAddOperationCompleted);
            }
            this.InvokeAsync("GetBoxDataAdd", new object[] {
                        cond}, this.GetBoxDataAddOperationCompleted, userState);
        }
        
        private void OnGetBoxDataAddOperationCompleted(object arg) {
            if ((this.GetBoxDataAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxDataAddCompleted(this, new GetBoxDataAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetPalletDataAdd", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPalletDataAdd(CondM01 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetPalletDataAdd", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPalletDataAddAsync(CondM01 cond) {
            this.GetPalletDataAddAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetPalletDataAddAsync(CondM01 cond, object userState) {
            if ((this.GetPalletDataAddOperationCompleted == null)) {
                this.GetPalletDataAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPalletDataAddOperationCompleted);
            }
            this.InvokeAsync("GetPalletDataAdd", new object[] {
                        cond}, this.GetPalletDataAddOperationCompleted, userState);
        }
        
        private void OnGetPalletDataAddOperationCompleted(object arg) {
            if ((this.GetPalletDataAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPalletDataAddCompleted(this, new GetPalletDataAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetBukken", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBukken(CondM01 cond) {
            object[] results = this.Invoke("GetBukken", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBukkenAsync(CondM01 cond) {
            this.GetBukkenAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetBukkenAsync(CondM01 cond, object userState) {
            if ((this.GetBukkenOperationCompleted == null)) {
                this.GetBukkenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBukkenOperationCompleted);
            }
            this.InvokeAsync("GetBukken", new object[] {
                        cond}, this.GetBukkenOperationCompleted, userState);
        }
        
        private void OnGetBukkenOperationCompleted(object arg) {
            if ((this.GetBukkenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBukkenCompleted(this, new GetBukkenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetBukkenLikeSearch", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBukkenLikeSearch(CondM01 cond) {
            object[] results = this.Invoke("GetBukkenLikeSearch", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBukkenLikeSearchAsync(CondM01 cond) {
            this.GetBukkenLikeSearchAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetBukkenLikeSearchAsync(CondM01 cond, object userState) {
            if ((this.GetBukkenLikeSearchOperationCompleted == null)) {
                this.GetBukkenLikeSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBukkenLikeSearchOperationCompleted);
            }
            this.InvokeAsync("GetBukkenLikeSearch", new object[] {
                        cond}, this.GetBukkenLikeSearchOperationCompleted, userState);
        }
        
        private void OnGetBukkenLikeSearchOperationCompleted(object arg) {
            if ((this.GetBukkenLikeSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBukkenLikeSearchCompleted(this, new GetBukkenLikeSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsBukkenData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsBukkenData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsBukkenData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsBukkenDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsBukkenDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsBukkenDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsBukkenDataOperationCompleted == null)) {
                this.InsBukkenDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsBukkenDataOperationCompleted);
            }
            this.InvokeAsync("InsBukkenData", new object[] {
                        cond,
                        ds}, this.InsBukkenDataOperationCompleted, userState);
        }
        
        private void OnInsBukkenDataOperationCompleted(object arg) {
            if ((this.InsBukkenDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsBukkenDataCompleted(this, new InsBukkenDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdBukkenData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdBukkenData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdBukkenData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdBukkenDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdBukkenDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdBukkenDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdBukkenDataOperationCompleted == null)) {
                this.UpdBukkenDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdBukkenDataOperationCompleted);
            }
            this.InvokeAsync("UpdBukkenData", new object[] {
                        cond,
                        ds}, this.UpdBukkenDataOperationCompleted, userState);
        }
        
        private void OnUpdBukkenDataOperationCompleted(object arg) {
            if ((this.UpdBukkenDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdBukkenDataCompleted(this, new UpdBukkenDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelBukkenData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelBukkenData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelBukkenData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelBukkenDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelBukkenDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelBukkenDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelBukkenDataOperationCompleted == null)) {
                this.DelBukkenDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelBukkenDataOperationCompleted);
            }
            this.InvokeAsync("DelBukkenData", new object[] {
                        cond,
                        ds}, this.DelBukkenDataOperationCompleted, userState);
        }
        
        private void OnDelBukkenDataOperationCompleted(object arg) {
            if ((this.DelBukkenDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelBukkenDataCompleted(this, new DelBukkenDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/ExistsBukkenMail", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsBukkenMail(CondM01 cond) {
            object[] results = this.Invoke("ExistsBukkenMail", new object[] {
                        cond});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsBukkenMailAsync(CondM01 cond) {
            this.ExistsBukkenMailAsync(cond, null);
        }
        
        /// <remarks/>
        public void ExistsBukkenMailAsync(CondM01 cond, object userState) {
            if ((this.ExistsBukkenMailOperationCompleted == null)) {
                this.ExistsBukkenMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsBukkenMailOperationCompleted);
            }
            this.InvokeAsync("ExistsBukkenMail", new object[] {
                        cond}, this.ExistsBukkenMailOperationCompleted, userState);
        }
        
        private void OnExistsBukkenMailOperationCompleted(object arg) {
            if ((this.ExistsBukkenMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsBukkenMailCompleted(this, new ExistsBukkenMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/ExistsShinchokuKanriMail", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsShinchokuKanriMail(CondM01 cond) {
            object[] results = this.Invoke("ExistsShinchokuKanriMail", new object[] {
                        cond});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsShinchokuKanriMailAsync(CondM01 cond) {
            this.ExistsShinchokuKanriMailAsync(cond, null);
        }
        
        /// <remarks/>
        public void ExistsShinchokuKanriMailAsync(CondM01 cond, object userState) {
            if ((this.ExistsShinchokuKanriMailOperationCompleted == null)) {
                this.ExistsShinchokuKanriMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsShinchokuKanriMailOperationCompleted);
            }
            this.InvokeAsync("ExistsShinchokuKanriMail", new object[] {
                        cond}, this.ExistsShinchokuKanriMailOperationCompleted, userState);
        }
        
        private void OnExistsShinchokuKanriMailOperationCompleted(object arg) {
            if ((this.ExistsShinchokuKanriMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsShinchokuKanriMailCompleted(this, new ExistsShinchokuKanriMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetSelectItem", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelectItem(CondM01 cond) {
            object[] results = this.Invoke("GetSelectItem", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelectItemAsync(CondM01 cond) {
            this.GetSelectItemAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetSelectItemAsync(CondM01 cond, object userState) {
            if ((this.GetSelectItemOperationCompleted == null)) {
                this.GetSelectItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelectItemOperationCompleted);
            }
            this.InvokeAsync("GetSelectItem", new object[] {
                        cond}, this.GetSelectItemOperationCompleted, userState);
        }
        
        private void OnGetSelectItemOperationCompleted(object arg) {
            if ((this.GetSelectItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelectItemCompleted(this, new GetSelectItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsSelectItemData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsSelectItemData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsSelectItemData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsSelectItemDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsSelectItemDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsSelectItemDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsSelectItemDataOperationCompleted == null)) {
                this.InsSelectItemDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsSelectItemDataOperationCompleted);
            }
            this.InvokeAsync("InsSelectItemData", new object[] {
                        cond,
                        ds}, this.InsSelectItemDataOperationCompleted, userState);
        }
        
        private void OnInsSelectItemDataOperationCompleted(object arg) {
            if ((this.InsSelectItemDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsSelectItemDataCompleted(this, new InsSelectItemDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdSelectItemData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdSelectItemData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdSelectItemData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdSelectItemDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdSelectItemDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdSelectItemDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdSelectItemDataOperationCompleted == null)) {
                this.UpdSelectItemDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdSelectItemDataOperationCompleted);
            }
            this.InvokeAsync("UpdSelectItemData", new object[] {
                        cond,
                        ds}, this.UpdSelectItemDataOperationCompleted, userState);
        }
        
        private void OnUpdSelectItemDataOperationCompleted(object arg) {
            if ((this.UpdSelectItemDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdSelectItemDataCompleted(this, new UpdSelectItemDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelSelectItemData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelSelectItemData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelSelectItemData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelSelectItemDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelSelectItemDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelSelectItemDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelSelectItemDataOperationCompleted == null)) {
                this.DelSelectItemDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelSelectItemDataOperationCompleted);
            }
            this.InvokeAsync("DelSelectItemData", new object[] {
                        cond,
                        ds}, this.DelSelectItemDataOperationCompleted, userState);
        }
        
        private void OnDelSelectItemDataOperationCompleted(object arg) {
            if ((this.DelSelectItemDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelSelectItemDataCompleted(this, new DelSelectItemDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetBasicNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicNotify(CondM01 cond) {
            object[] results = this.Invoke("GetBasicNotify", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicNotifyAsync(CondM01 cond) {
            this.GetBasicNotifyAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetBasicNotifyAsync(CondM01 cond, object userState) {
            if ((this.GetBasicNotifyOperationCompleted == null)) {
                this.GetBasicNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicNotifyOperationCompleted);
            }
            this.InvokeAsync("GetBasicNotify", new object[] {
                        cond}, this.GetBasicNotifyOperationCompleted, userState);
        }
        
        private void OnGetBasicNotifyOperationCompleted(object arg) {
            if ((this.GetBasicNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicNotifyCompleted(this, new GetBasicNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SaveBasicNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveBasicNotify(CondM01 cond, System.Data.DataSet ds, out string errMsgId, out string[] args) {
            object[] results = this.Invoke("SaveBasicNotify", new object[] {
                        cond,
                        ds});
            errMsgId = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBasicNotifyAsync(CondM01 cond, System.Data.DataSet ds) {
            this.SaveBasicNotifyAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void SaveBasicNotifyAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.SaveBasicNotifyOperationCompleted == null)) {
                this.SaveBasicNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBasicNotifyOperationCompleted);
            }
            this.InvokeAsync("SaveBasicNotify", new object[] {
                        cond,
                        ds}, this.SaveBasicNotifyOperationCompleted, userState);
        }
        
        private void OnSaveBasicNotifyOperationCompleted(object arg) {
            if ((this.SaveBasicNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBasicNotifyCompleted(this, new SaveBasicNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/ExistsMailChangeRole", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsMailChangeRole(CondM01 cond) {
            object[] results = this.Invoke("ExistsMailChangeRole", new object[] {
                        cond});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsMailChangeRoleAsync(CondM01 cond) {
            this.ExistsMailChangeRoleAsync(cond, null);
        }
        
        /// <remarks/>
        public void ExistsMailChangeRoleAsync(CondM01 cond, object userState) {
            if ((this.ExistsMailChangeRoleOperationCompleted == null)) {
                this.ExistsMailChangeRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsMailChangeRoleOperationCompleted);
            }
            this.InvokeAsync("ExistsMailChangeRole", new object[] {
                        cond}, this.ExistsMailChangeRoleOperationCompleted, userState);
        }
        
        private void OnExistsMailChangeRoleOperationCompleted(object arg) {
            if ((this.ExistsMailChangeRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsMailChangeRoleCompleted(this, new ExistsMailChangeRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetCommonNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCommonNotify(CondM01 cond) {
            object[] results = this.Invoke("GetCommonNotify", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommonNotifyAsync(CondM01 cond) {
            this.GetCommonNotifyAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetCommonNotifyAsync(CondM01 cond, object userState) {
            if ((this.GetCommonNotifyOperationCompleted == null)) {
                this.GetCommonNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommonNotifyOperationCompleted);
            }
            this.InvokeAsync("GetCommonNotify", new object[] {
                        cond}, this.GetCommonNotifyOperationCompleted, userState);
        }
        
        private void OnGetCommonNotifyOperationCompleted(object arg) {
            if ((this.GetCommonNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommonNotifyCompleted(this, new GetCommonNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SaveCommonNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveCommonNotify(CondM01 cond, System.Data.DataSet ds, out string errMsgId, out string[] args) {
            object[] results = this.Invoke("SaveCommonNotify", new object[] {
                        cond,
                        ds});
            errMsgId = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCommonNotifyAsync(CondM01 cond, System.Data.DataSet ds) {
            this.SaveCommonNotifyAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void SaveCommonNotifyAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.SaveCommonNotifyOperationCompleted == null)) {
                this.SaveCommonNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCommonNotifyOperationCompleted);
            }
            this.InvokeAsync("SaveCommonNotify", new object[] {
                        cond,
                        ds}, this.SaveCommonNotifyOperationCompleted, userState);
        }
        
        private void OnSaveCommonNotifyOperationCompleted(object arg) {
            if ((this.SaveCommonNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCommonNotifyCompleted(this, new SaveCommonNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetListFlag", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetListFlag(CondM01 cond) {
            object[] results = this.Invoke("GetListFlag", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetListFlagAsync(CondM01 cond) {
            this.GetListFlagAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetListFlagAsync(CondM01 cond, object userState) {
            if ((this.GetListFlagOperationCompleted == null)) {
                this.GetListFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListFlagOperationCompleted);
            }
            this.InvokeAsync("GetListFlag", new object[] {
                        cond}, this.GetListFlagOperationCompleted, userState);
        }
        
        private void OnGetListFlagOperationCompleted(object arg) {
            if ((this.GetListFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListFlagCompleted(this, new GetListFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetARListNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetARListNotify(CondM01 cond) {
            object[] results = this.Invoke("GetARListNotify", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetARListNotifyAsync(CondM01 cond) {
            this.GetARListNotifyAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetARListNotifyAsync(CondM01 cond, object userState) {
            if ((this.GetARListNotifyOperationCompleted == null)) {
                this.GetARListNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetARListNotifyOperationCompleted);
            }
            this.InvokeAsync("GetARListNotify", new object[] {
                        cond}, this.GetARListNotifyOperationCompleted, userState);
        }
        
        private void OnGetARListNotifyOperationCompleted(object arg) {
            if ((this.GetARListNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetARListNotifyCompleted(this, new GetARListNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelARListNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelARListNotify(CondM01 cond, System.Data.DataSet ds, out string errMsgId, out string[] args) {
            object[] results = this.Invoke("DelARListNotify", new object[] {
                        cond,
                        ds});
            errMsgId = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelARListNotifyAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelARListNotifyAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelARListNotifyAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelARListNotifyOperationCompleted == null)) {
                this.DelARListNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelARListNotifyOperationCompleted);
            }
            this.InvokeAsync("DelARListNotify", new object[] {
                        cond,
                        ds}, this.DelARListNotifyOperationCompleted, userState);
        }
        
        private void OnDelARListNotifyOperationCompleted(object arg) {
            if ((this.DelARListNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelARListNotifyCompleted(this, new DelARListNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetMail", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMail(CondM01 cond) {
            object[] results = this.Invoke("GetMail", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMailAsync(CondM01 cond) {
            this.GetMailAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetMailAsync(CondM01 cond, object userState) {
            if ((this.GetMailOperationCompleted == null)) {
                this.GetMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMailOperationCompleted);
            }
            this.InvokeAsync("GetMail", new object[] {
                        cond}, this.GetMailOperationCompleted, userState);
        }
        
        private void OnGetMailOperationCompleted(object arg) {
            if ((this.GetMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMailCompleted(this, new GetMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsMailRetry", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsMailRetry(CondM01 cond, System.Data.DataTable dt, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsMailRetry", new object[] {
                        cond,
                        dt});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsMailRetryAsync(CondM01 cond, System.Data.DataTable dt) {
            this.InsMailRetryAsync(cond, dt, null);
        }
        
        /// <remarks/>
        public void InsMailRetryAsync(CondM01 cond, System.Data.DataTable dt, object userState) {
            if ((this.InsMailRetryOperationCompleted == null)) {
                this.InsMailRetryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsMailRetryOperationCompleted);
            }
            this.InvokeAsync("InsMailRetry", new object[] {
                        cond,
                        dt}, this.InsMailRetryOperationCompleted, userState);
        }
        
        private void OnInsMailRetryOperationCompleted(object arg) {
            if ((this.InsMailRetryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsMailRetryCompleted(this, new InsMailRetryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdMailAbort", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdMailAbort(CondM01 cond, System.Data.DataTable dt, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdMailAbort", new object[] {
                        cond,
                        dt});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdMailAbortAsync(CondM01 cond, System.Data.DataTable dt) {
            this.UpdMailAbortAsync(cond, dt, null);
        }
        
        /// <remarks/>
        public void UpdMailAbortAsync(CondM01 cond, System.Data.DataTable dt, object userState) {
            if ((this.UpdMailAbortOperationCompleted == null)) {
                this.UpdMailAbortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdMailAbortOperationCompleted);
            }
            this.InvokeAsync("UpdMailAbort", new object[] {
                        cond,
                        dt}, this.UpdMailAbortOperationCompleted, userState);
        }
        
        private void OnUpdMailAbortOperationCompleted(object arg) {
            if ((this.UpdMailAbortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdMailAbortCompleted(this, new UpdMailAbortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetPartName", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPartName(CondM01 cond) {
            object[] results = this.Invoke("GetPartName", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartNameAsync(CondM01 cond) {
            this.GetPartNameAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetPartNameAsync(CondM01 cond, object userState) {
            if ((this.GetPartNameOperationCompleted == null)) {
                this.GetPartNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartNameOperationCompleted);
            }
            this.InvokeAsync("GetPartName", new object[] {
                        cond}, this.GetPartNameOperationCompleted, userState);
        }
        
        private void OnGetPartNameOperationCompleted(object arg) {
            if ((this.GetPartNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartNameCompleted(this, new GetPartNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetPartNameLike", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPartNameLike(CondM01 cond) {
            object[] results = this.Invoke("GetPartNameLike", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartNameLikeAsync(CondM01 cond) {
            this.GetPartNameLikeAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetPartNameLikeAsync(CondM01 cond, object userState) {
            if ((this.GetPartNameLikeOperationCompleted == null)) {
                this.GetPartNameLikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartNameLikeOperationCompleted);
            }
            this.InvokeAsync("GetPartNameLike", new object[] {
                        cond}, this.GetPartNameLikeOperationCompleted, userState);
        }
        
        private void OnGetPartNameLikeOperationCompleted(object arg) {
            if ((this.GetPartNameLikeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartNameLikeCompleted(this, new GetPartNameLikeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetPartsNameExcelData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPartsNameExcelData(CondM01 cond) {
            object[] results = this.Invoke("GetPartsNameExcelData", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartsNameExcelDataAsync(CondM01 cond) {
            this.GetPartsNameExcelDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetPartsNameExcelDataAsync(CondM01 cond, object userState) {
            if ((this.GetPartsNameExcelDataOperationCompleted == null)) {
                this.GetPartsNameExcelDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartsNameExcelDataOperationCompleted);
            }
            this.InvokeAsync("GetPartsNameExcelData", new object[] {
                        cond}, this.GetPartsNameExcelDataOperationCompleted, userState);
        }
        
        private void OnGetPartsNameExcelDataOperationCompleted(object arg) {
            if ((this.GetPartsNameExcelDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartsNameExcelDataCompleted(this, new GetPartsNameExcelDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsPartData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsPartData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsPartData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsPartDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsPartDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsPartDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsPartDataOperationCompleted == null)) {
                this.InsPartDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsPartDataOperationCompleted);
            }
            this.InvokeAsync("InsPartData", new object[] {
                        cond,
                        ds}, this.InsPartDataOperationCompleted, userState);
        }
        
        private void OnInsPartDataOperationCompleted(object arg) {
            if ((this.InsPartDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsPartDataCompleted(this, new InsPartDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdPartData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdPartData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdPartData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdPartDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdPartDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdPartDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdPartDataOperationCompleted == null)) {
                this.UpdPartDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdPartDataOperationCompleted);
            }
            this.InvokeAsync("UpdPartData", new object[] {
                        cond,
                        ds}, this.UpdPartDataOperationCompleted, userState);
        }
        
        private void OnUpdPartDataOperationCompleted(object arg) {
            if ((this.UpdPartDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdPartDataCompleted(this, new UpdPartDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelPartData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelPartData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelPartData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelPartDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelPartDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelPartDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelPartDataOperationCompleted == null)) {
                this.DelPartDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelPartDataOperationCompleted);
            }
            this.InvokeAsync("DelPartData", new object[] {
                        cond,
                        ds}, this.DelPartDataOperationCompleted, userState);
        }
        
        private void OnDelPartDataOperationCompleted(object arg) {
            if ((this.DelPartDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelPartDataCompleted(this, new DelPartDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsImportedPartsData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsImportedPartsData(CondM01 cond, System.Data.DataSet ds, ref System.Data.DataTable dtMessage, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsImportedPartsData", new object[] {
                        cond,
                        ds,
                        dtMessage});
            dtMessage = ((System.Data.DataTable)(results[1]));
            errMsgID = ((string)(results[2]));
            args = ((string[])(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsImportedPartsDataAsync(CondM01 cond, System.Data.DataSet ds, System.Data.DataTable dtMessage) {
            this.InsImportedPartsDataAsync(cond, ds, dtMessage, null);
        }
        
        /// <remarks/>
        public void InsImportedPartsDataAsync(CondM01 cond, System.Data.DataSet ds, System.Data.DataTable dtMessage, object userState) {
            if ((this.InsImportedPartsDataOperationCompleted == null)) {
                this.InsImportedPartsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsImportedPartsDataOperationCompleted);
            }
            this.InvokeAsync("InsImportedPartsData", new object[] {
                        cond,
                        ds,
                        dtMessage}, this.InsImportedPartsDataOperationCompleted, userState);
        }
        
        private void OnInsImportedPartsDataOperationCompleted(object arg) {
            if ((this.InsImportedPartsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsImportedPartsDataCompleted(this, new InsImportedPartsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetConsignLikeSearch", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConsignLikeSearch(CondM01 cond) {
            object[] results = this.Invoke("GetConsignLikeSearch", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConsignLikeSearchAsync(CondM01 cond) {
            this.GetConsignLikeSearchAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetConsignLikeSearchAsync(CondM01 cond, object userState) {
            if ((this.GetConsignLikeSearchOperationCompleted == null)) {
                this.GetConsignLikeSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConsignLikeSearchOperationCompleted);
            }
            this.InvokeAsync("GetConsignLikeSearch", new object[] {
                        cond}, this.GetConsignLikeSearchOperationCompleted, userState);
        }
        
        private void OnGetConsignLikeSearchOperationCompleted(object arg) {
            if ((this.GetConsignLikeSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConsignLikeSearchCompleted(this, new GetConsignLikeSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetConsign", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConsign(CondM01 cond) {
            object[] results = this.Invoke("GetConsign", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConsignAsync(CondM01 cond) {
            this.GetConsignAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetConsignAsync(CondM01 cond, object userState) {
            if ((this.GetConsignOperationCompleted == null)) {
                this.GetConsignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConsignOperationCompleted);
            }
            this.InvokeAsync("GetConsign", new object[] {
                        cond}, this.GetConsignOperationCompleted, userState);
        }
        
        private void OnGetConsignOperationCompleted(object arg) {
            if ((this.GetConsignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConsignCompleted(this, new GetConsignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsConsignData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsConsignData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsConsignData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsConsignDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsConsignDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsConsignDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsConsignDataOperationCompleted == null)) {
                this.InsConsignDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsConsignDataOperationCompleted);
            }
            this.InvokeAsync("InsConsignData", new object[] {
                        cond,
                        ds}, this.InsConsignDataOperationCompleted, userState);
        }
        
        private void OnInsConsignDataOperationCompleted(object arg) {
            if ((this.InsConsignDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsConsignDataCompleted(this, new InsConsignDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdConsignData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdConsignData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdConsignData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdConsignDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdConsignDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdConsignDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdConsignDataOperationCompleted == null)) {
                this.UpdConsignDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdConsignDataOperationCompleted);
            }
            this.InvokeAsync("UpdConsignData", new object[] {
                        cond,
                        ds}, this.UpdConsignDataOperationCompleted, userState);
        }
        
        private void OnUpdConsignDataOperationCompleted(object arg) {
            if ((this.UpdConsignDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdConsignDataCompleted(this, new UpdConsignDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelConsignData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelConsignData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelConsignData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelConsignDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelConsignDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelConsignDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelConsignDataOperationCompleted == null)) {
                this.DelConsignDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelConsignDataOperationCompleted);
            }
            this.InvokeAsync("DelConsignData", new object[] {
                        cond,
                        ds}, this.DelConsignDataOperationCompleted, userState);
        }
        
        private void OnDelConsignDataOperationCompleted(object arg) {
            if ((this.DelConsignDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelConsignDataCompleted(this, new DelConsignDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetDeliverLikeSearch", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeliverLikeSearch(CondM01 cond) {
            object[] results = this.Invoke("GetDeliverLikeSearch", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliverLikeSearchAsync(CondM01 cond) {
            this.GetDeliverLikeSearchAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetDeliverLikeSearchAsync(CondM01 cond, object userState) {
            if ((this.GetDeliverLikeSearchOperationCompleted == null)) {
                this.GetDeliverLikeSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliverLikeSearchOperationCompleted);
            }
            this.InvokeAsync("GetDeliverLikeSearch", new object[] {
                        cond}, this.GetDeliverLikeSearchOperationCompleted, userState);
        }
        
        private void OnGetDeliverLikeSearchOperationCompleted(object arg) {
            if ((this.GetDeliverLikeSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliverLikeSearchCompleted(this, new GetDeliverLikeSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetDeliver", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeliver(CondM01 cond) {
            object[] results = this.Invoke("GetDeliver", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliverAsync(CondM01 cond) {
            this.GetDeliverAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetDeliverAsync(CondM01 cond, object userState) {
            if ((this.GetDeliverOperationCompleted == null)) {
                this.GetDeliverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliverOperationCompleted);
            }
            this.InvokeAsync("GetDeliver", new object[] {
                        cond}, this.GetDeliverOperationCompleted, userState);
        }
        
        private void OnGetDeliverOperationCompleted(object arg) {
            if ((this.GetDeliverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliverCompleted(this, new GetDeliverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsDeliverData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsDeliverData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsDeliverData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsDeliverDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsDeliverDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsDeliverDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsDeliverDataOperationCompleted == null)) {
                this.InsDeliverDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsDeliverDataOperationCompleted);
            }
            this.InvokeAsync("InsDeliverData", new object[] {
                        cond,
                        ds}, this.InsDeliverDataOperationCompleted, userState);
        }
        
        private void OnInsDeliverDataOperationCompleted(object arg) {
            if ((this.InsDeliverDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsDeliverDataCompleted(this, new InsDeliverDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdDeliverData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdDeliverData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdDeliverData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdDeliverDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdDeliverDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdDeliverDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdDeliverDataOperationCompleted == null)) {
                this.UpdDeliverDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdDeliverDataOperationCompleted);
            }
            this.InvokeAsync("UpdDeliverData", new object[] {
                        cond,
                        ds}, this.UpdDeliverDataOperationCompleted, userState);
        }
        
        private void OnUpdDeliverDataOperationCompleted(object arg) {
            if ((this.UpdDeliverDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdDeliverDataCompleted(this, new UpdDeliverDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelDeliverData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelDeliverData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelDeliverData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelDeliverDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelDeliverDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelDeliverDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelDeliverDataOperationCompleted == null)) {
                this.DelDeliverDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelDeliverDataOperationCompleted);
            }
            this.InvokeAsync("DelDeliverData", new object[] {
                        cond,
                        ds}, this.DelDeliverDataOperationCompleted, userState);
        }
        
        private void OnDelDeliverDataOperationCompleted(object arg) {
            if ((this.DelDeliverDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelDeliverDataCompleted(this, new DelDeliverDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetUnsokaisya", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnsokaisya(CondM01 cond) {
            object[] results = this.Invoke("GetUnsokaisya", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnsokaisyaAsync(CondM01 cond) {
            this.GetUnsokaisyaAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetUnsokaisyaAsync(CondM01 cond, object userState) {
            if ((this.GetUnsokaisyaOperationCompleted == null)) {
                this.GetUnsokaisyaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnsokaisyaOperationCompleted);
            }
            this.InvokeAsync("GetUnsokaisya", new object[] {
                        cond}, this.GetUnsokaisyaOperationCompleted, userState);
        }
        
        private void OnGetUnsokaisyaOperationCompleted(object arg) {
            if ((this.GetUnsokaisyaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnsokaisyaCompleted(this, new GetUnsokaisyaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetUnsokaisyaLikeSearch", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnsokaisyaLikeSearch(CondM01 cond) {
            object[] results = this.Invoke("GetUnsokaisyaLikeSearch", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnsokaisyaLikeSearchAsync(CondM01 cond) {
            this.GetUnsokaisyaLikeSearchAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetUnsokaisyaLikeSearchAsync(CondM01 cond, object userState) {
            if ((this.GetUnsokaisyaLikeSearchOperationCompleted == null)) {
                this.GetUnsokaisyaLikeSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnsokaisyaLikeSearchOperationCompleted);
            }
            this.InvokeAsync("GetUnsokaisyaLikeSearch", new object[] {
                        cond}, this.GetUnsokaisyaLikeSearchOperationCompleted, userState);
        }
        
        private void OnGetUnsokaisyaLikeSearchOperationCompleted(object arg) {
            if ((this.GetUnsokaisyaLikeSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnsokaisyaLikeSearchCompleted(this, new GetUnsokaisyaLikeSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsUnsoKaisyaData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsUnsoKaisyaData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsUnsoKaisyaData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsUnsoKaisyaDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsUnsoKaisyaDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsUnsoKaisyaDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsUnsoKaisyaDataOperationCompleted == null)) {
                this.InsUnsoKaisyaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsUnsoKaisyaDataOperationCompleted);
            }
            this.InvokeAsync("InsUnsoKaisyaData", new object[] {
                        cond,
                        ds}, this.InsUnsoKaisyaDataOperationCompleted, userState);
        }
        
        private void OnInsUnsoKaisyaDataOperationCompleted(object arg) {
            if ((this.InsUnsoKaisyaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsUnsoKaisyaDataCompleted(this, new InsUnsoKaisyaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdUnsoKaisyaData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdUnsoKaisyaData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdUnsoKaisyaData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdUnsoKaisyaDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdUnsoKaisyaDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdUnsoKaisyaDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdUnsoKaisyaDataOperationCompleted == null)) {
                this.UpdUnsoKaisyaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdUnsoKaisyaDataOperationCompleted);
            }
            this.InvokeAsync("UpdUnsoKaisyaData", new object[] {
                        cond,
                        ds}, this.UpdUnsoKaisyaDataOperationCompleted, userState);
        }
        
        private void OnUpdUnsoKaisyaDataOperationCompleted(object arg) {
            if ((this.UpdUnsoKaisyaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdUnsoKaisyaDataCompleted(this, new UpdUnsoKaisyaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelUnsoKaisyaData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelUnsoKaisyaData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelUnsoKaisyaData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelUnsoKaisyaDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelUnsoKaisyaDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelUnsoKaisyaDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelUnsoKaisyaDataOperationCompleted == null)) {
                this.DelUnsoKaisyaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelUnsoKaisyaDataOperationCompleted);
            }
            this.InvokeAsync("DelUnsoKaisyaData", new object[] {
                        cond,
                        ds}, this.DelUnsoKaisyaDataOperationCompleted, userState);
        }
        
        private void OnDelUnsoKaisyaDataOperationCompleted(object arg) {
            if ((this.DelUnsoKaisyaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelUnsoKaisyaDataCompleted(this, new DelUnsoKaisyaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetProject", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProject(CondM01 cond) {
            object[] results = this.Invoke("GetProject", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectAsync(CondM01 cond) {
            this.GetProjectAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetProjectAsync(CondM01 cond, object userState) {
            if ((this.GetProjectOperationCompleted == null)) {
                this.GetProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectOperationCompleted);
            }
            this.InvokeAsync("GetProject", new object[] {
                        cond}, this.GetProjectOperationCompleted, userState);
        }
        
        private void OnGetProjectOperationCompleted(object arg) {
            if ((this.GetProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectCompleted(this, new GetProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetSelectItemForKishu", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelectItemForKishu(CondM01 cond) {
            object[] results = this.Invoke("GetSelectItemForKishu", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelectItemForKishuAsync(CondM01 cond) {
            this.GetSelectItemForKishuAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetSelectItemForKishuAsync(CondM01 cond, object userState) {
            if ((this.GetSelectItemForKishuOperationCompleted == null)) {
                this.GetSelectItemForKishuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelectItemForKishuOperationCompleted);
            }
            this.InvokeAsync("GetSelectItemForKishu", new object[] {
                        cond}, this.GetSelectItemForKishuOperationCompleted, userState);
        }
        
        private void OnGetSelectItemForKishuOperationCompleted(object arg) {
            if ((this.GetSelectItemForKishuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelectItemForKishuCompleted(this, new GetSelectItemForKishuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetEcs", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEcs(CondM01 cond) {
            object[] results = this.Invoke("GetEcs", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEcsAsync(CondM01 cond) {
            this.GetEcsAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetEcsAsync(CondM01 cond, object userState) {
            if ((this.GetEcsOperationCompleted == null)) {
                this.GetEcsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEcsOperationCompleted);
            }
            this.InvokeAsync("GetEcs", new object[] {
                        cond}, this.GetEcsOperationCompleted, userState);
        }
        
        private void OnGetEcsOperationCompleted(object arg) {
            if ((this.GetEcsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEcsCompleted(this, new GetEcsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetEcsLikeSearch", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEcsLikeSearch(CondM01 cond) {
            object[] results = this.Invoke("GetEcsLikeSearch", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEcsLikeSearchAsync(CondM01 cond) {
            this.GetEcsLikeSearchAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetEcsLikeSearchAsync(CondM01 cond, object userState) {
            if ((this.GetEcsLikeSearchOperationCompleted == null)) {
                this.GetEcsLikeSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEcsLikeSearchOperationCompleted);
            }
            this.InvokeAsync("GetEcsLikeSearch", new object[] {
                        cond}, this.GetEcsLikeSearchOperationCompleted, userState);
        }
        
        private void OnGetEcsLikeSearchOperationCompleted(object arg) {
            if ((this.GetEcsLikeSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEcsLikeSearchCompleted(this, new GetEcsLikeSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsEcsData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsEcsData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsEcsData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsEcsDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsEcsDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsEcsDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsEcsDataOperationCompleted == null)) {
                this.InsEcsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsEcsDataOperationCompleted);
            }
            this.InvokeAsync("InsEcsData", new object[] {
                        cond,
                        ds}, this.InsEcsDataOperationCompleted, userState);
        }
        
        private void OnInsEcsDataOperationCompleted(object arg) {
            if ((this.InsEcsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsEcsDataCompleted(this, new InsEcsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdEcsData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdEcsData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdEcsData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdEcsDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdEcsDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdEcsDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdEcsDataOperationCompleted == null)) {
                this.UpdEcsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdEcsDataOperationCompleted);
            }
            this.InvokeAsync("UpdEcsData", new object[] {
                        cond,
                        ds}, this.UpdEcsDataOperationCompleted, userState);
        }
        
        private void OnUpdEcsDataOperationCompleted(object arg) {
            if ((this.UpdEcsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdEcsDataCompleted(this, new UpdEcsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelEcsData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelEcsData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelEcsData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelEcsDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelEcsDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelEcsDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelEcsDataOperationCompleted == null)) {
                this.DelEcsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelEcsDataOperationCompleted);
            }
            this.InvokeAsync("DelEcsData", new object[] {
                        cond,
                        ds}, this.DelEcsDataOperationCompleted, userState);
        }
        
        private void OnDelEcsDataOperationCompleted(object arg) {
            if ((this.DelEcsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelEcsDataCompleted(this, new DelEcsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetBukkenIkkatsuLikeSearch", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBukkenIkkatsuLikeSearch(CondM01 cond) {
            object[] results = this.Invoke("GetBukkenIkkatsuLikeSearch", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBukkenIkkatsuLikeSearchAsync(CondM01 cond) {
            this.GetBukkenIkkatsuLikeSearchAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetBukkenIkkatsuLikeSearchAsync(CondM01 cond, object userState) {
            if ((this.GetBukkenIkkatsuLikeSearchOperationCompleted == null)) {
                this.GetBukkenIkkatsuLikeSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBukkenIkkatsuLikeSearchOperationCompleted);
            }
            this.InvokeAsync("GetBukkenIkkatsuLikeSearch", new object[] {
                        cond}, this.GetBukkenIkkatsuLikeSearchOperationCompleted, userState);
        }
        
        private void OnGetBukkenIkkatsuLikeSearchOperationCompleted(object arg) {
            if ((this.GetBukkenIkkatsuLikeSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBukkenIkkatsuLikeSearchCompleted(this, new GetBukkenIkkatsuLikeSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetBukkenIkkatsuSearch", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBukkenIkkatsuSearch(CondM01 cond) {
            object[] results = this.Invoke("GetBukkenIkkatsuSearch", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBukkenIkkatsuSearchAsync(CondM01 cond) {
            this.GetBukkenIkkatsuSearchAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetBukkenIkkatsuSearchAsync(CondM01 cond, object userState) {
            if ((this.GetBukkenIkkatsuSearchOperationCompleted == null)) {
                this.GetBukkenIkkatsuSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBukkenIkkatsuSearchOperationCompleted);
            }
            this.InvokeAsync("GetBukkenIkkatsuSearch", new object[] {
                        cond}, this.GetBukkenIkkatsuSearchOperationCompleted, userState);
        }
        
        private void OnGetBukkenIkkatsuSearchOperationCompleted(object arg) {
            if ((this.GetBukkenIkkatsuSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBukkenIkkatsuSearchCompleted(this, new GetBukkenIkkatsuSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsBukkenIkkatsuData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsBukkenIkkatsuData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsBukkenIkkatsuData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsBukkenIkkatsuDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsBukkenIkkatsuDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsBukkenIkkatsuDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsBukkenIkkatsuDataOperationCompleted == null)) {
                this.InsBukkenIkkatsuDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsBukkenIkkatsuDataOperationCompleted);
            }
            this.InvokeAsync("InsBukkenIkkatsuData", new object[] {
                        cond,
                        ds}, this.InsBukkenIkkatsuDataOperationCompleted, userState);
        }
        
        private void OnInsBukkenIkkatsuDataOperationCompleted(object arg) {
            if ((this.InsBukkenIkkatsuDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsBukkenIkkatsuDataCompleted(this, new InsBukkenIkkatsuDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdBukkenIkkatsuData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdBukkenIkkatsuData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdBukkenIkkatsuData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdBukkenIkkatsuDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdBukkenIkkatsuDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdBukkenIkkatsuDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdBukkenIkkatsuDataOperationCompleted == null)) {
                this.UpdBukkenIkkatsuDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdBukkenIkkatsuDataOperationCompleted);
            }
            this.InvokeAsync("UpdBukkenIkkatsuData", new object[] {
                        cond,
                        ds}, this.UpdBukkenIkkatsuDataOperationCompleted, userState);
        }
        
        private void OnUpdBukkenIkkatsuDataOperationCompleted(object arg) {
            if ((this.UpdBukkenIkkatsuDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdBukkenIkkatsuDataCompleted(this, new UpdBukkenIkkatsuDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelBukkenIkkatsuData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelBukkenIkkatsuData(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelBukkenIkkatsuData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelBukkenIkkatsuDataAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelBukkenIkkatsuDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelBukkenIkkatsuDataAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelBukkenIkkatsuDataOperationCompleted == null)) {
                this.DelBukkenIkkatsuDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelBukkenIkkatsuDataOperationCompleted);
            }
            this.InvokeAsync("DelBukkenIkkatsuData", new object[] {
                        cond,
                        ds}, this.DelBukkenIkkatsuDataOperationCompleted, userState);
        }
        
        private void OnDelBukkenIkkatsuDataOperationCompleted(object arg) {
            if ((this.DelBukkenIkkatsuDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelBukkenIkkatsuDataCompleted(this, new DelBukkenIkkatsuDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetShinchokuKanriNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetShinchokuKanriNotify(CondM01 cond) {
            object[] results = this.Invoke("GetShinchokuKanriNotify", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetShinchokuKanriNotifyAsync(CondM01 cond) {
            this.GetShinchokuKanriNotifyAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetShinchokuKanriNotifyAsync(CondM01 cond, object userState) {
            if ((this.GetShinchokuKanriNotifyOperationCompleted == null)) {
                this.GetShinchokuKanriNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShinchokuKanriNotifyOperationCompleted);
            }
            this.InvokeAsync("GetShinchokuKanriNotify", new object[] {
                        cond}, this.GetShinchokuKanriNotifyOperationCompleted, userState);
        }
        
        private void OnGetShinchokuKanriNotifyOperationCompleted(object arg) {
            if ((this.GetShinchokuKanriNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShinchokuKanriNotifyCompleted(this, new GetShinchokuKanriNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SaveShinchokuKanriNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveShinchokuKanriNotify(CondM01 cond, System.Data.DataSet ds, out string errMsgId, out string[] args) {
            object[] results = this.Invoke("SaveShinchokuKanriNotify", new object[] {
                        cond,
                        ds});
            errMsgId = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveShinchokuKanriNotifyAsync(CondM01 cond, System.Data.DataSet ds) {
            this.SaveShinchokuKanriNotifyAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void SaveShinchokuKanriNotifyAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.SaveShinchokuKanriNotifyOperationCompleted == null)) {
                this.SaveShinchokuKanriNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveShinchokuKanriNotifyOperationCompleted);
            }
            this.InvokeAsync("SaveShinchokuKanriNotify", new object[] {
                        cond,
                        ds}, this.SaveShinchokuKanriNotifyOperationCompleted, userState);
        }
        
        private void OnSaveShinchokuKanriNotifyOperationCompleted(object arg) {
            if ((this.SaveShinchokuKanriNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveShinchokuKanriNotifyCompleted(this, new SaveShinchokuKanriNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetInitShukkamotoHoshu", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInitShukkamotoHoshu(CondM01 cond) {
            object[] results = this.Invoke("GetInitShukkamotoHoshu", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInitShukkamotoHoshuAsync(CondM01 cond) {
            this.GetInitShukkamotoHoshuAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetInitShukkamotoHoshuAsync(CondM01 cond, object userState) {
            if ((this.GetInitShukkamotoHoshuOperationCompleted == null)) {
                this.GetInitShukkamotoHoshuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInitShukkamotoHoshuOperationCompleted);
            }
            this.InvokeAsync("GetInitShukkamotoHoshu", new object[] {
                        cond}, this.GetInitShukkamotoHoshuOperationCompleted, userState);
        }
        
        private void OnGetInitShukkamotoHoshuOperationCompleted(object arg) {
            if ((this.GetInitShukkamotoHoshuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInitShukkamotoHoshuCompleted(this, new GetInitShukkamotoHoshuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetShipFrom", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShipFrom(CondM01 cond) {
            object[] results = this.Invoke("GetShipFrom", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShipFromAsync(CondM01 cond) {
            this.GetShipFromAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetShipFromAsync(CondM01 cond, object userState) {
            if ((this.GetShipFromOperationCompleted == null)) {
                this.GetShipFromOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShipFromOperationCompleted);
            }
            this.InvokeAsync("GetShipFrom", new object[] {
                        cond}, this.GetShipFromOperationCompleted, userState);
        }
        
        private void OnGetShipFromOperationCompleted(object arg) {
            if ((this.GetShipFromCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShipFromCompleted(this, new GetShipFromCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsShipFrom", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsShipFrom(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsShipFrom", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsShipFromAsync(CondM01 cond, System.Data.DataSet ds) {
            this.InsShipFromAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsShipFromAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsShipFromOperationCompleted == null)) {
                this.InsShipFromOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsShipFromOperationCompleted);
            }
            this.InvokeAsync("InsShipFrom", new object[] {
                        cond,
                        ds}, this.InsShipFromOperationCompleted, userState);
        }
        
        private void OnInsShipFromOperationCompleted(object arg) {
            if ((this.InsShipFromCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsShipFromCompleted(this, new InsShipFromCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdShipFrom", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdShipFrom(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdShipFrom", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdShipFromAsync(CondM01 cond, System.Data.DataSet ds) {
            this.UpdShipFromAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdShipFromAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdShipFromOperationCompleted == null)) {
                this.UpdShipFromOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdShipFromOperationCompleted);
            }
            this.InvokeAsync("UpdShipFrom", new object[] {
                        cond,
                        ds}, this.UpdShipFromOperationCompleted, userState);
        }
        
        private void OnUpdShipFromOperationCompleted(object arg) {
            if ((this.UpdShipFromCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdShipFromCompleted(this, new UpdShipFromCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelShipFrom", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelShipFrom(CondM01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelShipFrom", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelShipFromAsync(CondM01 cond, System.Data.DataSet ds) {
            this.DelShipFromAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelShipFromAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelShipFromOperationCompleted == null)) {
                this.DelShipFromOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelShipFromOperationCompleted);
            }
            this.InvokeAsync("DelShipFrom", new object[] {
                        cond,
                        ds}, this.DelShipFromOperationCompleted, userState);
        }
        
        private void OnDelShipFromOperationCompleted(object arg) {
            if ((this.DelShipFromCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelShipFromCompleted(this, new DelShipFromCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/ExistsRoleAndRolemap", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistsRoleAndRolemap(CondM01 cond) {
            object[] results = this.Invoke("ExistsRoleAndRolemap", new object[] {
                        cond});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsRoleAndRolemapAsync(CondM01 cond) {
            this.ExistsRoleAndRolemapAsync(cond, null);
        }
        
        /// <remarks/>
        public void ExistsRoleAndRolemapAsync(CondM01 cond, object userState) {
            if ((this.ExistsRoleAndRolemapOperationCompleted == null)) {
                this.ExistsRoleAndRolemapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsRoleAndRolemapOperationCompleted);
            }
            this.InvokeAsync("ExistsRoleAndRolemap", new object[] {
                        cond}, this.ExistsRoleAndRolemapOperationCompleted, userState);
        }
        
        private void OnExistsRoleAndRolemapOperationCompleted(object arg) {
            if ((this.ExistsRoleAndRolemapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsRoleAndRolemapCompleted(this, new ExistsRoleAndRolemapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetKeikakuTorikomiNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetKeikakuTorikomiNotify(CondM01 cond) {
            object[] results = this.Invoke("GetKeikakuTorikomiNotify", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeikakuTorikomiNotifyAsync(CondM01 cond) {
            this.GetKeikakuTorikomiNotifyAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetKeikakuTorikomiNotifyAsync(CondM01 cond, object userState) {
            if ((this.GetKeikakuTorikomiNotifyOperationCompleted == null)) {
                this.GetKeikakuTorikomiNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeikakuTorikomiNotifyOperationCompleted);
            }
            this.InvokeAsync("GetKeikakuTorikomiNotify", new object[] {
                        cond}, this.GetKeikakuTorikomiNotifyOperationCompleted, userState);
        }
        
        private void OnGetKeikakuTorikomiNotifyOperationCompleted(object arg) {
            if ((this.GetKeikakuTorikomiNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeikakuTorikomiNotifyCompleted(this, new GetKeikakuTorikomiNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SaveKeikakuTorikomiNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveKeikakuTorikomiNotify(CondM01 cond, System.Data.DataSet ds, out string errMsgId, out string[] args) {
            object[] results = this.Invoke("SaveKeikakuTorikomiNotify", new object[] {
                        cond,
                        ds});
            errMsgId = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveKeikakuTorikomiNotifyAsync(CondM01 cond, System.Data.DataSet ds) {
            this.SaveKeikakuTorikomiNotifyAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void SaveKeikakuTorikomiNotifyAsync(CondM01 cond, System.Data.DataSet ds, object userState) {
            if ((this.SaveKeikakuTorikomiNotifyOperationCompleted == null)) {
                this.SaveKeikakuTorikomiNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveKeikakuTorikomiNotifyOperationCompleted);
            }
            this.InvokeAsync("SaveKeikakuTorikomiNotify", new object[] {
                        cond,
                        ds}, this.SaveKeikakuTorikomiNotifyOperationCompleted, userState);
        }
        
        private void OnSaveKeikakuTorikomiNotifyOperationCompleted(object arg) {
            if ((this.SaveKeikakuTorikomiNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveKeikakuTorikomiNotifyCompleted(this, new SaveKeikakuTorikomiNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SendCondBase", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendCondBase(CondBase cond) {
            this.Invoke("SendCondBase", new object[] {
                        cond});
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond) {
            this.SendCondBaseAsync(cond, null);
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond, object userState) {
            if ((this.SendCondBaseOperationCompleted == null)) {
                this.SendCondBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCondBaseOperationCompleted);
            }
            this.InvokeAsync("SendCondBase", new object[] {
                        cond}, this.SendCondBaseOperationCompleted, userState);
        }
        
        private void OnSendCondBaseOperationCompleted(object arg) {
            if ((this.SendCondBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCondBaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondM01 : CondBase {
        
        private string userIDField;
        
        private string userNameField;
        
        private string konpoNoField;
        
        private string jyotaiFlagField;
        
        private string shukkaFlagField;
        
        private string nonyusakiCDField;
        
        private string nonyusakiNameField;
        
        private string shipField;
        
        private string roleIDField;
        
        private string palletNoField;
        
        private string boxNoField;
        
        private string tagNoField;
        
        private string bukkenNoField;
        
        private string bukkenNameField;
        
        private string selectGroupCDField;
        
        private string itemNameField;
        
        private string mailStatusField;
        
        private System.DateTime dateFromField;
        
        private System.DateTime dateToField;
        
        private string listFlagField;
        
        private string textKonpoField;
        
        private string textTourokuField;
        
        private string partNameJaField;
        
        private string typeField;
        
        private string partNameField;
        
        private string kokunaigaiFlagField;
        
        private string unsokaishaNameField;
        
        private string unsoKaishaNoField;
        
        private string ecsQuotaField;
        
        private string ecsNoField;
        
        private string seibanField;
        
        private string codeField;
        
        private string aRNoField;
        
        private string kishuField;
        
        private string kanriFlagField;
        
        private string consignCDField;
        
        private string consignNameField;
        
        private string chinaFlagField;
        
        private string deliverCDField;
        
        private string deliverNameField;
        
        private string mailPackingFlagField;
        
        private string projectNoField;
        
        private string mailTagRenkeiFlagField;
        
        private string shanaigaiFlagField;
        
        private string shipFromCdField;
        
        private string shipFromNameField;
        
        private string unusedFlagField;
        
        private string juchuNoField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string KonpoNo {
            get {
                return this.konpoNoField;
            }
            set {
                this.konpoNoField = value;
            }
        }
        
        /// <remarks/>
        public string JyotaiFlag {
            get {
                return this.jyotaiFlagField;
            }
            set {
                this.jyotaiFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ShukkaFlag {
            get {
                return this.shukkaFlagField;
            }
            set {
                this.shukkaFlagField = value;
            }
        }
        
        /// <remarks/>
        public string NonyusakiCD {
            get {
                return this.nonyusakiCDField;
            }
            set {
                this.nonyusakiCDField = value;
            }
        }
        
        /// <remarks/>
        public string NonyusakiName {
            get {
                return this.nonyusakiNameField;
            }
            set {
                this.nonyusakiNameField = value;
            }
        }
        
        /// <remarks/>
        public string Ship {
            get {
                return this.shipField;
            }
            set {
                this.shipField = value;
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string PalletNo {
            get {
                return this.palletNoField;
            }
            set {
                this.palletNoField = value;
            }
        }
        
        /// <remarks/>
        public string BoxNo {
            get {
                return this.boxNoField;
            }
            set {
                this.boxNoField = value;
            }
        }
        
        /// <remarks/>
        public string TagNo {
            get {
                return this.tagNoField;
            }
            set {
                this.tagNoField = value;
            }
        }
        
        /// <remarks/>
        public string BukkenNo {
            get {
                return this.bukkenNoField;
            }
            set {
                this.bukkenNoField = value;
            }
        }
        
        /// <remarks/>
        public string BukkenName {
            get {
                return this.bukkenNameField;
            }
            set {
                this.bukkenNameField = value;
            }
        }
        
        /// <remarks/>
        public string SelectGroupCD {
            get {
                return this.selectGroupCDField;
            }
            set {
                this.selectGroupCDField = value;
            }
        }
        
        /// <remarks/>
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public string MailStatus {
            get {
                return this.mailStatusField;
            }
            set {
                this.mailStatusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        public string ListFlag {
            get {
                return this.listFlagField;
            }
            set {
                this.listFlagField = value;
            }
        }
        
        /// <remarks/>
        public string TextKonpo {
            get {
                return this.textKonpoField;
            }
            set {
                this.textKonpoField = value;
            }
        }
        
        /// <remarks/>
        public string TextTouroku {
            get {
                return this.textTourokuField;
            }
            set {
                this.textTourokuField = value;
            }
        }
        
        /// <remarks/>
        public string PartNameJa {
            get {
                return this.partNameJaField;
            }
            set {
                this.partNameJaField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string PartName {
            get {
                return this.partNameField;
            }
            set {
                this.partNameField = value;
            }
        }
        
        /// <remarks/>
        public string KokunaigaiFlag {
            get {
                return this.kokunaigaiFlagField;
            }
            set {
                this.kokunaigaiFlagField = value;
            }
        }
        
        /// <remarks/>
        public string UnsokaishaName {
            get {
                return this.unsokaishaNameField;
            }
            set {
                this.unsokaishaNameField = value;
            }
        }
        
        /// <remarks/>
        public string UnsoKaishaNo {
            get {
                return this.unsoKaishaNoField;
            }
            set {
                this.unsoKaishaNoField = value;
            }
        }
        
        /// <remarks/>
        public string EcsQuota {
            get {
                return this.ecsQuotaField;
            }
            set {
                this.ecsQuotaField = value;
            }
        }
        
        /// <remarks/>
        public string EcsNo {
            get {
                return this.ecsNoField;
            }
            set {
                this.ecsNoField = value;
            }
        }
        
        /// <remarks/>
        public string Seiban {
            get {
                return this.seibanField;
            }
            set {
                this.seibanField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string ARNo {
            get {
                return this.aRNoField;
            }
            set {
                this.aRNoField = value;
            }
        }
        
        /// <remarks/>
        public string Kishu {
            get {
                return this.kishuField;
            }
            set {
                this.kishuField = value;
            }
        }
        
        /// <remarks/>
        public string KanriFlag {
            get {
                return this.kanriFlagField;
            }
            set {
                this.kanriFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ConsignCD {
            get {
                return this.consignCDField;
            }
            set {
                this.consignCDField = value;
            }
        }
        
        /// <remarks/>
        public string ConsignName {
            get {
                return this.consignNameField;
            }
            set {
                this.consignNameField = value;
            }
        }
        
        /// <remarks/>
        public string ChinaFlag {
            get {
                return this.chinaFlagField;
            }
            set {
                this.chinaFlagField = value;
            }
        }
        
        /// <remarks/>
        public string DeliverCD {
            get {
                return this.deliverCDField;
            }
            set {
                this.deliverCDField = value;
            }
        }
        
        /// <remarks/>
        public string DeliverName {
            get {
                return this.deliverNameField;
            }
            set {
                this.deliverNameField = value;
            }
        }
        
        /// <remarks/>
        public string MailPackingFlag {
            get {
                return this.mailPackingFlagField;
            }
            set {
                this.mailPackingFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectNo {
            get {
                return this.projectNoField;
            }
            set {
                this.projectNoField = value;
            }
        }
        
        /// <remarks/>
        public string MailTagRenkeiFlag {
            get {
                return this.mailTagRenkeiFlagField;
            }
            set {
                this.mailTagRenkeiFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ShanaigaiFlag {
            get {
                return this.shanaigaiFlagField;
            }
            set {
                this.shanaigaiFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromCd {
            get {
                return this.shipFromCdField;
            }
            set {
                this.shipFromCdField = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromName {
            get {
                return this.shipFromNameField;
            }
            set {
                this.shipFromNameField = value;
            }
        }
        
        /// <remarks/>
        public string UnusedFlag {
            get {
                return this.unusedFlagField;
            }
            set {
                this.unusedFlagField = value;
            }
        }
        
        /// <remarks/>
        public string JuchuNo {
            get {
                return this.juchuNoField;
            }
            set {
                this.juchuNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CondM01))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondBase {
        
        private LoginInfo loginInfoField;
        
        private object createDateField;
        
        private string createUserIDField;
        
        private string createUserNameField;
        
        private object updateDateField;
        
        private string updateUserIDField;
        
        private string updateUserNameField;
        
        private object mainteDateField;
        
        private string mainteUserIDField;
        
        private string mainteUserNameField;
        
        private string versionField;
        
        /// <remarks/>
        public LoginInfo LoginInfo {
            get {
                return this.loginInfoField;
            }
            set {
                this.loginInfoField = value;
            }
        }
        
        /// <remarks/>
        public object CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserID {
            get {
                return this.createUserIDField;
            }
            set {
                this.createUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserID {
            get {
                return this.updateUserIDField;
            }
            set {
                this.updateUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserName {
            get {
                return this.updateUserNameField;
            }
            set {
                this.updateUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object MainteDate {
            get {
                return this.mainteDateField;
            }
            set {
                this.mainteDateField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserID {
            get {
                return this.mainteUserIDField;
            }
            set {
                this.mainteUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserName {
            get {
                return this.mainteUserNameField;
            }
            set {
                this.mainteUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class LoginInfo {
        
        private string userIDField;
        
        private string userNameField;
        
        private string pcNameField;
        
        private string[] iPAddressField;
        
        private string roleIDField;
        
        private string roleNameField;
        
        private string languageField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string PcName {
            get {
                return this.pcNameField;
            }
            set {
                this.pcNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetUserLikeSearchCompletedEventHandler(object sender, GetUserLikeSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLikeSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLikeSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsUserDataCompletedEventHandler(object sender, InsUserDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdUserDataCompletedEventHandler(object sender, UpdUserDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelUserDataCompletedEventHandler(object sender, DelUserDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool isMultiError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetNonyusakiLikeSearchCompletedEventHandler(object sender, GetNonyusakiLikeSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonyusakiLikeSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonyusakiLikeSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetMikanryoARCompletedEventHandler(object sender, GetMikanryoARCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMikanryoARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMikanryoARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdNonyusakiDataCompletedEventHandler(object sender, UpdNonyusakiDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdNonyusakiDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdNonyusakiDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelNonyusakiDataCompletedEventHandler(object sender, DelNonyusakiDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelNonyusakiDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelNonyusakiDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetNonyusakiCompletedEventHandler(object sender, GetNonyusakiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonyusakiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonyusakiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsNonyusakiDataCompletedEventHandler(object sender, InsNonyusakiDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsNonyusakiDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsNonyusakiDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetMishukkaMeisaiCompletedEventHandler(object sender, GetMishukkaMeisaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMishukkaMeisaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMishukkaMeisaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetBoxDataCompletedEventHandler(object sender, GetBoxDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetPalletDataCompletedEventHandler(object sender, GetPalletDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPalletDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPalletDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdBoxDataCompletedEventHandler(object sender, UpdBoxDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdBoxDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdBoxDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdPalletDataCompletedEventHandler(object sender, UpdPalletDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdPalletDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdPalletDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetBoxDataAddCompletedEventHandler(object sender, GetBoxDataAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxDataAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxDataAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetPalletDataAddCompletedEventHandler(object sender, GetPalletDataAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPalletDataAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPalletDataAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetBukkenCompletedEventHandler(object sender, GetBukkenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBukkenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBukkenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetBukkenLikeSearchCompletedEventHandler(object sender, GetBukkenLikeSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBukkenLikeSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBukkenLikeSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsBukkenDataCompletedEventHandler(object sender, InsBukkenDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsBukkenDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsBukkenDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdBukkenDataCompletedEventHandler(object sender, UpdBukkenDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdBukkenDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdBukkenDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelBukkenDataCompletedEventHandler(object sender, DelBukkenDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelBukkenDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelBukkenDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void ExistsBukkenMailCompletedEventHandler(object sender, ExistsBukkenMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsBukkenMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsBukkenMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void ExistsShinchokuKanriMailCompletedEventHandler(object sender, ExistsShinchokuKanriMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsShinchokuKanriMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsShinchokuKanriMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetSelectItemCompletedEventHandler(object sender, GetSelectItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelectItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelectItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsSelectItemDataCompletedEventHandler(object sender, InsSelectItemDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsSelectItemDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsSelectItemDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdSelectItemDataCompletedEventHandler(object sender, UpdSelectItemDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdSelectItemDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdSelectItemDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelSelectItemDataCompletedEventHandler(object sender, DelSelectItemDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelSelectItemDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelSelectItemDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetBasicNotifyCompletedEventHandler(object sender, GetBasicNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SaveBasicNotifyCompletedEventHandler(object sender, SaveBasicNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBasicNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBasicNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void ExistsMailChangeRoleCompletedEventHandler(object sender, ExistsMailChangeRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsMailChangeRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsMailChangeRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetCommonNotifyCompletedEventHandler(object sender, GetCommonNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommonNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommonNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SaveCommonNotifyCompletedEventHandler(object sender, SaveCommonNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCommonNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCommonNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetListFlagCompletedEventHandler(object sender, GetListFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetARListNotifyCompletedEventHandler(object sender, GetARListNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetARListNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetARListNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelARListNotifyCompletedEventHandler(object sender, DelARListNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelARListNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelARListNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetMailCompletedEventHandler(object sender, GetMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsMailRetryCompletedEventHandler(object sender, InsMailRetryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsMailRetryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsMailRetryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdMailAbortCompletedEventHandler(object sender, UpdMailAbortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdMailAbortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdMailAbortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetPartNameCompletedEventHandler(object sender, GetPartNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetPartNameLikeCompletedEventHandler(object sender, GetPartNameLikeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartNameLikeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartNameLikeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetPartsNameExcelDataCompletedEventHandler(object sender, GetPartsNameExcelDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartsNameExcelDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartsNameExcelDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsPartDataCompletedEventHandler(object sender, InsPartDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsPartDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsPartDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdPartDataCompletedEventHandler(object sender, UpdPartDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdPartDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdPartDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelPartDataCompletedEventHandler(object sender, DelPartDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelPartDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelPartDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsImportedPartsDataCompletedEventHandler(object sender, InsImportedPartsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsImportedPartsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsImportedPartsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetConsignLikeSearchCompletedEventHandler(object sender, GetConsignLikeSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConsignLikeSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConsignLikeSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetConsignCompletedEventHandler(object sender, GetConsignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConsignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConsignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsConsignDataCompletedEventHandler(object sender, InsConsignDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsConsignDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsConsignDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdConsignDataCompletedEventHandler(object sender, UpdConsignDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdConsignDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdConsignDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelConsignDataCompletedEventHandler(object sender, DelConsignDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelConsignDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelConsignDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetDeliverLikeSearchCompletedEventHandler(object sender, GetDeliverLikeSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliverLikeSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliverLikeSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetDeliverCompletedEventHandler(object sender, GetDeliverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsDeliverDataCompletedEventHandler(object sender, InsDeliverDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsDeliverDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsDeliverDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdDeliverDataCompletedEventHandler(object sender, UpdDeliverDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdDeliverDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdDeliverDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelDeliverDataCompletedEventHandler(object sender, DelDeliverDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelDeliverDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelDeliverDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetUnsokaisyaCompletedEventHandler(object sender, GetUnsokaisyaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnsokaisyaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnsokaisyaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetUnsokaisyaLikeSearchCompletedEventHandler(object sender, GetUnsokaisyaLikeSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnsokaisyaLikeSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnsokaisyaLikeSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsUnsoKaisyaDataCompletedEventHandler(object sender, InsUnsoKaisyaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsUnsoKaisyaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsUnsoKaisyaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdUnsoKaisyaDataCompletedEventHandler(object sender, UpdUnsoKaisyaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdUnsoKaisyaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdUnsoKaisyaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelUnsoKaisyaDataCompletedEventHandler(object sender, DelUnsoKaisyaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelUnsoKaisyaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelUnsoKaisyaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetProjectCompletedEventHandler(object sender, GetProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetSelectItemForKishuCompletedEventHandler(object sender, GetSelectItemForKishuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelectItemForKishuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelectItemForKishuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetEcsCompletedEventHandler(object sender, GetEcsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEcsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEcsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetEcsLikeSearchCompletedEventHandler(object sender, GetEcsLikeSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEcsLikeSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEcsLikeSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsEcsDataCompletedEventHandler(object sender, InsEcsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsEcsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsEcsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdEcsDataCompletedEventHandler(object sender, UpdEcsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdEcsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdEcsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelEcsDataCompletedEventHandler(object sender, DelEcsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelEcsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelEcsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetBukkenIkkatsuLikeSearchCompletedEventHandler(object sender, GetBukkenIkkatsuLikeSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBukkenIkkatsuLikeSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBukkenIkkatsuLikeSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetBukkenIkkatsuSearchCompletedEventHandler(object sender, GetBukkenIkkatsuSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBukkenIkkatsuSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBukkenIkkatsuSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsBukkenIkkatsuDataCompletedEventHandler(object sender, InsBukkenIkkatsuDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsBukkenIkkatsuDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsBukkenIkkatsuDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdBukkenIkkatsuDataCompletedEventHandler(object sender, UpdBukkenIkkatsuDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdBukkenIkkatsuDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdBukkenIkkatsuDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelBukkenIkkatsuDataCompletedEventHandler(object sender, DelBukkenIkkatsuDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelBukkenIkkatsuDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelBukkenIkkatsuDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetShinchokuKanriNotifyCompletedEventHandler(object sender, GetShinchokuKanriNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShinchokuKanriNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShinchokuKanriNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SaveShinchokuKanriNotifyCompletedEventHandler(object sender, SaveShinchokuKanriNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveShinchokuKanriNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveShinchokuKanriNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetInitShukkamotoHoshuCompletedEventHandler(object sender, GetInitShukkamotoHoshuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInitShukkamotoHoshuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInitShukkamotoHoshuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetShipFromCompletedEventHandler(object sender, GetShipFromCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShipFromCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShipFromCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsShipFromCompletedEventHandler(object sender, InsShipFromCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsShipFromCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsShipFromCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdShipFromCompletedEventHandler(object sender, UpdShipFromCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdShipFromCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdShipFromCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelShipFromCompletedEventHandler(object sender, DelShipFromCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelShipFromCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelShipFromCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void ExistsRoleAndRolemapCompletedEventHandler(object sender, ExistsRoleAndRolemapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsRoleAndRolemapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsRoleAndRolemapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetKeikakuTorikomiNotifyCompletedEventHandler(object sender, GetKeikakuTorikomiNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeikakuTorikomiNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeikakuTorikomiNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SaveKeikakuTorikomiNotifyCompletedEventHandler(object sender, SaveKeikakuTorikomiNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveKeikakuTorikomiNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveKeikakuTorikomiNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SendCondBaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591