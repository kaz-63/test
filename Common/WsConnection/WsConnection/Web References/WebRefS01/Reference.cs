//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.9179
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 2.0.50727.9179 によって自動生成されました。
// 
#pragma warning disable 1591

namespace WsConnection.WebRefS01 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WsS01Soap", Namespace="http://smssrv/")]
    public partial class WsS01 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetInitShukkaKeikakuOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsShukkaKeikakuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBukkenNameListForTorikomiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConsignListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShukkamotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShukkasakiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonyusakiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdPlanningOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRevisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHaitaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHaitaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNullHaitaOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDisplayConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShukkaMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExistsPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExistsPictureFromDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsShukkaKeikakuMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdShukkaKeikakuMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelShukkaKeikakuMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTreeMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdMoveShipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKiwakuOperationCompleted;
        
        private System.Threading.SendOrPostCallback DuplicateCaseNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBukkenNameListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShipListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTagRenkeiListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAndLockTagRenkeiListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEstimateFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShipToForTehaiNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdTehaimeisaiVersionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsTagRenkeiMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTehaiMeisaiDataForIkkatsuUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsManageZumenKeishikiOperationCompleted;
        
        private System.Threading.SendOrPostCallback S0100050_GetInitOperationCompleted;
        
        private System.Threading.SendOrPostCallback S0100050_GetDispOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNisugataBaseDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback S0100050_GetKiwakuMeisaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback S0100050_GetBoxListManageOperationCompleted;
        
        private System.Threading.SendOrPostCallback S0100050_GetPalletListManageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdNisugataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelNisugataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNisugataExcelDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMailIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdPackingForExcelDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMailSousinRirekiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonyusakiForShokaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeibanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKishuOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdNonyusakiForGenbayoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCondBaseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsS01() {
            this.Url = global::WsConnection.Properties.Settings.Default.WsConnection_WebRefS01_WsS01;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetInitShukkaKeikakuCompletedEventHandler GetInitShukkaKeikakuCompleted;
        
        /// <remarks/>
        public event InsShukkaKeikakuCompletedEventHandler InsShukkaKeikakuCompleted;
        
        /// <remarks/>
        public event GetBukkenNameListForTorikomiCompletedEventHandler GetBukkenNameListForTorikomiCompleted;
        
        /// <remarks/>
        public event GetConsignListCompletedEventHandler GetConsignListCompleted;
        
        /// <remarks/>
        public event GetShukkamotoCompletedEventHandler GetShukkamotoCompleted;
        
        /// <remarks/>
        public event GetShukkasakiCompletedEventHandler GetShukkasakiCompleted;
        
        /// <remarks/>
        public event GetNonyusakiCompletedEventHandler GetNonyusakiCompleted;
        
        /// <remarks/>
        public event UpdPlanningCompletedEventHandler UpdPlanningCompleted;
        
        /// <remarks/>
        public event InsertRevisionCompletedEventHandler InsertRevisionCompleted;
        
        /// <remarks/>
        public event GetHaitaDataCompletedEventHandler GetHaitaDataCompleted;
        
        /// <remarks/>
        public event UpdateHaitaCompletedEventHandler UpdateHaitaCompleted;
        
        /// <remarks/>
        public event UpdateNullHaitaCompletedEventHandler UpdateNullHaitaCompleted;
        
        /// <remarks/>
        public event CheckDisplayConditionCompletedEventHandler CheckDisplayConditionCompleted;
        
        /// <remarks/>
        public event GetShukkaMeisaiCompletedEventHandler GetShukkaMeisaiCompleted;
        
        /// <remarks/>
        public event GetExistsPictureCompletedEventHandler GetExistsPictureCompleted;
        
        /// <remarks/>
        public event GetExistsPictureFromDataTableCompletedEventHandler GetExistsPictureFromDataTableCompleted;
        
        /// <remarks/>
        public event InsShukkaKeikakuMeisaiCompletedEventHandler InsShukkaKeikakuMeisaiCompleted;
        
        /// <remarks/>
        public event UpdShukkaKeikakuMeisaiCompletedEventHandler UpdShukkaKeikakuMeisaiCompleted;
        
        /// <remarks/>
        public event DelShukkaKeikakuMeisaiCompletedEventHandler DelShukkaKeikakuMeisaiCompleted;
        
        /// <remarks/>
        public event GetTreeMeisaiCompletedEventHandler GetTreeMeisaiCompleted;
        
        /// <remarks/>
        public event UpdMoveShipCompletedEventHandler UpdMoveShipCompleted;
        
        /// <remarks/>
        public event GetKiwakuCompletedEventHandler GetKiwakuCompleted;
        
        /// <remarks/>
        public event DuplicateCaseNoCompletedEventHandler DuplicateCaseNoCompleted;
        
        /// <remarks/>
        public event GetBukkenNameListCompletedEventHandler GetBukkenNameListCompleted;
        
        /// <remarks/>
        public event GetShipListCompletedEventHandler GetShipListCompleted;
        
        /// <remarks/>
        public event GetTagRenkeiListCompletedEventHandler GetTagRenkeiListCompleted;
        
        /// <remarks/>
        public event GetAndLockTagRenkeiListCompletedEventHandler GetAndLockTagRenkeiListCompleted;
        
        /// <remarks/>
        public event GetEstimateFlagCompletedEventHandler GetEstimateFlagCompleted;
        
        /// <remarks/>
        public event GetShipToForTehaiNoCompletedEventHandler GetShipToForTehaiNoCompleted;
        
        /// <remarks/>
        public event UpdTehaimeisaiVersionDataCompletedEventHandler UpdTehaimeisaiVersionDataCompleted;
        
        /// <remarks/>
        public event InsTagRenkeiMailCompletedEventHandler InsTagRenkeiMailCompleted;
        
        /// <remarks/>
        public event GetTehaiMeisaiDataForIkkatsuUploadCompletedEventHandler GetTehaiMeisaiDataForIkkatsuUploadCompleted;
        
        /// <remarks/>
        public event InsManageZumenKeishikiCompletedEventHandler InsManageZumenKeishikiCompleted;
        
        /// <remarks/>
        public event S0100050_GetInitCompletedEventHandler S0100050_GetInitCompleted;
        
        /// <remarks/>
        public event S0100050_GetDispCompletedEventHandler S0100050_GetDispCompleted;
        
        /// <remarks/>
        public event GetNisugataBaseDataCompletedEventHandler GetNisugataBaseDataCompleted;
        
        /// <remarks/>
        public event S0100050_GetKiwakuMeisaiCompletedEventHandler S0100050_GetKiwakuMeisaiCompleted;
        
        /// <remarks/>
        public event S0100050_GetBoxListManageCompletedEventHandler S0100050_GetBoxListManageCompleted;
        
        /// <remarks/>
        public event S0100050_GetPalletListManageCompletedEventHandler S0100050_GetPalletListManageCompleted;
        
        /// <remarks/>
        public event UpdNisugataCompletedEventHandler UpdNisugataCompleted;
        
        /// <remarks/>
        public event DelNisugataCompletedEventHandler DelNisugataCompleted;
        
        /// <remarks/>
        public event GetNisugataExcelDataCompletedEventHandler GetNisugataExcelDataCompleted;
        
        /// <remarks/>
        public event GetMailIDCompletedEventHandler GetMailIDCompleted;
        
        /// <remarks/>
        public event UpdPackingForExcelDataCompletedEventHandler UpdPackingForExcelDataCompleted;
        
        /// <remarks/>
        public event GetMailSousinRirekiCompletedEventHandler GetMailSousinRirekiCompleted;
        
        /// <remarks/>
        public event GetNonyusakiForShokaiCompletedEventHandler GetNonyusakiForShokaiCompleted;
        
        /// <remarks/>
        public event GetSeibanCompletedEventHandler GetSeibanCompleted;
        
        /// <remarks/>
        public event GetKishuCompletedEventHandler GetKishuCompleted;
        
        /// <remarks/>
        public event UpdNonyusakiForGenbayoCompletedEventHandler UpdNonyusakiForGenbayoCompleted;
        
        /// <remarks/>
        public event SendCondBaseCompletedEventHandler SendCondBaseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetInitShukkaKeikaku", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInitShukkaKeikaku(CondS01 cond) {
            object[] results = this.Invoke("GetInitShukkaKeikaku", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInitShukkaKeikakuAsync(CondS01 cond) {
            this.GetInitShukkaKeikakuAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetInitShukkaKeikakuAsync(CondS01 cond, object userState) {
            if ((this.GetInitShukkaKeikakuOperationCompleted == null)) {
                this.GetInitShukkaKeikakuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInitShukkaKeikakuOperationCompleted);
            }
            this.InvokeAsync("GetInitShukkaKeikaku", new object[] {
                        cond}, this.GetInitShukkaKeikakuOperationCompleted, userState);
        }
        
        private void OnGetInitShukkaKeikakuOperationCompleted(object arg) {
            if ((this.GetInitShukkaKeikakuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInitShukkaKeikakuCompleted(this, new GetInitShukkaKeikakuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsShukkaKeikaku", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsShukkaKeikaku(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsShukkaKeikaku", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsShukkaKeikakuAsync(CondS01 cond, System.Data.DataSet ds) {
            this.InsShukkaKeikakuAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsShukkaKeikakuAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsShukkaKeikakuOperationCompleted == null)) {
                this.InsShukkaKeikakuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsShukkaKeikakuOperationCompleted);
            }
            this.InvokeAsync("InsShukkaKeikaku", new object[] {
                        cond,
                        ds}, this.InsShukkaKeikakuOperationCompleted, userState);
        }
        
        private void OnInsShukkaKeikakuOperationCompleted(object arg) {
            if ((this.InsShukkaKeikakuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsShukkaKeikakuCompleted(this, new InsShukkaKeikakuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetBukkenNameListForTorikomi", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBukkenNameListForTorikomi() {
            object[] results = this.Invoke("GetBukkenNameListForTorikomi", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBukkenNameListForTorikomiAsync() {
            this.GetBukkenNameListForTorikomiAsync(null);
        }
        
        /// <remarks/>
        public void GetBukkenNameListForTorikomiAsync(object userState) {
            if ((this.GetBukkenNameListForTorikomiOperationCompleted == null)) {
                this.GetBukkenNameListForTorikomiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBukkenNameListForTorikomiOperationCompleted);
            }
            this.InvokeAsync("GetBukkenNameListForTorikomi", new object[0], this.GetBukkenNameListForTorikomiOperationCompleted, userState);
        }
        
        private void OnGetBukkenNameListForTorikomiOperationCompleted(object arg) {
            if ((this.GetBukkenNameListForTorikomiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBukkenNameListForTorikomiCompleted(this, new GetBukkenNameListForTorikomiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetConsignList", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConsignList() {
            object[] results = this.Invoke("GetConsignList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetConsignListAsync() {
            this.GetConsignListAsync(null);
        }
        
        /// <remarks/>
        public void GetConsignListAsync(object userState) {
            if ((this.GetConsignListOperationCompleted == null)) {
                this.GetConsignListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConsignListOperationCompleted);
            }
            this.InvokeAsync("GetConsignList", new object[0], this.GetConsignListOperationCompleted, userState);
        }
        
        private void OnGetConsignListOperationCompleted(object arg) {
            if ((this.GetConsignListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConsignListCompleted(this, new GetConsignListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetShukkamoto", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShukkamoto() {
            object[] results = this.Invoke("GetShukkamoto", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShukkamotoAsync() {
            this.GetShukkamotoAsync(null);
        }
        
        /// <remarks/>
        public void GetShukkamotoAsync(object userState) {
            if ((this.GetShukkamotoOperationCompleted == null)) {
                this.GetShukkamotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShukkamotoOperationCompleted);
            }
            this.InvokeAsync("GetShukkamoto", new object[0], this.GetShukkamotoOperationCompleted, userState);
        }
        
        private void OnGetShukkamotoOperationCompleted(object arg) {
            if ((this.GetShukkamotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShukkamotoCompleted(this, new GetShukkamotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetShukkasaki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShukkasaki() {
            object[] results = this.Invoke("GetShukkasaki", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShukkasakiAsync() {
            this.GetShukkasakiAsync(null);
        }
        
        /// <remarks/>
        public void GetShukkasakiAsync(object userState) {
            if ((this.GetShukkasakiOperationCompleted == null)) {
                this.GetShukkasakiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShukkasakiOperationCompleted);
            }
            this.InvokeAsync("GetShukkasaki", new object[0], this.GetShukkasakiOperationCompleted, userState);
        }
        
        private void OnGetShukkasakiOperationCompleted(object arg) {
            if ((this.GetShukkasakiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShukkasakiCompleted(this, new GetShukkasakiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetNonyusaki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNonyusaki(CondS01 cond) {
            object[] results = this.Invoke("GetNonyusaki", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonyusakiAsync(CondS01 cond) {
            this.GetNonyusakiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetNonyusakiAsync(CondS01 cond, object userState) {
            if ((this.GetNonyusakiOperationCompleted == null)) {
                this.GetNonyusakiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonyusakiOperationCompleted);
            }
            this.InvokeAsync("GetNonyusaki", new object[] {
                        cond}, this.GetNonyusakiOperationCompleted, userState);
        }
        
        private void OnGetNonyusakiOperationCompleted(object arg) {
            if ((this.GetNonyusakiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonyusakiCompleted(this, new GetNonyusakiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdPlanning", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdPlanning(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdPlanning", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdPlanningAsync(CondS01 cond, System.Data.DataSet ds) {
            this.UpdPlanningAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdPlanningAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdPlanningOperationCompleted == null)) {
                this.UpdPlanningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdPlanningOperationCompleted);
            }
            this.InvokeAsync("UpdPlanning", new object[] {
                        cond,
                        ds}, this.UpdPlanningOperationCompleted, userState);
        }
        
        private void OnUpdPlanningOperationCompleted(object arg) {
            if ((this.UpdPlanningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdPlanningCompleted(this, new UpdPlanningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsertRevision", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertRevision(CondS01 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsertRevision", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRevisionAsync(CondS01 cond) {
            this.InsertRevisionAsync(cond, null);
        }
        
        /// <remarks/>
        public void InsertRevisionAsync(CondS01 cond, object userState) {
            if ((this.InsertRevisionOperationCompleted == null)) {
                this.InsertRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRevisionOperationCompleted);
            }
            this.InvokeAsync("InsertRevision", new object[] {
                        cond}, this.InsertRevisionOperationCompleted, userState);
        }
        
        private void OnInsertRevisionOperationCompleted(object arg) {
            if ((this.InsertRevisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRevisionCompleted(this, new InsertRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetHaitaData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHaitaData(CondS01 cond) {
            object[] results = this.Invoke("GetHaitaData", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHaitaDataAsync(CondS01 cond) {
            this.GetHaitaDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetHaitaDataAsync(CondS01 cond, object userState) {
            if ((this.GetHaitaDataOperationCompleted == null)) {
                this.GetHaitaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHaitaDataOperationCompleted);
            }
            this.InvokeAsync("GetHaitaData", new object[] {
                        cond}, this.GetHaitaDataOperationCompleted, userState);
        }
        
        private void OnGetHaitaDataOperationCompleted(object arg) {
            if ((this.GetHaitaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHaitaDataCompleted(this, new GetHaitaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdateHaita", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateHaita(CondS01 cond) {
            object[] results = this.Invoke("UpdateHaita", new object[] {
                        cond});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHaitaAsync(CondS01 cond) {
            this.UpdateHaitaAsync(cond, null);
        }
        
        /// <remarks/>
        public void UpdateHaitaAsync(CondS01 cond, object userState) {
            if ((this.UpdateHaitaOperationCompleted == null)) {
                this.UpdateHaitaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHaitaOperationCompleted);
            }
            this.InvokeAsync("UpdateHaita", new object[] {
                        cond}, this.UpdateHaitaOperationCompleted, userState);
        }
        
        private void OnUpdateHaitaOperationCompleted(object arg) {
            if ((this.UpdateHaitaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHaitaCompleted(this, new UpdateHaitaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdateNullHaita", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateNullHaita(CondS01 cond) {
            object[] results = this.Invoke("UpdateNullHaita", new object[] {
                        cond});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNullHaitaAsync(CondS01 cond) {
            this.UpdateNullHaitaAsync(cond, null);
        }
        
        /// <remarks/>
        public void UpdateNullHaitaAsync(CondS01 cond, object userState) {
            if ((this.UpdateNullHaitaOperationCompleted == null)) {
                this.UpdateNullHaitaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNullHaitaOperationCompleted);
            }
            this.InvokeAsync("UpdateNullHaita", new object[] {
                        cond}, this.UpdateNullHaitaOperationCompleted, userState);
        }
        
        private void OnUpdateNullHaitaOperationCompleted(object arg) {
            if ((this.UpdateNullHaitaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNullHaitaCompleted(this, new UpdateNullHaitaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/CheckDisplayCondition", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDisplayCondition(CondS01 cond, out System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("CheckDisplayCondition", new object[] {
                        cond});
            ds = ((System.Data.DataSet)(results[1]));
            errMsgID = ((string)(results[2]));
            args = ((string[])(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDisplayConditionAsync(CondS01 cond) {
            this.CheckDisplayConditionAsync(cond, null);
        }
        
        /// <remarks/>
        public void CheckDisplayConditionAsync(CondS01 cond, object userState) {
            if ((this.CheckDisplayConditionOperationCompleted == null)) {
                this.CheckDisplayConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDisplayConditionOperationCompleted);
            }
            this.InvokeAsync("CheckDisplayCondition", new object[] {
                        cond}, this.CheckDisplayConditionOperationCompleted, userState);
        }
        
        private void OnCheckDisplayConditionOperationCompleted(object arg) {
            if ((this.CheckDisplayConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDisplayConditionCompleted(this, new CheckDisplayConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetShukkaMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShukkaMeisai(CondS01 cond) {
            object[] results = this.Invoke("GetShukkaMeisai", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShukkaMeisaiAsync(CondS01 cond) {
            this.GetShukkaMeisaiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetShukkaMeisaiAsync(CondS01 cond, object userState) {
            if ((this.GetShukkaMeisaiOperationCompleted == null)) {
                this.GetShukkaMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShukkaMeisaiOperationCompleted);
            }
            this.InvokeAsync("GetShukkaMeisai", new object[] {
                        cond}, this.GetShukkaMeisaiOperationCompleted, userState);
        }
        
        private void OnGetShukkaMeisaiOperationCompleted(object arg) {
            if ((this.GetShukkaMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShukkaMeisaiCompleted(this, new GetShukkaMeisaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetExistsPicture", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetExistsPicture(CondS01 cond) {
            object[] results = this.Invoke("GetExistsPicture", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetExistsPictureAsync(CondS01 cond) {
            this.GetExistsPictureAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetExistsPictureAsync(CondS01 cond, object userState) {
            if ((this.GetExistsPictureOperationCompleted == null)) {
                this.GetExistsPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExistsPictureOperationCompleted);
            }
            this.InvokeAsync("GetExistsPicture", new object[] {
                        cond}, this.GetExistsPictureOperationCompleted, userState);
        }
        
        private void OnGetExistsPictureOperationCompleted(object arg) {
            if ((this.GetExistsPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExistsPictureCompleted(this, new GetExistsPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetExistsPictureFromDataTable", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetExistsPictureFromDataTable(CondS01 cond, System.Data.DataTable dt) {
            object[] results = this.Invoke("GetExistsPictureFromDataTable", new object[] {
                        cond,
                        dt});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetExistsPictureFromDataTableAsync(CondS01 cond, System.Data.DataTable dt) {
            this.GetExistsPictureFromDataTableAsync(cond, dt, null);
        }
        
        /// <remarks/>
        public void GetExistsPictureFromDataTableAsync(CondS01 cond, System.Data.DataTable dt, object userState) {
            if ((this.GetExistsPictureFromDataTableOperationCompleted == null)) {
                this.GetExistsPictureFromDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExistsPictureFromDataTableOperationCompleted);
            }
            this.InvokeAsync("GetExistsPictureFromDataTable", new object[] {
                        cond,
                        dt}, this.GetExistsPictureFromDataTableOperationCompleted, userState);
        }
        
        private void OnGetExistsPictureFromDataTableOperationCompleted(object arg) {
            if ((this.GetExistsPictureFromDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExistsPictureFromDataTableCompleted(this, new GetExistsPictureFromDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsShukkaKeikakuMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsShukkaKeikakuMeisai(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsShukkaKeikakuMeisai", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsShukkaKeikakuMeisaiAsync(CondS01 cond, System.Data.DataSet ds) {
            this.InsShukkaKeikakuMeisaiAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsShukkaKeikakuMeisaiAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsShukkaKeikakuMeisaiOperationCompleted == null)) {
                this.InsShukkaKeikakuMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsShukkaKeikakuMeisaiOperationCompleted);
            }
            this.InvokeAsync("InsShukkaKeikakuMeisai", new object[] {
                        cond,
                        ds}, this.InsShukkaKeikakuMeisaiOperationCompleted, userState);
        }
        
        private void OnInsShukkaKeikakuMeisaiOperationCompleted(object arg) {
            if ((this.InsShukkaKeikakuMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsShukkaKeikakuMeisaiCompleted(this, new InsShukkaKeikakuMeisaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdShukkaKeikakuMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdShukkaKeikakuMeisai(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdShukkaKeikakuMeisai", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdShukkaKeikakuMeisaiAsync(CondS01 cond, System.Data.DataSet ds) {
            this.UpdShukkaKeikakuMeisaiAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdShukkaKeikakuMeisaiAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdShukkaKeikakuMeisaiOperationCompleted == null)) {
                this.UpdShukkaKeikakuMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdShukkaKeikakuMeisaiOperationCompleted);
            }
            this.InvokeAsync("UpdShukkaKeikakuMeisai", new object[] {
                        cond,
                        ds}, this.UpdShukkaKeikakuMeisaiOperationCompleted, userState);
        }
        
        private void OnUpdShukkaKeikakuMeisaiOperationCompleted(object arg) {
            if ((this.UpdShukkaKeikakuMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdShukkaKeikakuMeisaiCompleted(this, new UpdShukkaKeikakuMeisaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelShukkaKeikakuMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelShukkaKeikakuMeisai(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelShukkaKeikakuMeisai", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelShukkaKeikakuMeisaiAsync(CondS01 cond, System.Data.DataSet ds) {
            this.DelShukkaKeikakuMeisaiAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelShukkaKeikakuMeisaiAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelShukkaKeikakuMeisaiOperationCompleted == null)) {
                this.DelShukkaKeikakuMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelShukkaKeikakuMeisaiOperationCompleted);
            }
            this.InvokeAsync("DelShukkaKeikakuMeisai", new object[] {
                        cond,
                        ds}, this.DelShukkaKeikakuMeisaiOperationCompleted, userState);
        }
        
        private void OnDelShukkaKeikakuMeisaiOperationCompleted(object arg) {
            if ((this.DelShukkaKeikakuMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelShukkaKeikakuMeisaiCompleted(this, new DelShukkaKeikakuMeisaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetTreeMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTreeMeisai(CondS01 cond) {
            object[] results = this.Invoke("GetTreeMeisai", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTreeMeisaiAsync(CondS01 cond) {
            this.GetTreeMeisaiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetTreeMeisaiAsync(CondS01 cond, object userState) {
            if ((this.GetTreeMeisaiOperationCompleted == null)) {
                this.GetTreeMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTreeMeisaiOperationCompleted);
            }
            this.InvokeAsync("GetTreeMeisai", new object[] {
                        cond}, this.GetTreeMeisaiOperationCompleted, userState);
        }
        
        private void OnGetTreeMeisaiOperationCompleted(object arg) {
            if ((this.GetTreeMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTreeMeisaiCompleted(this, new GetTreeMeisaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdMoveShip", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdMoveShip(CondS01 cond) {
            object[] results = this.Invoke("UpdMoveShip", new object[] {
                        cond});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdMoveShipAsync(CondS01 cond) {
            this.UpdMoveShipAsync(cond, null);
        }
        
        /// <remarks/>
        public void UpdMoveShipAsync(CondS01 cond, object userState) {
            if ((this.UpdMoveShipOperationCompleted == null)) {
                this.UpdMoveShipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdMoveShipOperationCompleted);
            }
            this.InvokeAsync("UpdMoveShip", new object[] {
                        cond}, this.UpdMoveShipOperationCompleted, userState);
        }
        
        private void OnUpdMoveShipOperationCompleted(object arg) {
            if ((this.UpdMoveShipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdMoveShipCompleted(this, new UpdMoveShipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetKiwaku", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetKiwaku(CondS01 cond) {
            object[] results = this.Invoke("GetKiwaku", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetKiwakuAsync(CondS01 cond) {
            this.GetKiwakuAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetKiwakuAsync(CondS01 cond, object userState) {
            if ((this.GetKiwakuOperationCompleted == null)) {
                this.GetKiwakuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKiwakuOperationCompleted);
            }
            this.InvokeAsync("GetKiwaku", new object[] {
                        cond}, this.GetKiwakuOperationCompleted, userState);
        }
        
        private void OnGetKiwakuOperationCompleted(object arg) {
            if ((this.GetKiwakuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKiwakuCompleted(this, new GetKiwakuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DuplicateCaseNo", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DuplicateCaseNo(CondS01 cond) {
            object[] results = this.Invoke("DuplicateCaseNo", new object[] {
                        cond});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DuplicateCaseNoAsync(CondS01 cond) {
            this.DuplicateCaseNoAsync(cond, null);
        }
        
        /// <remarks/>
        public void DuplicateCaseNoAsync(CondS01 cond, object userState) {
            if ((this.DuplicateCaseNoOperationCompleted == null)) {
                this.DuplicateCaseNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDuplicateCaseNoOperationCompleted);
            }
            this.InvokeAsync("DuplicateCaseNo", new object[] {
                        cond}, this.DuplicateCaseNoOperationCompleted, userState);
        }
        
        private void OnDuplicateCaseNoOperationCompleted(object arg) {
            if ((this.DuplicateCaseNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DuplicateCaseNoCompleted(this, new DuplicateCaseNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetBukkenNameList", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBukkenNameList(CondS01 cond) {
            object[] results = this.Invoke("GetBukkenNameList", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBukkenNameListAsync(CondS01 cond) {
            this.GetBukkenNameListAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetBukkenNameListAsync(CondS01 cond, object userState) {
            if ((this.GetBukkenNameListOperationCompleted == null)) {
                this.GetBukkenNameListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBukkenNameListOperationCompleted);
            }
            this.InvokeAsync("GetBukkenNameList", new object[] {
                        cond}, this.GetBukkenNameListOperationCompleted, userState);
        }
        
        private void OnGetBukkenNameListOperationCompleted(object arg) {
            if ((this.GetBukkenNameListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBukkenNameListCompleted(this, new GetBukkenNameListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetShipList", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetShipList(CondS01 cond) {
            object[] results = this.Invoke("GetShipList", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetShipListAsync(CondS01 cond) {
            this.GetShipListAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetShipListAsync(CondS01 cond, object userState) {
            if ((this.GetShipListOperationCompleted == null)) {
                this.GetShipListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShipListOperationCompleted);
            }
            this.InvokeAsync("GetShipList", new object[] {
                        cond}, this.GetShipListOperationCompleted, userState);
        }
        
        private void OnGetShipListOperationCompleted(object arg) {
            if ((this.GetShipListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShipListCompleted(this, new GetShipListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetTagRenkeiList", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTagRenkeiList(CondS01 cond) {
            object[] results = this.Invoke("GetTagRenkeiList", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTagRenkeiListAsync(CondS01 cond) {
            this.GetTagRenkeiListAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetTagRenkeiListAsync(CondS01 cond, object userState) {
            if ((this.GetTagRenkeiListOperationCompleted == null)) {
                this.GetTagRenkeiListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTagRenkeiListOperationCompleted);
            }
            this.InvokeAsync("GetTagRenkeiList", new object[] {
                        cond}, this.GetTagRenkeiListOperationCompleted, userState);
        }
        
        private void OnGetTagRenkeiListOperationCompleted(object arg) {
            if ((this.GetTagRenkeiListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTagRenkeiListCompleted(this, new GetTagRenkeiListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetAndLockTagRenkeiList", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAndLockTagRenkeiList(CondS01 cond, System.Data.DataSet ds, bool isLock) {
            object[] results = this.Invoke("GetAndLockTagRenkeiList", new object[] {
                        cond,
                        ds,
                        isLock});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAndLockTagRenkeiListAsync(CondS01 cond, System.Data.DataSet ds, bool isLock) {
            this.GetAndLockTagRenkeiListAsync(cond, ds, isLock, null);
        }
        
        /// <remarks/>
        public void GetAndLockTagRenkeiListAsync(CondS01 cond, System.Data.DataSet ds, bool isLock, object userState) {
            if ((this.GetAndLockTagRenkeiListOperationCompleted == null)) {
                this.GetAndLockTagRenkeiListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAndLockTagRenkeiListOperationCompleted);
            }
            this.InvokeAsync("GetAndLockTagRenkeiList", new object[] {
                        cond,
                        ds,
                        isLock}, this.GetAndLockTagRenkeiListOperationCompleted, userState);
        }
        
        private void OnGetAndLockTagRenkeiListOperationCompleted(object arg) {
            if ((this.GetAndLockTagRenkeiListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAndLockTagRenkeiListCompleted(this, new GetAndLockTagRenkeiListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetEstimateFlag", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEstimateFlag(CondS01 cond) {
            object[] results = this.Invoke("GetEstimateFlag", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEstimateFlagAsync(CondS01 cond) {
            this.GetEstimateFlagAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetEstimateFlagAsync(CondS01 cond, object userState) {
            if ((this.GetEstimateFlagOperationCompleted == null)) {
                this.GetEstimateFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEstimateFlagOperationCompleted);
            }
            this.InvokeAsync("GetEstimateFlag", new object[] {
                        cond}, this.GetEstimateFlagOperationCompleted, userState);
        }
        
        private void OnGetEstimateFlagOperationCompleted(object arg) {
            if ((this.GetEstimateFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEstimateFlagCompleted(this, new GetEstimateFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetShipToForTehaiNo", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetShipToForTehaiNo(CondS01 cond, string tehaiNo) {
            object[] results = this.Invoke("GetShipToForTehaiNo", new object[] {
                        cond,
                        tehaiNo});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetShipToForTehaiNoAsync(CondS01 cond, string tehaiNo) {
            this.GetShipToForTehaiNoAsync(cond, tehaiNo, null);
        }
        
        /// <remarks/>
        public void GetShipToForTehaiNoAsync(CondS01 cond, string tehaiNo, object userState) {
            if ((this.GetShipToForTehaiNoOperationCompleted == null)) {
                this.GetShipToForTehaiNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShipToForTehaiNoOperationCompleted);
            }
            this.InvokeAsync("GetShipToForTehaiNo", new object[] {
                        cond,
                        tehaiNo}, this.GetShipToForTehaiNoOperationCompleted, userState);
        }
        
        private void OnGetShipToForTehaiNoOperationCompleted(object arg) {
            if ((this.GetShipToForTehaiNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShipToForTehaiNoCompleted(this, new GetShipToForTehaiNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdTehaimeisaiVersionData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdTehaimeisaiVersionData(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdTehaimeisaiVersionData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdTehaimeisaiVersionDataAsync(CondS01 cond, System.Data.DataSet ds) {
            this.UpdTehaimeisaiVersionDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdTehaimeisaiVersionDataAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdTehaimeisaiVersionDataOperationCompleted == null)) {
                this.UpdTehaimeisaiVersionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdTehaimeisaiVersionDataOperationCompleted);
            }
            this.InvokeAsync("UpdTehaimeisaiVersionData", new object[] {
                        cond,
                        ds}, this.UpdTehaimeisaiVersionDataOperationCompleted, userState);
        }
        
        private void OnUpdTehaimeisaiVersionDataOperationCompleted(object arg) {
            if ((this.UpdTehaimeisaiVersionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdTehaimeisaiVersionDataCompleted(this, new UpdTehaimeisaiVersionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsTagRenkeiMail", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsTagRenkeiMail(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsTagRenkeiMail", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsTagRenkeiMailAsync(CondS01 cond, System.Data.DataSet ds) {
            this.InsTagRenkeiMailAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsTagRenkeiMailAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsTagRenkeiMailOperationCompleted == null)) {
                this.InsTagRenkeiMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsTagRenkeiMailOperationCompleted);
            }
            this.InvokeAsync("InsTagRenkeiMail", new object[] {
                        cond,
                        ds}, this.InsTagRenkeiMailOperationCompleted, userState);
        }
        
        private void OnInsTagRenkeiMailOperationCompleted(object arg) {
            if ((this.InsTagRenkeiMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsTagRenkeiMailCompleted(this, new InsTagRenkeiMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetTehaiMeisaiDataForIkkatsuUpload", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTehaiMeisaiDataForIkkatsuUpload(CondS01 cond, System.Data.DataSet dsSearch) {
            object[] results = this.Invoke("GetTehaiMeisaiDataForIkkatsuUpload", new object[] {
                        cond,
                        dsSearch});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTehaiMeisaiDataForIkkatsuUploadAsync(CondS01 cond, System.Data.DataSet dsSearch) {
            this.GetTehaiMeisaiDataForIkkatsuUploadAsync(cond, dsSearch, null);
        }
        
        /// <remarks/>
        public void GetTehaiMeisaiDataForIkkatsuUploadAsync(CondS01 cond, System.Data.DataSet dsSearch, object userState) {
            if ((this.GetTehaiMeisaiDataForIkkatsuUploadOperationCompleted == null)) {
                this.GetTehaiMeisaiDataForIkkatsuUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTehaiMeisaiDataForIkkatsuUploadOperationCompleted);
            }
            this.InvokeAsync("GetTehaiMeisaiDataForIkkatsuUpload", new object[] {
                        cond,
                        dsSearch}, this.GetTehaiMeisaiDataForIkkatsuUploadOperationCompleted, userState);
        }
        
        private void OnGetTehaiMeisaiDataForIkkatsuUploadOperationCompleted(object arg) {
            if ((this.GetTehaiMeisaiDataForIkkatsuUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTehaiMeisaiDataForIkkatsuUploadCompleted(this, new GetTehaiMeisaiDataForIkkatsuUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsManageZumenKeishiki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsManageZumenKeishiki(CondS01 cond, System.Data.DataSet ds, out System.Data.DataTable dtZumenKeishiki, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsManageZumenKeishiki", new object[] {
                        cond,
                        ds});
            dtZumenKeishiki = ((System.Data.DataTable)(results[1]));
            errMsgID = ((string)(results[2]));
            args = ((string[])(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsManageZumenKeishikiAsync(CondS01 cond, System.Data.DataSet ds) {
            this.InsManageZumenKeishikiAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsManageZumenKeishikiAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsManageZumenKeishikiOperationCompleted == null)) {
                this.InsManageZumenKeishikiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsManageZumenKeishikiOperationCompleted);
            }
            this.InvokeAsync("InsManageZumenKeishiki", new object[] {
                        cond,
                        ds}, this.InsManageZumenKeishikiOperationCompleted, userState);
        }
        
        private void OnInsManageZumenKeishikiOperationCompleted(object arg) {
            if ((this.InsManageZumenKeishikiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsManageZumenKeishikiCompleted(this, new InsManageZumenKeishikiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/S0100050_GetInit", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet S0100050_GetInit(CondS01 cond) {
            object[] results = this.Invoke("S0100050_GetInit", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void S0100050_GetInitAsync(CondS01 cond) {
            this.S0100050_GetInitAsync(cond, null);
        }
        
        /// <remarks/>
        public void S0100050_GetInitAsync(CondS01 cond, object userState) {
            if ((this.S0100050_GetInitOperationCompleted == null)) {
                this.S0100050_GetInitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnS0100050_GetInitOperationCompleted);
            }
            this.InvokeAsync("S0100050_GetInit", new object[] {
                        cond}, this.S0100050_GetInitOperationCompleted, userState);
        }
        
        private void OnS0100050_GetInitOperationCompleted(object arg) {
            if ((this.S0100050_GetInitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.S0100050_GetInitCompleted(this, new S0100050_GetInitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/S0100050_GetDisp", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet S0100050_GetDisp(CondS01 cond) {
            object[] results = this.Invoke("S0100050_GetDisp", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void S0100050_GetDispAsync(CondS01 cond) {
            this.S0100050_GetDispAsync(cond, null);
        }
        
        /// <remarks/>
        public void S0100050_GetDispAsync(CondS01 cond, object userState) {
            if ((this.S0100050_GetDispOperationCompleted == null)) {
                this.S0100050_GetDispOperationCompleted = new System.Threading.SendOrPostCallback(this.OnS0100050_GetDispOperationCompleted);
            }
            this.InvokeAsync("S0100050_GetDisp", new object[] {
                        cond}, this.S0100050_GetDispOperationCompleted, userState);
        }
        
        private void OnS0100050_GetDispOperationCompleted(object arg) {
            if ((this.S0100050_GetDispCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.S0100050_GetDispCompleted(this, new S0100050_GetDispCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetNisugataBaseData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNisugataBaseData(CondS01 cond) {
            object[] results = this.Invoke("GetNisugataBaseData", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNisugataBaseDataAsync(CondS01 cond) {
            this.GetNisugataBaseDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetNisugataBaseDataAsync(CondS01 cond, object userState) {
            if ((this.GetNisugataBaseDataOperationCompleted == null)) {
                this.GetNisugataBaseDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNisugataBaseDataOperationCompleted);
            }
            this.InvokeAsync("GetNisugataBaseData", new object[] {
                        cond}, this.GetNisugataBaseDataOperationCompleted, userState);
        }
        
        private void OnGetNisugataBaseDataOperationCompleted(object arg) {
            if ((this.GetNisugataBaseDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNisugataBaseDataCompleted(this, new GetNisugataBaseDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/S0100050_GetKiwakuMeisai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet S0100050_GetKiwakuMeisai(CondS01 cond) {
            object[] results = this.Invoke("S0100050_GetKiwakuMeisai", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void S0100050_GetKiwakuMeisaiAsync(CondS01 cond) {
            this.S0100050_GetKiwakuMeisaiAsync(cond, null);
        }
        
        /// <remarks/>
        public void S0100050_GetKiwakuMeisaiAsync(CondS01 cond, object userState) {
            if ((this.S0100050_GetKiwakuMeisaiOperationCompleted == null)) {
                this.S0100050_GetKiwakuMeisaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnS0100050_GetKiwakuMeisaiOperationCompleted);
            }
            this.InvokeAsync("S0100050_GetKiwakuMeisai", new object[] {
                        cond}, this.S0100050_GetKiwakuMeisaiOperationCompleted, userState);
        }
        
        private void OnS0100050_GetKiwakuMeisaiOperationCompleted(object arg) {
            if ((this.S0100050_GetKiwakuMeisaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.S0100050_GetKiwakuMeisaiCompleted(this, new S0100050_GetKiwakuMeisaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/S0100050_GetBoxListManage", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool S0100050_GetBoxListManage(CondS01 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("S0100050_GetBoxListManage", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void S0100050_GetBoxListManageAsync(CondS01 cond) {
            this.S0100050_GetBoxListManageAsync(cond, null);
        }
        
        /// <remarks/>
        public void S0100050_GetBoxListManageAsync(CondS01 cond, object userState) {
            if ((this.S0100050_GetBoxListManageOperationCompleted == null)) {
                this.S0100050_GetBoxListManageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnS0100050_GetBoxListManageOperationCompleted);
            }
            this.InvokeAsync("S0100050_GetBoxListManage", new object[] {
                        cond}, this.S0100050_GetBoxListManageOperationCompleted, userState);
        }
        
        private void OnS0100050_GetBoxListManageOperationCompleted(object arg) {
            if ((this.S0100050_GetBoxListManageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.S0100050_GetBoxListManageCompleted(this, new S0100050_GetBoxListManageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/S0100050_GetPalletListManage", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool S0100050_GetPalletListManage(CondS01 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("S0100050_GetPalletListManage", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void S0100050_GetPalletListManageAsync(CondS01 cond) {
            this.S0100050_GetPalletListManageAsync(cond, null);
        }
        
        /// <remarks/>
        public void S0100050_GetPalletListManageAsync(CondS01 cond, object userState) {
            if ((this.S0100050_GetPalletListManageOperationCompleted == null)) {
                this.S0100050_GetPalletListManageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnS0100050_GetPalletListManageOperationCompleted);
            }
            this.InvokeAsync("S0100050_GetPalletListManage", new object[] {
                        cond}, this.S0100050_GetPalletListManageOperationCompleted, userState);
        }
        
        private void OnS0100050_GetPalletListManageOperationCompleted(object arg) {
            if ((this.S0100050_GetPalletListManageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.S0100050_GetPalletListManageCompleted(this, new S0100050_GetPalletListManageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdNisugata", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdNisugata(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdNisugata", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdNisugataAsync(CondS01 cond, System.Data.DataSet ds) {
            this.UpdNisugataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdNisugataAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdNisugataOperationCompleted == null)) {
                this.UpdNisugataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdNisugataOperationCompleted);
            }
            this.InvokeAsync("UpdNisugata", new object[] {
                        cond,
                        ds}, this.UpdNisugataOperationCompleted, userState);
        }
        
        private void OnUpdNisugataOperationCompleted(object arg) {
            if ((this.UpdNisugataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdNisugataCompleted(this, new UpdNisugataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/DelNisugata", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelNisugata(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("DelNisugata", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelNisugataAsync(CondS01 cond, System.Data.DataSet ds) {
            this.DelNisugataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void DelNisugataAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.DelNisugataOperationCompleted == null)) {
                this.DelNisugataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelNisugataOperationCompleted);
            }
            this.InvokeAsync("DelNisugata", new object[] {
                        cond,
                        ds}, this.DelNisugataOperationCompleted, userState);
        }
        
        private void OnDelNisugataOperationCompleted(object arg) {
            if ((this.DelNisugataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelNisugataCompleted(this, new DelNisugataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetNisugataExcelData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNisugataExcelData(CondS01 cond) {
            object[] results = this.Invoke("GetNisugataExcelData", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNisugataExcelDataAsync(CondS01 cond) {
            this.GetNisugataExcelDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetNisugataExcelDataAsync(CondS01 cond, object userState) {
            if ((this.GetNisugataExcelDataOperationCompleted == null)) {
                this.GetNisugataExcelDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNisugataExcelDataOperationCompleted);
            }
            this.InvokeAsync("GetNisugataExcelData", new object[] {
                        cond}, this.GetNisugataExcelDataOperationCompleted, userState);
        }
        
        private void OnGetNisugataExcelDataOperationCompleted(object arg) {
            if ((this.GetNisugataExcelDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNisugataExcelDataCompleted(this, new GetNisugataExcelDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetMailID", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMailID(CondS01 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetMailID", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMailIDAsync(CondS01 cond) {
            this.GetMailIDAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetMailIDAsync(CondS01 cond, object userState) {
            if ((this.GetMailIDOperationCompleted == null)) {
                this.GetMailIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMailIDOperationCompleted);
            }
            this.InvokeAsync("GetMailID", new object[] {
                        cond}, this.GetMailIDOperationCompleted, userState);
        }
        
        private void OnGetMailIDOperationCompleted(object arg) {
            if ((this.GetMailIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMailIDCompleted(this, new GetMailIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdPackingForExcelData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdPackingForExcelData(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdPackingForExcelData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdPackingForExcelDataAsync(CondS01 cond, System.Data.DataSet ds) {
            this.UpdPackingForExcelDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdPackingForExcelDataAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdPackingForExcelDataOperationCompleted == null)) {
                this.UpdPackingForExcelDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdPackingForExcelDataOperationCompleted);
            }
            this.InvokeAsync("UpdPackingForExcelData", new object[] {
                        cond,
                        ds}, this.UpdPackingForExcelDataOperationCompleted, userState);
        }
        
        private void OnUpdPackingForExcelDataOperationCompleted(object arg) {
            if ((this.UpdPackingForExcelDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdPackingForExcelDataCompleted(this, new UpdPackingForExcelDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetMailSousinRireki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMailSousinRireki(CondS01 cond) {
            object[] results = this.Invoke("GetMailSousinRireki", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMailSousinRirekiAsync(CondS01 cond) {
            this.GetMailSousinRirekiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetMailSousinRirekiAsync(CondS01 cond, object userState) {
            if ((this.GetMailSousinRirekiOperationCompleted == null)) {
                this.GetMailSousinRirekiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMailSousinRirekiOperationCompleted);
            }
            this.InvokeAsync("GetMailSousinRireki", new object[] {
                        cond}, this.GetMailSousinRirekiOperationCompleted, userState);
        }
        
        private void OnGetMailSousinRirekiOperationCompleted(object arg) {
            if ((this.GetMailSousinRirekiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMailSousinRirekiCompleted(this, new GetMailSousinRirekiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetNonyusakiForShokai", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNonyusakiForShokai(CondS01 cond) {
            object[] results = this.Invoke("GetNonyusakiForShokai", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonyusakiForShokaiAsync(CondS01 cond) {
            this.GetNonyusakiForShokaiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetNonyusakiForShokaiAsync(CondS01 cond, object userState) {
            if ((this.GetNonyusakiForShokaiOperationCompleted == null)) {
                this.GetNonyusakiForShokaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonyusakiForShokaiOperationCompleted);
            }
            this.InvokeAsync("GetNonyusakiForShokai", new object[] {
                        cond}, this.GetNonyusakiForShokaiOperationCompleted, userState);
        }
        
        private void OnGetNonyusakiForShokaiOperationCompleted(object arg) {
            if ((this.GetNonyusakiForShokaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonyusakiForShokaiCompleted(this, new GetNonyusakiForShokaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetSeiban", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeiban() {
            object[] results = this.Invoke("GetSeiban", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeibanAsync() {
            this.GetSeibanAsync(null);
        }
        
        /// <remarks/>
        public void GetSeibanAsync(object userState) {
            if ((this.GetSeibanOperationCompleted == null)) {
                this.GetSeibanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeibanOperationCompleted);
            }
            this.InvokeAsync("GetSeiban", new object[0], this.GetSeibanOperationCompleted, userState);
        }
        
        private void OnGetSeibanOperationCompleted(object arg) {
            if ((this.GetSeibanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeibanCompleted(this, new GetSeibanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetKishu", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetKishu() {
            object[] results = this.Invoke("GetKishu", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetKishuAsync() {
            this.GetKishuAsync(null);
        }
        
        /// <remarks/>
        public void GetKishuAsync(object userState) {
            if ((this.GetKishuOperationCompleted == null)) {
                this.GetKishuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKishuOperationCompleted);
            }
            this.InvokeAsync("GetKishu", new object[0], this.GetKishuOperationCompleted, userState);
        }
        
        private void OnGetKishuOperationCompleted(object arg) {
            if ((this.GetKishuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKishuCompleted(this, new GetKishuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdNonyusakiForGenbayo", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdNonyusakiForGenbayo(CondS01 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdNonyusakiForGenbayo", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdNonyusakiForGenbayoAsync(CondS01 cond, System.Data.DataSet ds) {
            this.UpdNonyusakiForGenbayoAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdNonyusakiForGenbayoAsync(CondS01 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdNonyusakiForGenbayoOperationCompleted == null)) {
                this.UpdNonyusakiForGenbayoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdNonyusakiForGenbayoOperationCompleted);
            }
            this.InvokeAsync("UpdNonyusakiForGenbayo", new object[] {
                        cond,
                        ds}, this.UpdNonyusakiForGenbayoOperationCompleted, userState);
        }
        
        private void OnUpdNonyusakiForGenbayoOperationCompleted(object arg) {
            if ((this.UpdNonyusakiForGenbayoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdNonyusakiForGenbayoCompleted(this, new UpdNonyusakiForGenbayoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SendCondBase", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendCondBase(CondBase cond) {
            this.Invoke("SendCondBase", new object[] {
                        cond});
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond) {
            this.SendCondBaseAsync(cond, null);
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond, object userState) {
            if ((this.SendCondBaseOperationCompleted == null)) {
                this.SendCondBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCondBaseOperationCompleted);
            }
            this.InvokeAsync("SendCondBase", new object[] {
                        cond}, this.SendCondBaseOperationCompleted, userState);
        }
        
        private void OnSendCondBaseOperationCompleted(object arg) {
            if ((this.SendCondBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCondBaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondS01 : CondBase {
        
        private bool modeInsertField;
        
        private bool modeExcelField;
        
        private bool modeUpdateField;
        
        private bool modeDeleteField;
        
        private bool modeViewField;
        
        private string shukkaFlagField;
        
        private string nonyusakiCDField;
        
        private string shipField;
        
        private string aRNoField;
        
        private string dispSelectField;
        
        private string bukkenNOField;
        
        private string operationFlagField;
        
        private string updatePCNameField;
        
        private string removePalletNoField;
        
        private string removeBoxNoField;
        
        private string kojiNoOrigField;
        
        private string caseIdOrigField;
        
        private string nonyusakiCDOrigField;
        
        private string nonyusakiCDDestField;
        
        private string kojiNoDestField;
        
        private string caseIdDestField;
        
        private string palletNoField;
        
        private string boxNoField;
        
        private string tagNoField;
        
        private string updateTaniField;
        
        private string caseNoField;
        
        private string printCaseNoField;
        
        private string caseIdField;
        
        private string sibanCodeListField;
        
        private string ecsNoListField;
        
        private string estimateFlagField;
        
        private string kokunaigaiFlagField;
        
        private string shipDateField;
        
        private string selectGroupCDField;
        
        private string groupCDField;
        
        private string zumenKeishikiField;
        
        private string unusedFlagField;
        
        private string shipFromCDField;
        
        private string shipFromField;
        
        private string nisugataSortOrderField;
        
        private string shipToField;
        
        private string consignCDField;
        
        private string bukkenNameField;
        
        private string consignNameField;
        
        private string shipSeibanField;
        
        private string bukkenRevField;
        
        private string assignCommentField;
        
        private string shipDateStartField;
        
        private string shipDateEndField;
        
        private string seibanField;
        
        private string kishuField;
        
        /// <remarks/>
        public bool ModeInsert {
            get {
                return this.modeInsertField;
            }
            set {
                this.modeInsertField = value;
            }
        }
        
        /// <remarks/>
        public bool ModeExcel {
            get {
                return this.modeExcelField;
            }
            set {
                this.modeExcelField = value;
            }
        }
        
        /// <remarks/>
        public bool ModeUpdate {
            get {
                return this.modeUpdateField;
            }
            set {
                this.modeUpdateField = value;
            }
        }
        
        /// <remarks/>
        public bool ModeDelete {
            get {
                return this.modeDeleteField;
            }
            set {
                this.modeDeleteField = value;
            }
        }
        
        /// <remarks/>
        public bool ModeView {
            get {
                return this.modeViewField;
            }
            set {
                this.modeViewField = value;
            }
        }
        
        /// <remarks/>
        public string ShukkaFlag {
            get {
                return this.shukkaFlagField;
            }
            set {
                this.shukkaFlagField = value;
            }
        }
        
        /// <remarks/>
        public string NonyusakiCD {
            get {
                return this.nonyusakiCDField;
            }
            set {
                this.nonyusakiCDField = value;
            }
        }
        
        /// <remarks/>
        public string Ship {
            get {
                return this.shipField;
            }
            set {
                this.shipField = value;
            }
        }
        
        /// <remarks/>
        public string ARNo {
            get {
                return this.aRNoField;
            }
            set {
                this.aRNoField = value;
            }
        }
        
        /// <remarks/>
        public string DispSelect {
            get {
                return this.dispSelectField;
            }
            set {
                this.dispSelectField = value;
            }
        }
        
        /// <remarks/>
        public string BukkenNO {
            get {
                return this.bukkenNOField;
            }
            set {
                this.bukkenNOField = value;
            }
        }
        
        /// <remarks/>
        public string OperationFlag {
            get {
                return this.operationFlagField;
            }
            set {
                this.operationFlagField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatePCName {
            get {
                return this.updatePCNameField;
            }
            set {
                this.updatePCNameField = value;
            }
        }
        
        /// <remarks/>
        public string RemovePalletNo {
            get {
                return this.removePalletNoField;
            }
            set {
                this.removePalletNoField = value;
            }
        }
        
        /// <remarks/>
        public string RemoveBoxNo {
            get {
                return this.removeBoxNoField;
            }
            set {
                this.removeBoxNoField = value;
            }
        }
        
        /// <remarks/>
        public string KojiNoOrig {
            get {
                return this.kojiNoOrigField;
            }
            set {
                this.kojiNoOrigField = value;
            }
        }
        
        /// <remarks/>
        public string CaseIdOrig {
            get {
                return this.caseIdOrigField;
            }
            set {
                this.caseIdOrigField = value;
            }
        }
        
        /// <remarks/>
        public string NonyusakiCDOrig {
            get {
                return this.nonyusakiCDOrigField;
            }
            set {
                this.nonyusakiCDOrigField = value;
            }
        }
        
        /// <remarks/>
        public string NonyusakiCDDest {
            get {
                return this.nonyusakiCDDestField;
            }
            set {
                this.nonyusakiCDDestField = value;
            }
        }
        
        /// <remarks/>
        public string KojiNoDest {
            get {
                return this.kojiNoDestField;
            }
            set {
                this.kojiNoDestField = value;
            }
        }
        
        /// <remarks/>
        public string CaseIdDest {
            get {
                return this.caseIdDestField;
            }
            set {
                this.caseIdDestField = value;
            }
        }
        
        /// <remarks/>
        public string PalletNo {
            get {
                return this.palletNoField;
            }
            set {
                this.palletNoField = value;
            }
        }
        
        /// <remarks/>
        public string BoxNo {
            get {
                return this.boxNoField;
            }
            set {
                this.boxNoField = value;
            }
        }
        
        /// <remarks/>
        public string TagNo {
            get {
                return this.tagNoField;
            }
            set {
                this.tagNoField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateTani {
            get {
                return this.updateTaniField;
            }
            set {
                this.updateTaniField = value;
            }
        }
        
        /// <remarks/>
        public string CaseNo {
            get {
                return this.caseNoField;
            }
            set {
                this.caseNoField = value;
            }
        }
        
        /// <remarks/>
        public string PrintCaseNo {
            get {
                return this.printCaseNoField;
            }
            set {
                this.printCaseNoField = value;
            }
        }
        
        /// <remarks/>
        public string CaseId {
            get {
                return this.caseIdField;
            }
            set {
                this.caseIdField = value;
            }
        }
        
        /// <remarks/>
        public string SibanCodeList {
            get {
                return this.sibanCodeListField;
            }
            set {
                this.sibanCodeListField = value;
            }
        }
        
        /// <remarks/>
        public string EcsNoList {
            get {
                return this.ecsNoListField;
            }
            set {
                this.ecsNoListField = value;
            }
        }
        
        /// <remarks/>
        public string EstimateFlag {
            get {
                return this.estimateFlagField;
            }
            set {
                this.estimateFlagField = value;
            }
        }
        
        /// <remarks/>
        public string KokunaigaiFlag {
            get {
                return this.kokunaigaiFlagField;
            }
            set {
                this.kokunaigaiFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ShipDate {
            get {
                return this.shipDateField;
            }
            set {
                this.shipDateField = value;
            }
        }
        
        /// <remarks/>
        public string SelectGroupCD {
            get {
                return this.selectGroupCDField;
            }
            set {
                this.selectGroupCDField = value;
            }
        }
        
        /// <remarks/>
        public string GroupCD {
            get {
                return this.groupCDField;
            }
            set {
                this.groupCDField = value;
            }
        }
        
        /// <remarks/>
        public string ZumenKeishiki {
            get {
                return this.zumenKeishikiField;
            }
            set {
                this.zumenKeishikiField = value;
            }
        }
        
        /// <remarks/>
        public string UnusedFlag {
            get {
                return this.unusedFlagField;
            }
            set {
                this.unusedFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ShipFromCD {
            get {
                return this.shipFromCDField;
            }
            set {
                this.shipFromCDField = value;
            }
        }
        
        /// <remarks/>
        public string ShipFrom {
            get {
                return this.shipFromField;
            }
            set {
                this.shipFromField = value;
            }
        }
        
        /// <remarks/>
        public string NisugataSortOrder {
            get {
                return this.nisugataSortOrderField;
            }
            set {
                this.nisugataSortOrderField = value;
            }
        }
        
        /// <remarks/>
        public string ShipTo {
            get {
                return this.shipToField;
            }
            set {
                this.shipToField = value;
            }
        }
        
        /// <remarks/>
        public string ConsignCD {
            get {
                return this.consignCDField;
            }
            set {
                this.consignCDField = value;
            }
        }
        
        /// <remarks/>
        public string BukkenName {
            get {
                return this.bukkenNameField;
            }
            set {
                this.bukkenNameField = value;
            }
        }
        
        /// <remarks/>
        public string ConsignName {
            get {
                return this.consignNameField;
            }
            set {
                this.consignNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShipSeiban {
            get {
                return this.shipSeibanField;
            }
            set {
                this.shipSeibanField = value;
            }
        }
        
        /// <remarks/>
        public string BukkenRev {
            get {
                return this.bukkenRevField;
            }
            set {
                this.bukkenRevField = value;
            }
        }
        
        /// <remarks/>
        public string AssignComment {
            get {
                return this.assignCommentField;
            }
            set {
                this.assignCommentField = value;
            }
        }
        
        /// <remarks/>
        public string ShipDateStart {
            get {
                return this.shipDateStartField;
            }
            set {
                this.shipDateStartField = value;
            }
        }
        
        /// <remarks/>
        public string ShipDateEnd {
            get {
                return this.shipDateEndField;
            }
            set {
                this.shipDateEndField = value;
            }
        }
        
        /// <remarks/>
        public string Seiban {
            get {
                return this.seibanField;
            }
            set {
                this.seibanField = value;
            }
        }
        
        /// <remarks/>
        public string Kishu {
            get {
                return this.kishuField;
            }
            set {
                this.kishuField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CondS01))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondBase {
        
        private LoginInfo loginInfoField;
        
        private object createDateField;
        
        private string createUserIDField;
        
        private string createUserNameField;
        
        private object updateDateField;
        
        private string updateUserIDField;
        
        private string updateUserNameField;
        
        private object mainteDateField;
        
        private string mainteUserIDField;
        
        private string mainteUserNameField;
        
        private string versionField;
        
        /// <remarks/>
        public LoginInfo LoginInfo {
            get {
                return this.loginInfoField;
            }
            set {
                this.loginInfoField = value;
            }
        }
        
        /// <remarks/>
        public object CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserID {
            get {
                return this.createUserIDField;
            }
            set {
                this.createUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserID {
            get {
                return this.updateUserIDField;
            }
            set {
                this.updateUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserName {
            get {
                return this.updateUserNameField;
            }
            set {
                this.updateUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object MainteDate {
            get {
                return this.mainteDateField;
            }
            set {
                this.mainteDateField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserID {
            get {
                return this.mainteUserIDField;
            }
            set {
                this.mainteUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserName {
            get {
                return this.mainteUserNameField;
            }
            set {
                this.mainteUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class LoginInfo {
        
        private string userIDField;
        
        private string userNameField;
        
        private string pcNameField;
        
        private string[] iPAddressField;
        
        private string roleIDField;
        
        private string roleNameField;
        
        private string languageField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string PcName {
            get {
                return this.pcNameField;
            }
            set {
                this.pcNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetInitShukkaKeikakuCompletedEventHandler(object sender, GetInitShukkaKeikakuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInitShukkaKeikakuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInitShukkaKeikakuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsShukkaKeikakuCompletedEventHandler(object sender, InsShukkaKeikakuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsShukkaKeikakuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsShukkaKeikakuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetBukkenNameListForTorikomiCompletedEventHandler(object sender, GetBukkenNameListForTorikomiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBukkenNameListForTorikomiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBukkenNameListForTorikomiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetConsignListCompletedEventHandler(object sender, GetConsignListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConsignListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConsignListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetShukkamotoCompletedEventHandler(object sender, GetShukkamotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShukkamotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShukkamotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetShukkasakiCompletedEventHandler(object sender, GetShukkasakiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShukkasakiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShukkasakiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetNonyusakiCompletedEventHandler(object sender, GetNonyusakiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonyusakiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonyusakiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdPlanningCompletedEventHandler(object sender, UpdPlanningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdPlanningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdPlanningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsertRevisionCompletedEventHandler(object sender, InsertRevisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetHaitaDataCompletedEventHandler(object sender, GetHaitaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHaitaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHaitaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdateHaitaCompletedEventHandler(object sender, UpdateHaitaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHaitaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHaitaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdateNullHaitaCompletedEventHandler(object sender, UpdateNullHaitaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNullHaitaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNullHaitaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void CheckDisplayConditionCompletedEventHandler(object sender, CheckDisplayConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDisplayConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDisplayConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetShukkaMeisaiCompletedEventHandler(object sender, GetShukkaMeisaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShukkaMeisaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShukkaMeisaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetExistsPictureCompletedEventHandler(object sender, GetExistsPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExistsPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExistsPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetExistsPictureFromDataTableCompletedEventHandler(object sender, GetExistsPictureFromDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExistsPictureFromDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExistsPictureFromDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsShukkaKeikakuMeisaiCompletedEventHandler(object sender, InsShukkaKeikakuMeisaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsShukkaKeikakuMeisaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsShukkaKeikakuMeisaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdShukkaKeikakuMeisaiCompletedEventHandler(object sender, UpdShukkaKeikakuMeisaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdShukkaKeikakuMeisaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdShukkaKeikakuMeisaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelShukkaKeikakuMeisaiCompletedEventHandler(object sender, DelShukkaKeikakuMeisaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelShukkaKeikakuMeisaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelShukkaKeikakuMeisaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetTreeMeisaiCompletedEventHandler(object sender, GetTreeMeisaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTreeMeisaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTreeMeisaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdMoveShipCompletedEventHandler(object sender, UpdMoveShipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdMoveShipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdMoveShipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetKiwakuCompletedEventHandler(object sender, GetKiwakuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKiwakuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKiwakuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DuplicateCaseNoCompletedEventHandler(object sender, DuplicateCaseNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DuplicateCaseNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DuplicateCaseNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetBukkenNameListCompletedEventHandler(object sender, GetBukkenNameListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBukkenNameListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBukkenNameListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetShipListCompletedEventHandler(object sender, GetShipListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShipListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShipListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetTagRenkeiListCompletedEventHandler(object sender, GetTagRenkeiListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTagRenkeiListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTagRenkeiListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetAndLockTagRenkeiListCompletedEventHandler(object sender, GetAndLockTagRenkeiListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAndLockTagRenkeiListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAndLockTagRenkeiListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetEstimateFlagCompletedEventHandler(object sender, GetEstimateFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEstimateFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEstimateFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetShipToForTehaiNoCompletedEventHandler(object sender, GetShipToForTehaiNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShipToForTehaiNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShipToForTehaiNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdTehaimeisaiVersionDataCompletedEventHandler(object sender, UpdTehaimeisaiVersionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdTehaimeisaiVersionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdTehaimeisaiVersionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsTagRenkeiMailCompletedEventHandler(object sender, InsTagRenkeiMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsTagRenkeiMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsTagRenkeiMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetTehaiMeisaiDataForIkkatsuUploadCompletedEventHandler(object sender, GetTehaiMeisaiDataForIkkatsuUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTehaiMeisaiDataForIkkatsuUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTehaiMeisaiDataForIkkatsuUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsManageZumenKeishikiCompletedEventHandler(object sender, InsManageZumenKeishikiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsManageZumenKeishikiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsManageZumenKeishikiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtZumenKeishiki {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void S0100050_GetInitCompletedEventHandler(object sender, S0100050_GetInitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class S0100050_GetInitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal S0100050_GetInitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void S0100050_GetDispCompletedEventHandler(object sender, S0100050_GetDispCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class S0100050_GetDispCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal S0100050_GetDispCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetNisugataBaseDataCompletedEventHandler(object sender, GetNisugataBaseDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNisugataBaseDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNisugataBaseDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void S0100050_GetKiwakuMeisaiCompletedEventHandler(object sender, S0100050_GetKiwakuMeisaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class S0100050_GetKiwakuMeisaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal S0100050_GetKiwakuMeisaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void S0100050_GetBoxListManageCompletedEventHandler(object sender, S0100050_GetBoxListManageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class S0100050_GetBoxListManageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal S0100050_GetBoxListManageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void S0100050_GetPalletListManageCompletedEventHandler(object sender, S0100050_GetPalletListManageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class S0100050_GetPalletListManageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal S0100050_GetPalletListManageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdNisugataCompletedEventHandler(object sender, UpdNisugataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdNisugataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdNisugataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void DelNisugataCompletedEventHandler(object sender, DelNisugataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelNisugataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelNisugataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetNisugataExcelDataCompletedEventHandler(object sender, GetNisugataExcelDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNisugataExcelDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNisugataExcelDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetMailIDCompletedEventHandler(object sender, GetMailIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMailIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMailIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdPackingForExcelDataCompletedEventHandler(object sender, UpdPackingForExcelDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdPackingForExcelDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdPackingForExcelDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetMailSousinRirekiCompletedEventHandler(object sender, GetMailSousinRirekiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMailSousinRirekiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMailSousinRirekiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetNonyusakiForShokaiCompletedEventHandler(object sender, GetNonyusakiForShokaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonyusakiForShokaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonyusakiForShokaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetSeibanCompletedEventHandler(object sender, GetSeibanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeibanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeibanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetKishuCompletedEventHandler(object sender, GetKishuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKishuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKishuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdNonyusakiForGenbayoCompletedEventHandler(object sender, UpdNonyusakiForGenbayoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdNonyusakiForGenbayoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdNonyusakiForGenbayoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SendCondBaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591