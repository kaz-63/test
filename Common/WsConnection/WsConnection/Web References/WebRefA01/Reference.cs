//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.9179
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// このソース コードは Microsoft.VSDesigner、バージョン 2.0.50727.9179 によって自動生成されました。
// 
#pragma warning disable 1591

namespace WsConnection.WebRefA01 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WsA01Soap", Namespace="http://smssrv/")]
    public partial class WsA01 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsExistenceNonyusakiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArDataListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistNonyusakiAndExcleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllARListDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistNonyusakiAndHiyouExcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllARCostListDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSendMailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonyusakiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetARDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetARandInterLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdARInterUnLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsAROperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdAROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArMailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCheckMeisaiDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelectItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommonListFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGokiNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShinchokuKanriNotifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMailIDWithoutUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetARNoWithoutUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckGokiOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsInzuhyoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArShinchokuListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArShinchokuMailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendArShinchokuMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdARUnLockShinchokuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetARInterLockAndShinchokuInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdARShinchokuInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKishuOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGokiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRirekiOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendCondBaseOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsA01() {
            this.Url = global::WsConnection.Properties.Settings.Default.WsConnection_WebRefA01_WsA01;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsExistenceNonyusakiCompletedEventHandler IsExistenceNonyusakiCompleted;
        
        /// <remarks/>
        public event GetArDataListCompletedEventHandler GetArDataListCompleted;
        
        /// <remarks/>
        public event ExistNonyusakiAndExcleCompletedEventHandler ExistNonyusakiAndExcleCompleted;
        
        /// <remarks/>
        public event GetAllARListDataCompletedEventHandler GetAllARListDataCompleted;
        
        /// <remarks/>
        public event ExistNonyusakiAndHiyouExcelCompletedEventHandler ExistNonyusakiAndHiyouExcelCompleted;
        
        /// <remarks/>
        public event GetAllARCostListDataCompletedEventHandler GetAllARCostListDataCompleted;
        
        /// <remarks/>
        public event GetSendMailInfoCompletedEventHandler GetSendMailInfoCompleted;
        
        /// <remarks/>
        public event GetNonyusakiCompletedEventHandler GetNonyusakiCompleted;
        
        /// <remarks/>
        public event GetARDataCompletedEventHandler GetARDataCompleted;
        
        /// <remarks/>
        public event GetARandInterLockCompletedEventHandler GetARandInterLockCompleted;
        
        /// <remarks/>
        public event UpdARInterUnLockCompletedEventHandler UpdARInterUnLockCompleted;
        
        /// <remarks/>
        public event InsARCompletedEventHandler InsARCompleted;
        
        /// <remarks/>
        public event UpdARCompletedEventHandler UpdARCompleted;
        
        /// <remarks/>
        public event GetArMailInfoCompletedEventHandler GetArMailInfoCompleted;
        
        /// <remarks/>
        public event GetCheckMeisaiDataCompletedEventHandler GetCheckMeisaiDataCompleted;
        
        /// <remarks/>
        public event GetSelectItemCompletedEventHandler GetSelectItemCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetCommonListFlagCompletedEventHandler GetCommonListFlagCompleted;
        
        /// <remarks/>
        public event GetGokiNumCompletedEventHandler GetGokiNumCompleted;
        
        /// <remarks/>
        public event GetShinchokuKanriNotifyCompletedEventHandler GetShinchokuKanriNotifyCompleted;
        
        /// <remarks/>
        public event GetMailIDWithoutUpdateCompletedEventHandler GetMailIDWithoutUpdateCompleted;
        
        /// <remarks/>
        public event GetARNoWithoutUpdateCompletedEventHandler GetARNoWithoutUpdateCompleted;
        
        /// <remarks/>
        public event CheckGokiCompletedEventHandler CheckGokiCompleted;
        
        /// <remarks/>
        public event InsInzuhyoCompletedEventHandler InsInzuhyoCompleted;
        
        /// <remarks/>
        public event GetArShinchokuListCompletedEventHandler GetArShinchokuListCompleted;
        
        /// <remarks/>
        public event GetArShinchokuMailInfoCompletedEventHandler GetArShinchokuMailInfoCompleted;
        
        /// <remarks/>
        public event SendArShinchokuMailCompletedEventHandler SendArShinchokuMailCompleted;
        
        /// <remarks/>
        public event UpdARUnLockShinchokuCompletedEventHandler UpdARUnLockShinchokuCompleted;
        
        /// <remarks/>
        public event GetARInterLockAndShinchokuInfoCompletedEventHandler GetARInterLockAndShinchokuInfoCompleted;
        
        /// <remarks/>
        public event UpdARShinchokuInfoCompletedEventHandler UpdARShinchokuInfoCompleted;
        
        /// <remarks/>
        public event GetKishuCompletedEventHandler GetKishuCompleted;
        
        /// <remarks/>
        public event GetGokiCompletedEventHandler GetGokiCompleted;
        
        /// <remarks/>
        public event GetRirekiCompletedEventHandler GetRirekiCompleted;
        
        /// <remarks/>
        public event SendCondBaseCompletedEventHandler SendCondBaseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/IsExistenceNonyusaki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExistenceNonyusaki(CondA1 cond) {
            object[] results = this.Invoke("IsExistenceNonyusaki", new object[] {
                        cond});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExistenceNonyusakiAsync(CondA1 cond) {
            this.IsExistenceNonyusakiAsync(cond, null);
        }
        
        /// <remarks/>
        public void IsExistenceNonyusakiAsync(CondA1 cond, object userState) {
            if ((this.IsExistenceNonyusakiOperationCompleted == null)) {
                this.IsExistenceNonyusakiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistenceNonyusakiOperationCompleted);
            }
            this.InvokeAsync("IsExistenceNonyusaki", new object[] {
                        cond}, this.IsExistenceNonyusakiOperationCompleted, userState);
        }
        
        private void OnIsExistenceNonyusakiOperationCompleted(object arg) {
            if ((this.IsExistenceNonyusakiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistenceNonyusakiCompleted(this, new IsExistenceNonyusakiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetArDataList", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetArDataList(CondA1 cond) {
            object[] results = this.Invoke("GetArDataList", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetArDataListAsync(CondA1 cond) {
            this.GetArDataListAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetArDataListAsync(CondA1 cond, object userState) {
            if ((this.GetArDataListOperationCompleted == null)) {
                this.GetArDataListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArDataListOperationCompleted);
            }
            this.InvokeAsync("GetArDataList", new object[] {
                        cond}, this.GetArDataListOperationCompleted, userState);
        }
        
        private void OnGetArDataListOperationCompleted(object arg) {
            if ((this.GetArDataListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArDataListCompleted(this, new GetArDataListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/ExistNonyusakiAndExcle", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistNonyusakiAndExcle(CondA1 cond, out string errMsgID) {
            object[] results = this.Invoke("ExistNonyusakiAndExcle", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistNonyusakiAndExcleAsync(CondA1 cond) {
            this.ExistNonyusakiAndExcleAsync(cond, null);
        }
        
        /// <remarks/>
        public void ExistNonyusakiAndExcleAsync(CondA1 cond, object userState) {
            if ((this.ExistNonyusakiAndExcleOperationCompleted == null)) {
                this.ExistNonyusakiAndExcleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistNonyusakiAndExcleOperationCompleted);
            }
            this.InvokeAsync("ExistNonyusakiAndExcle", new object[] {
                        cond}, this.ExistNonyusakiAndExcleOperationCompleted, userState);
        }
        
        private void OnExistNonyusakiAndExcleOperationCompleted(object arg) {
            if ((this.ExistNonyusakiAndExcleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistNonyusakiAndExcleCompleted(this, new ExistNonyusakiAndExcleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetAllARListData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllARListData(CondA1 cond) {
            object[] results = this.Invoke("GetAllARListData", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllARListDataAsync(CondA1 cond) {
            this.GetAllARListDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetAllARListDataAsync(CondA1 cond, object userState) {
            if ((this.GetAllARListDataOperationCompleted == null)) {
                this.GetAllARListDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllARListDataOperationCompleted);
            }
            this.InvokeAsync("GetAllARListData", new object[] {
                        cond}, this.GetAllARListDataOperationCompleted, userState);
        }
        
        private void OnGetAllARListDataOperationCompleted(object arg) {
            if ((this.GetAllARListDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllARListDataCompleted(this, new GetAllARListDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/ExistNonyusakiAndHiyouExcel", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistNonyusakiAndHiyouExcel(CondA1 cond, out string errMsgID) {
            object[] results = this.Invoke("ExistNonyusakiAndHiyouExcel", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistNonyusakiAndHiyouExcelAsync(CondA1 cond) {
            this.ExistNonyusakiAndHiyouExcelAsync(cond, null);
        }
        
        /// <remarks/>
        public void ExistNonyusakiAndHiyouExcelAsync(CondA1 cond, object userState) {
            if ((this.ExistNonyusakiAndHiyouExcelOperationCompleted == null)) {
                this.ExistNonyusakiAndHiyouExcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistNonyusakiAndHiyouExcelOperationCompleted);
            }
            this.InvokeAsync("ExistNonyusakiAndHiyouExcel", new object[] {
                        cond}, this.ExistNonyusakiAndHiyouExcelOperationCompleted, userState);
        }
        
        private void OnExistNonyusakiAndHiyouExcelOperationCompleted(object arg) {
            if ((this.ExistNonyusakiAndHiyouExcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistNonyusakiAndHiyouExcelCompleted(this, new ExistNonyusakiAndHiyouExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetAllARCostListData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllARCostListData(CondA1 cond) {
            object[] results = this.Invoke("GetAllARCostListData", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllARCostListDataAsync(CondA1 cond) {
            this.GetAllARCostListDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetAllARCostListDataAsync(CondA1 cond, object userState) {
            if ((this.GetAllARCostListDataOperationCompleted == null)) {
                this.GetAllARCostListDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllARCostListDataOperationCompleted);
            }
            this.InvokeAsync("GetAllARCostListData", new object[] {
                        cond}, this.GetAllARCostListDataOperationCompleted, userState);
        }
        
        private void OnGetAllARCostListDataOperationCompleted(object arg) {
            if ((this.GetAllARCostListDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllARCostListDataCompleted(this, new GetAllARCostListDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetSendMailInfo", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSendMailInfo(CondA1 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetSendMailInfo", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSendMailInfoAsync(CondA1 cond) {
            this.GetSendMailInfoAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetSendMailInfoAsync(CondA1 cond, object userState) {
            if ((this.GetSendMailInfoOperationCompleted == null)) {
                this.GetSendMailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSendMailInfoOperationCompleted);
            }
            this.InvokeAsync("GetSendMailInfo", new object[] {
                        cond}, this.GetSendMailInfoOperationCompleted, userState);
        }
        
        private void OnGetSendMailInfoOperationCompleted(object arg) {
            if ((this.GetSendMailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSendMailInfoCompleted(this, new GetSendMailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetNonyusaki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNonyusaki(CondA1 cond) {
            object[] results = this.Invoke("GetNonyusaki", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonyusakiAsync(CondA1 cond) {
            this.GetNonyusakiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetNonyusakiAsync(CondA1 cond, object userState) {
            if ((this.GetNonyusakiOperationCompleted == null)) {
                this.GetNonyusakiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonyusakiOperationCompleted);
            }
            this.InvokeAsync("GetNonyusaki", new object[] {
                        cond}, this.GetNonyusakiOperationCompleted, userState);
        }
        
        private void OnGetNonyusakiOperationCompleted(object arg) {
            if ((this.GetNonyusakiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonyusakiCompleted(this, new GetNonyusakiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetARData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetARData(CondA1 cond) {
            object[] results = this.Invoke("GetARData", new object[] {
                        cond});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetARDataAsync(CondA1 cond) {
            this.GetARDataAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetARDataAsync(CondA1 cond, object userState) {
            if ((this.GetARDataOperationCompleted == null)) {
                this.GetARDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetARDataOperationCompleted);
            }
            this.InvokeAsync("GetARData", new object[] {
                        cond}, this.GetARDataOperationCompleted, userState);
        }
        
        private void OnGetARDataOperationCompleted(object arg) {
            if ((this.GetARDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetARDataCompleted(this, new GetARDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetARandInterLock", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetARandInterLock(CondA1 cond, out System.Data.DataSet ds, out string errMsgID) {
            object[] results = this.Invoke("GetARandInterLock", new object[] {
                        cond});
            ds = ((System.Data.DataSet)(results[1]));
            errMsgID = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetARandInterLockAsync(CondA1 cond) {
            this.GetARandInterLockAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetARandInterLockAsync(CondA1 cond, object userState) {
            if ((this.GetARandInterLockOperationCompleted == null)) {
                this.GetARandInterLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetARandInterLockOperationCompleted);
            }
            this.InvokeAsync("GetARandInterLock", new object[] {
                        cond}, this.GetARandInterLockOperationCompleted, userState);
        }
        
        private void OnGetARandInterLockOperationCompleted(object arg) {
            if ((this.GetARandInterLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetARandInterLockCompleted(this, new GetARandInterLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdARInterUnLock", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdARInterUnLock(CondA1 cond, System.Data.DataTable dt) {
            object[] results = this.Invoke("UpdARInterUnLock", new object[] {
                        cond,
                        dt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdARInterUnLockAsync(CondA1 cond, System.Data.DataTable dt) {
            this.UpdARInterUnLockAsync(cond, dt, null);
        }
        
        /// <remarks/>
        public void UpdARInterUnLockAsync(CondA1 cond, System.Data.DataTable dt, object userState) {
            if ((this.UpdARInterUnLockOperationCompleted == null)) {
                this.UpdARInterUnLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdARInterUnLockOperationCompleted);
            }
            this.InvokeAsync("UpdARInterUnLock", new object[] {
                        cond,
                        dt}, this.UpdARInterUnLockOperationCompleted, userState);
        }
        
        private void OnUpdARInterUnLockOperationCompleted(object arg) {
            if ((this.UpdARInterUnLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdARInterUnLockCompleted(this, new UpdARInterUnLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsAR", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsAR(CondA1 cond, System.Data.DataSet ds, out string nonyusakiCd, out string arNo, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("InsAR", new object[] {
                        cond,
                        ds});
            nonyusakiCd = ((string)(results[1]));
            arNo = ((string)(results[2]));
            errMsgID = ((string)(results[3]));
            args = ((string[])(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsARAsync(CondA1 cond, System.Data.DataSet ds) {
            this.InsARAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void InsARAsync(CondA1 cond, System.Data.DataSet ds, object userState) {
            if ((this.InsAROperationCompleted == null)) {
                this.InsAROperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsAROperationCompleted);
            }
            this.InvokeAsync("InsAR", new object[] {
                        cond,
                        ds}, this.InsAROperationCompleted, userState);
        }
        
        private void OnInsAROperationCompleted(object arg) {
            if ((this.InsARCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsARCompleted(this, new InsARCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdAR", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdAR(CondA1 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdAR", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdARAsync(CondA1 cond, System.Data.DataSet ds) {
            this.UpdARAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdARAsync(CondA1 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdAROperationCompleted == null)) {
                this.UpdAROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdAROperationCompleted);
            }
            this.InvokeAsync("UpdAR", new object[] {
                        cond,
                        ds}, this.UpdAROperationCompleted, userState);
        }
        
        private void OnUpdAROperationCompleted(object arg) {
            if ((this.UpdARCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdARCompleted(this, new UpdARCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetArMailInfo", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetArMailInfo(CondA1 cond, out string errMsgID, out string[] args, out bool _isNotify) {
            object[] results = this.Invoke("GetArMailInfo", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            _isNotify = ((bool)(results[3]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetArMailInfoAsync(CondA1 cond) {
            this.GetArMailInfoAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetArMailInfoAsync(CondA1 cond, object userState) {
            if ((this.GetArMailInfoOperationCompleted == null)) {
                this.GetArMailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArMailInfoOperationCompleted);
            }
            this.InvokeAsync("GetArMailInfo", new object[] {
                        cond}, this.GetArMailInfoOperationCompleted, userState);
        }
        
        private void OnGetArMailInfoOperationCompleted(object arg) {
            if ((this.GetArMailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArMailInfoCompleted(this, new GetArMailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetCheckMeisaiData", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetCheckMeisaiData(CondA1 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetCheckMeisaiData", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetCheckMeisaiDataAsync(CondA1 cond, System.Data.DataSet ds) {
            this.GetCheckMeisaiDataAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void GetCheckMeisaiDataAsync(CondA1 cond, System.Data.DataSet ds, object userState) {
            if ((this.GetCheckMeisaiDataOperationCompleted == null)) {
                this.GetCheckMeisaiDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCheckMeisaiDataOperationCompleted);
            }
            this.InvokeAsync("GetCheckMeisaiData", new object[] {
                        cond,
                        ds}, this.GetCheckMeisaiDataOperationCompleted, userState);
        }
        
        private void OnGetCheckMeisaiDataOperationCompleted(object arg) {
            if ((this.GetCheckMeisaiDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCheckMeisaiDataCompleted(this, new GetCheckMeisaiDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetSelectItem", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSelectItem(CondA1 cond) {
            object[] results = this.Invoke("GetSelectItem", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelectItemAsync(CondA1 cond) {
            this.GetSelectItemAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetSelectItemAsync(CondA1 cond, object userState) {
            if ((this.GetSelectItemOperationCompleted == null)) {
                this.GetSelectItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelectItemOperationCompleted);
            }
            this.InvokeAsync("GetSelectItem", new object[] {
                        cond}, this.GetSelectItemOperationCompleted, userState);
        }
        
        private void OnGetSelectItemOperationCompleted(object arg) {
            if ((this.GetSelectItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelectItemCompleted(this, new GetSelectItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetUser", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUser(CondA1 cond) {
            object[] results = this.Invoke("GetUser", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(CondA1 cond) {
            this.GetUserAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(CondA1 cond, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        cond}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetCommonListFlag", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCommonListFlag(CondA1 cond) {
            object[] results = this.Invoke("GetCommonListFlag", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommonListFlagAsync(CondA1 cond) {
            this.GetCommonListFlagAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetCommonListFlagAsync(CondA1 cond, object userState) {
            if ((this.GetCommonListFlagOperationCompleted == null)) {
                this.GetCommonListFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommonListFlagOperationCompleted);
            }
            this.InvokeAsync("GetCommonListFlag", new object[] {
                        cond}, this.GetCommonListFlagOperationCompleted, userState);
        }
        
        private void OnGetCommonListFlagOperationCompleted(object arg) {
            if ((this.GetCommonListFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommonListFlagCompleted(this, new GetCommonListFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetGokiNum", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetGokiNum(CondA1 cond) {
            object[] results = this.Invoke("GetGokiNum", new object[] {
                        cond});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetGokiNumAsync(CondA1 cond) {
            this.GetGokiNumAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetGokiNumAsync(CondA1 cond, object userState) {
            if ((this.GetGokiNumOperationCompleted == null)) {
                this.GetGokiNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGokiNumOperationCompleted);
            }
            this.InvokeAsync("GetGokiNum", new object[] {
                        cond}, this.GetGokiNumOperationCompleted, userState);
        }
        
        private void OnGetGokiNumOperationCompleted(object arg) {
            if ((this.GetGokiNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGokiNumCompleted(this, new GetGokiNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetShinchokuKanriNotify", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetShinchokuKanriNotify(CondA1 cond) {
            object[] results = this.Invoke("GetShinchokuKanriNotify", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetShinchokuKanriNotifyAsync(CondA1 cond) {
            this.GetShinchokuKanriNotifyAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetShinchokuKanriNotifyAsync(CondA1 cond, object userState) {
            if ((this.GetShinchokuKanriNotifyOperationCompleted == null)) {
                this.GetShinchokuKanriNotifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShinchokuKanriNotifyOperationCompleted);
            }
            this.InvokeAsync("GetShinchokuKanriNotify", new object[] {
                        cond}, this.GetShinchokuKanriNotifyOperationCompleted, userState);
        }
        
        private void OnGetShinchokuKanriNotifyOperationCompleted(object arg) {
            if ((this.GetShinchokuKanriNotifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShinchokuKanriNotifyCompleted(this, new GetShinchokuKanriNotifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetMailIDWithoutUpdate", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMailIDWithoutUpdate(CondA1 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetMailIDWithoutUpdate", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMailIDWithoutUpdateAsync(CondA1 cond) {
            this.GetMailIDWithoutUpdateAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetMailIDWithoutUpdateAsync(CondA1 cond, object userState) {
            if ((this.GetMailIDWithoutUpdateOperationCompleted == null)) {
                this.GetMailIDWithoutUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMailIDWithoutUpdateOperationCompleted);
            }
            this.InvokeAsync("GetMailIDWithoutUpdate", new object[] {
                        cond}, this.GetMailIDWithoutUpdateOperationCompleted, userState);
        }
        
        private void OnGetMailIDWithoutUpdateOperationCompleted(object arg) {
            if ((this.GetMailIDWithoutUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMailIDWithoutUpdateCompleted(this, new GetMailIDWithoutUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetARNoWithoutUpdate", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetARNoWithoutUpdate(CondA1 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetARNoWithoutUpdate", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetARNoWithoutUpdateAsync(CondA1 cond) {
            this.GetARNoWithoutUpdateAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetARNoWithoutUpdateAsync(CondA1 cond, object userState) {
            if ((this.GetARNoWithoutUpdateOperationCompleted == null)) {
                this.GetARNoWithoutUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetARNoWithoutUpdateOperationCompleted);
            }
            this.InvokeAsync("GetARNoWithoutUpdate", new object[] {
                        cond}, this.GetARNoWithoutUpdateOperationCompleted, userState);
        }
        
        private void OnGetARNoWithoutUpdateOperationCompleted(object arg) {
            if ((this.GetARNoWithoutUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetARNoWithoutUpdateCompleted(this, new GetARNoWithoutUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/CheckGoki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckGoki(CondA1 cond, System.Data.DataTable dt, out string errMsgID, out System.Data.DataTable dtMessage, out string[] args) {
            object[] results = this.Invoke("CheckGoki", new object[] {
                        cond,
                        dt});
            errMsgID = ((string)(results[1]));
            dtMessage = ((System.Data.DataTable)(results[2]));
            args = ((string[])(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckGokiAsync(CondA1 cond, System.Data.DataTable dt) {
            this.CheckGokiAsync(cond, dt, null);
        }
        
        /// <remarks/>
        public void CheckGokiAsync(CondA1 cond, System.Data.DataTable dt, object userState) {
            if ((this.CheckGokiOperationCompleted == null)) {
                this.CheckGokiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckGokiOperationCompleted);
            }
            this.InvokeAsync("CheckGoki", new object[] {
                        cond,
                        dt}, this.CheckGokiOperationCompleted, userState);
        }
        
        private void OnCheckGokiOperationCompleted(object arg) {
            if ((this.CheckGokiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckGokiCompleted(this, new CheckGokiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/InsInzuhyo", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsInzuhyo(CondA1 cond, System.Data.DataTable dt, out string errMsgID, out System.Data.DataTable dtMessage, out string[] args) {
            object[] results = this.Invoke("InsInzuhyo", new object[] {
                        cond,
                        dt});
            errMsgID = ((string)(results[1]));
            dtMessage = ((System.Data.DataTable)(results[2]));
            args = ((string[])(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsInzuhyoAsync(CondA1 cond, System.Data.DataTable dt) {
            this.InsInzuhyoAsync(cond, dt, null);
        }
        
        /// <remarks/>
        public void InsInzuhyoAsync(CondA1 cond, System.Data.DataTable dt, object userState) {
            if ((this.InsInzuhyoOperationCompleted == null)) {
                this.InsInzuhyoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsInzuhyoOperationCompleted);
            }
            this.InvokeAsync("InsInzuhyo", new object[] {
                        cond,
                        dt}, this.InsInzuhyoOperationCompleted, userState);
        }
        
        private void OnInsInzuhyoOperationCompleted(object arg) {
            if ((this.InsInzuhyoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsInzuhyoCompleted(this, new InsInzuhyoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetArShinchokuList", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetArShinchokuList(CondA1 cond) {
            object[] results = this.Invoke("GetArShinchokuList", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetArShinchokuListAsync(CondA1 cond) {
            this.GetArShinchokuListAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetArShinchokuListAsync(CondA1 cond, object userState) {
            if ((this.GetArShinchokuListOperationCompleted == null)) {
                this.GetArShinchokuListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArShinchokuListOperationCompleted);
            }
            this.InvokeAsync("GetArShinchokuList", new object[] {
                        cond}, this.GetArShinchokuListOperationCompleted, userState);
        }
        
        private void OnGetArShinchokuListOperationCompleted(object arg) {
            if ((this.GetArShinchokuListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArShinchokuListCompleted(this, new GetArShinchokuListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetArShinchokuMailInfo", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetArShinchokuMailInfo(CondA1 cond, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetArShinchokuMailInfo", new object[] {
                        cond});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetArShinchokuMailInfoAsync(CondA1 cond) {
            this.GetArShinchokuMailInfoAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetArShinchokuMailInfoAsync(CondA1 cond, object userState) {
            if ((this.GetArShinchokuMailInfoOperationCompleted == null)) {
                this.GetArShinchokuMailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArShinchokuMailInfoOperationCompleted);
            }
            this.InvokeAsync("GetArShinchokuMailInfo", new object[] {
                        cond}, this.GetArShinchokuMailInfoOperationCompleted, userState);
        }
        
        private void OnGetArShinchokuMailInfoOperationCompleted(object arg) {
            if ((this.GetArShinchokuMailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArShinchokuMailInfoCompleted(this, new GetArShinchokuMailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SendArShinchokuMail", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendArShinchokuMail(CondA1 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("SendArShinchokuMail", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendArShinchokuMailAsync(CondA1 cond, System.Data.DataSet ds) {
            this.SendArShinchokuMailAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void SendArShinchokuMailAsync(CondA1 cond, System.Data.DataSet ds, object userState) {
            if ((this.SendArShinchokuMailOperationCompleted == null)) {
                this.SendArShinchokuMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendArShinchokuMailOperationCompleted);
            }
            this.InvokeAsync("SendArShinchokuMail", new object[] {
                        cond,
                        ds}, this.SendArShinchokuMailOperationCompleted, userState);
        }
        
        private void OnSendArShinchokuMailOperationCompleted(object arg) {
            if ((this.SendArShinchokuMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendArShinchokuMailCompleted(this, new SendArShinchokuMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdARUnLockShinchoku", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdARUnLockShinchoku(CondA1 cond, System.Data.DataTable dt, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdARUnLockShinchoku", new object[] {
                        cond,
                        dt});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdARUnLockShinchokuAsync(CondA1 cond, System.Data.DataTable dt) {
            this.UpdARUnLockShinchokuAsync(cond, dt, null);
        }
        
        /// <remarks/>
        public void UpdARUnLockShinchokuAsync(CondA1 cond, System.Data.DataTable dt, object userState) {
            if ((this.UpdARUnLockShinchokuOperationCompleted == null)) {
                this.UpdARUnLockShinchokuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdARUnLockShinchokuOperationCompleted);
            }
            this.InvokeAsync("UpdARUnLockShinchoku", new object[] {
                        cond,
                        dt}, this.UpdARUnLockShinchokuOperationCompleted, userState);
        }
        
        private void OnUpdARUnLockShinchokuOperationCompleted(object arg) {
            if ((this.UpdARUnLockShinchokuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdARUnLockShinchokuCompleted(this, new UpdARUnLockShinchokuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetARInterLockAndShinchokuInfo", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetARInterLockAndShinchokuInfo(CondA1 cond, System.Data.DataTable dt, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("GetARInterLockAndShinchokuInfo", new object[] {
                        cond,
                        dt});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetARInterLockAndShinchokuInfoAsync(CondA1 cond, System.Data.DataTable dt) {
            this.GetARInterLockAndShinchokuInfoAsync(cond, dt, null);
        }
        
        /// <remarks/>
        public void GetARInterLockAndShinchokuInfoAsync(CondA1 cond, System.Data.DataTable dt, object userState) {
            if ((this.GetARInterLockAndShinchokuInfoOperationCompleted == null)) {
                this.GetARInterLockAndShinchokuInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetARInterLockAndShinchokuInfoOperationCompleted);
            }
            this.InvokeAsync("GetARInterLockAndShinchokuInfo", new object[] {
                        cond,
                        dt}, this.GetARInterLockAndShinchokuInfoOperationCompleted, userState);
        }
        
        private void OnGetARInterLockAndShinchokuInfoOperationCompleted(object arg) {
            if ((this.GetARInterLockAndShinchokuInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetARInterLockAndShinchokuInfoCompleted(this, new GetARInterLockAndShinchokuInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/UpdARShinchokuInfo", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdARShinchokuInfo(CondA1 cond, System.Data.DataSet ds, out string errMsgID, out string[] args) {
            object[] results = this.Invoke("UpdARShinchokuInfo", new object[] {
                        cond,
                        ds});
            errMsgID = ((string)(results[1]));
            args = ((string[])(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdARShinchokuInfoAsync(CondA1 cond, System.Data.DataSet ds) {
            this.UpdARShinchokuInfoAsync(cond, ds, null);
        }
        
        /// <remarks/>
        public void UpdARShinchokuInfoAsync(CondA1 cond, System.Data.DataSet ds, object userState) {
            if ((this.UpdARShinchokuInfoOperationCompleted == null)) {
                this.UpdARShinchokuInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdARShinchokuInfoOperationCompleted);
            }
            this.InvokeAsync("UpdARShinchokuInfo", new object[] {
                        cond,
                        ds}, this.UpdARShinchokuInfoOperationCompleted, userState);
        }
        
        private void OnUpdARShinchokuInfoOperationCompleted(object arg) {
            if ((this.UpdARShinchokuInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdARShinchokuInfoCompleted(this, new UpdARShinchokuInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetKishu", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetKishu(CondA1 cond) {
            object[] results = this.Invoke("GetKishu", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetKishuAsync(CondA1 cond) {
            this.GetKishuAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetKishuAsync(CondA1 cond, object userState) {
            if ((this.GetKishuOperationCompleted == null)) {
                this.GetKishuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKishuOperationCompleted);
            }
            this.InvokeAsync("GetKishu", new object[] {
                        cond}, this.GetKishuOperationCompleted, userState);
        }
        
        private void OnGetKishuOperationCompleted(object arg) {
            if ((this.GetKishuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKishuCompleted(this, new GetKishuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetGoki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGoki(CondA1 cond) {
            object[] results = this.Invoke("GetGoki", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGokiAsync(CondA1 cond) {
            this.GetGokiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetGokiAsync(CondA1 cond, object userState) {
            if ((this.GetGokiOperationCompleted == null)) {
                this.GetGokiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGokiOperationCompleted);
            }
            this.InvokeAsync("GetGoki", new object[] {
                        cond}, this.GetGokiOperationCompleted, userState);
        }
        
        private void OnGetGokiOperationCompleted(object arg) {
            if ((this.GetGokiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGokiCompleted(this, new GetGokiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/GetRireki", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRireki(CondA1 cond) {
            object[] results = this.Invoke("GetRireki", new object[] {
                        cond});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRirekiAsync(CondA1 cond) {
            this.GetRirekiAsync(cond, null);
        }
        
        /// <remarks/>
        public void GetRirekiAsync(CondA1 cond, object userState) {
            if ((this.GetRirekiOperationCompleted == null)) {
                this.GetRirekiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRirekiOperationCompleted);
            }
            this.InvokeAsync("GetRireki", new object[] {
                        cond}, this.GetRirekiOperationCompleted, userState);
        }
        
        private void OnGetRirekiOperationCompleted(object arg) {
            if ((this.GetRirekiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRirekiCompleted(this, new GetRirekiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smssrv/SendCondBase", RequestNamespace="http://smssrv/", ResponseNamespace="http://smssrv/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendCondBase(CondBase cond) {
            this.Invoke("SendCondBase", new object[] {
                        cond});
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond) {
            this.SendCondBaseAsync(cond, null);
        }
        
        /// <remarks/>
        public void SendCondBaseAsync(CondBase cond, object userState) {
            if ((this.SendCondBaseOperationCompleted == null)) {
                this.SendCondBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCondBaseOperationCompleted);
            }
            this.InvokeAsync("SendCondBase", new object[] {
                        cond}, this.SendCondBaseOperationCompleted, userState);
        }
        
        private void OnSendCondBaseOperationCompleted(object arg) {
            if ((this.SendCondBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCondBaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondA1 : CondBase {
        
        private string shukkaFlagField;
        
        private string nonyusakiCDField;
        
        private string nonyusakiNameField;
        
        private string listFlagField;
        
        private string arNoField;
        
        private string jyokyoFlagField;
        
        private string jyokyoFlagARField;
        
        private string taisakuField;
        
        private string girenNoField;
        
        private string genchiTehaisakiField;
        
        private string listFlagName0Field;
        
        private string listFlagName1Field;
        
        private string listFlagName2Field;
        
        private string listFlagName3Field;
        
        private string listFlagName4Field;
        
        private string listFlagName5Field;
        
        private string listFlagName6Field;
        
        private string listFlagName7Field;
        
        private System.Nullable<System.DateTime> updateDateFromField;
        
        private System.Nullable<System.DateTime> updateDateToField;
        
        private string kishuField;
        
        private string gokiField;
        
        private char separatorRangeField;
        
        private char separatorItemField;
        
        private string dateKubunField;
        
        private string selectGroupCodeField;
        
        private string bukkenNoField;
        
        private bool isTorokuField;
        
        private bool isShinchokuField;
        
        private string isGenchiShukkaJyokyoField;
        
        private string mailIDTempField;
        
        private string arNoTempField;
        
        private string filePathTempField;
        
        /// <remarks/>
        public string ShukkaFlag {
            get {
                return this.shukkaFlagField;
            }
            set {
                this.shukkaFlagField = value;
            }
        }
        
        /// <remarks/>
        public string NonyusakiCD {
            get {
                return this.nonyusakiCDField;
            }
            set {
                this.nonyusakiCDField = value;
            }
        }
        
        /// <remarks/>
        public string NonyusakiName {
            get {
                return this.nonyusakiNameField;
            }
            set {
                this.nonyusakiNameField = value;
            }
        }
        
        /// <remarks/>
        public string ListFlag {
            get {
                return this.listFlagField;
            }
            set {
                this.listFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ArNo {
            get {
                return this.arNoField;
            }
            set {
                this.arNoField = value;
            }
        }
        
        /// <remarks/>
        public string JyokyoFlag {
            get {
                return this.jyokyoFlagField;
            }
            set {
                this.jyokyoFlagField = value;
            }
        }
        
        /// <remarks/>
        public string JyokyoFlagAR {
            get {
                return this.jyokyoFlagARField;
            }
            set {
                this.jyokyoFlagARField = value;
            }
        }
        
        /// <remarks/>
        public string Taisaku {
            get {
                return this.taisakuField;
            }
            set {
                this.taisakuField = value;
            }
        }
        
        /// <remarks/>
        public string GirenNo {
            get {
                return this.girenNoField;
            }
            set {
                this.girenNoField = value;
            }
        }
        
        /// <remarks/>
        public string GenchiTehaisaki {
            get {
                return this.genchiTehaisakiField;
            }
            set {
                this.genchiTehaisakiField = value;
            }
        }
        
        /// <remarks/>
        public string ListFlagName0 {
            get {
                return this.listFlagName0Field;
            }
            set {
                this.listFlagName0Field = value;
            }
        }
        
        /// <remarks/>
        public string ListFlagName1 {
            get {
                return this.listFlagName1Field;
            }
            set {
                this.listFlagName1Field = value;
            }
        }
        
        /// <remarks/>
        public string ListFlagName2 {
            get {
                return this.listFlagName2Field;
            }
            set {
                this.listFlagName2Field = value;
            }
        }
        
        /// <remarks/>
        public string ListFlagName3 {
            get {
                return this.listFlagName3Field;
            }
            set {
                this.listFlagName3Field = value;
            }
        }
        
        /// <remarks/>
        public string ListFlagName4 {
            get {
                return this.listFlagName4Field;
            }
            set {
                this.listFlagName4Field = value;
            }
        }
        
        /// <remarks/>
        public string ListFlagName5 {
            get {
                return this.listFlagName5Field;
            }
            set {
                this.listFlagName5Field = value;
            }
        }
        
        /// <remarks/>
        public string ListFlagName6 {
            get {
                return this.listFlagName6Field;
            }
            set {
                this.listFlagName6Field = value;
            }
        }
        
        /// <remarks/>
        public string ListFlagName7 {
            get {
                return this.listFlagName7Field;
            }
            set {
                this.listFlagName7Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateDateFrom {
            get {
                return this.updateDateFromField;
            }
            set {
                this.updateDateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateDateTo {
            get {
                return this.updateDateToField;
            }
            set {
                this.updateDateToField = value;
            }
        }
        
        /// <remarks/>
        public string Kishu {
            get {
                return this.kishuField;
            }
            set {
                this.kishuField = value;
            }
        }
        
        /// <remarks/>
        public string Goki {
            get {
                return this.gokiField;
            }
            set {
                this.gokiField = value;
            }
        }
        
        /// <remarks/>
        public char SeparatorRange {
            get {
                return this.separatorRangeField;
            }
            set {
                this.separatorRangeField = value;
            }
        }
        
        /// <remarks/>
        public char SeparatorItem {
            get {
                return this.separatorItemField;
            }
            set {
                this.separatorItemField = value;
            }
        }
        
        /// <remarks/>
        public string DateKubun {
            get {
                return this.dateKubunField;
            }
            set {
                this.dateKubunField = value;
            }
        }
        
        /// <remarks/>
        public string SelectGroupCode {
            get {
                return this.selectGroupCodeField;
            }
            set {
                this.selectGroupCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BukkenNo {
            get {
                return this.bukkenNoField;
            }
            set {
                this.bukkenNoField = value;
            }
        }
        
        /// <remarks/>
        public bool IsToroku {
            get {
                return this.isTorokuField;
            }
            set {
                this.isTorokuField = value;
            }
        }
        
        /// <remarks/>
        public bool IsShinchoku {
            get {
                return this.isShinchokuField;
            }
            set {
                this.isShinchokuField = value;
            }
        }
        
        /// <remarks/>
        public string IsGenchiShukkaJyokyo {
            get {
                return this.isGenchiShukkaJyokyoField;
            }
            set {
                this.isGenchiShukkaJyokyoField = value;
            }
        }
        
        /// <remarks/>
        public string MailIDTemp {
            get {
                return this.mailIDTempField;
            }
            set {
                this.mailIDTempField = value;
            }
        }
        
        /// <remarks/>
        public string ArNoTemp {
            get {
                return this.arNoTempField;
            }
            set {
                this.arNoTempField = value;
            }
        }
        
        /// <remarks/>
        public string FilePathTemp {
            get {
                return this.filePathTempField;
            }
            set {
                this.filePathTempField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CondA1))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class CondBase {
        
        private LoginInfo loginInfoField;
        
        private object createDateField;
        
        private string createUserIDField;
        
        private string createUserNameField;
        
        private object updateDateField;
        
        private string updateUserIDField;
        
        private string updateUserNameField;
        
        private object mainteDateField;
        
        private string mainteUserIDField;
        
        private string mainteUserNameField;
        
        private string versionField;
        
        /// <remarks/>
        public LoginInfo LoginInfo {
            get {
                return this.loginInfoField;
            }
            set {
                this.loginInfoField = value;
            }
        }
        
        /// <remarks/>
        public object CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserID {
            get {
                return this.createUserIDField;
            }
            set {
                this.createUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object UpdateDate {
            get {
                return this.updateDateField;
            }
            set {
                this.updateDateField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserID {
            get {
                return this.updateUserIDField;
            }
            set {
                this.updateUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserName {
            get {
                return this.updateUserNameField;
            }
            set {
                this.updateUserNameField = value;
            }
        }
        
        /// <remarks/>
        public object MainteDate {
            get {
                return this.mainteDateField;
            }
            set {
                this.mainteDateField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserID {
            get {
                return this.mainteUserIDField;
            }
            set {
                this.mainteUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string MainteUserName {
            get {
                return this.mainteUserNameField;
            }
            set {
                this.mainteUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9149")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smssrv/")]
    public partial class LoginInfo {
        
        private string userIDField;
        
        private string userNameField;
        
        private string pcNameField;
        
        private string[] iPAddressField;
        
        private string roleIDField;
        
        private string roleNameField;
        
        private string languageField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string PcName {
            get {
                return this.pcNameField;
            }
            set {
                this.pcNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void IsExistenceNonyusakiCompletedEventHandler(object sender, IsExistenceNonyusakiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExistenceNonyusakiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExistenceNonyusakiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetArDataListCompletedEventHandler(object sender, GetArDataListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArDataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArDataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void ExistNonyusakiAndExcleCompletedEventHandler(object sender, ExistNonyusakiAndExcleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistNonyusakiAndExcleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistNonyusakiAndExcleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetAllARListDataCompletedEventHandler(object sender, GetAllARListDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllARListDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllARListDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void ExistNonyusakiAndHiyouExcelCompletedEventHandler(object sender, ExistNonyusakiAndHiyouExcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistNonyusakiAndHiyouExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistNonyusakiAndHiyouExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetAllARCostListDataCompletedEventHandler(object sender, GetAllARCostListDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllARCostListDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllARCostListDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetSendMailInfoCompletedEventHandler(object sender, GetSendMailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSendMailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSendMailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetNonyusakiCompletedEventHandler(object sender, GetNonyusakiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonyusakiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonyusakiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetARDataCompletedEventHandler(object sender, GetARDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetARDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetARDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetARandInterLockCompletedEventHandler(object sender, GetARandInterLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetARandInterLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetARandInterLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet ds {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdARInterUnLockCompletedEventHandler(object sender, UpdARInterUnLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdARInterUnLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdARInterUnLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsARCompletedEventHandler(object sender, InsARCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string nonyusakiCd {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string arNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdARCompletedEventHandler(object sender, UpdARCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetArMailInfoCompletedEventHandler(object sender, GetArMailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArMailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArMailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool _isNotify {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetCheckMeisaiDataCompletedEventHandler(object sender, GetCheckMeisaiDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCheckMeisaiDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCheckMeisaiDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetSelectItemCompletedEventHandler(object sender, GetSelectItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelectItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelectItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetCommonListFlagCompletedEventHandler(object sender, GetCommonListFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommonListFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommonListFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetGokiNumCompletedEventHandler(object sender, GetGokiNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGokiNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGokiNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetShinchokuKanriNotifyCompletedEventHandler(object sender, GetShinchokuKanriNotifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShinchokuKanriNotifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShinchokuKanriNotifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetMailIDWithoutUpdateCompletedEventHandler(object sender, GetMailIDWithoutUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMailIDWithoutUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMailIDWithoutUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetARNoWithoutUpdateCompletedEventHandler(object sender, GetARNoWithoutUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetARNoWithoutUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetARNoWithoutUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void CheckGokiCompletedEventHandler(object sender, CheckGokiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckGokiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckGokiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void InsInzuhyoCompletedEventHandler(object sender, InsInzuhyoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsInzuhyoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsInzuhyoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dtMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetArShinchokuListCompletedEventHandler(object sender, GetArShinchokuListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArShinchokuListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArShinchokuListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetArShinchokuMailInfoCompletedEventHandler(object sender, GetArShinchokuMailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArShinchokuMailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArShinchokuMailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SendArShinchokuMailCompletedEventHandler(object sender, SendArShinchokuMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendArShinchokuMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendArShinchokuMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdARUnLockShinchokuCompletedEventHandler(object sender, UpdARUnLockShinchokuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdARUnLockShinchokuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdARUnLockShinchokuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetARInterLockAndShinchokuInfoCompletedEventHandler(object sender, GetARInterLockAndShinchokuInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetARInterLockAndShinchokuInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetARInterLockAndShinchokuInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void UpdARShinchokuInfoCompletedEventHandler(object sender, UpdARShinchokuInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdARShinchokuInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdARShinchokuInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errMsgID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] args {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetKishuCompletedEventHandler(object sender, GetKishuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKishuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKishuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetGokiCompletedEventHandler(object sender, GetGokiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGokiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGokiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void GetRirekiCompletedEventHandler(object sender, GetRirekiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRirekiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRirekiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9149")]
    public delegate void SendCondBaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591